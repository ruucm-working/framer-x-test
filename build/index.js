(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("framer"), require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["framer", "react"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("framer"), require("react")) : factory(root["Framer"], root["React"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./package.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/process/browser.js":
/*!*************************************************************************************************!*\
  !*** /Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/process/browser.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/process/browser.js\n");

/***/ }),

/***/ "../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9GcmFtZXIgWCBCZXRhLmFwcC9Db250ZW50cy9SZXNvdXJjZXMvU2VydmVyL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XHJcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcclxuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.device-skin-apple-iphone8-gold/build/index.js":
/*!****************************************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.device-skin-apple-iphone8-gold/build/index.js ***!
  \****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSkin {\n    constructor() {\n        this.image = \"device.png\";\n        this.imageWidth = 871;\n        this.imageHeight = 1776;\n        this.padding = 40;\n        this.background = \"black\";\n    }\n}\nexports.DeviceSkin = DeviceSkin;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1hcHBsZS1pcGhvbmU4LWdvbGQvYnVpbGQvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uLy4uL0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9AZnJhbWVyL2ZyYW1lci5kZXZpY2Utc2tpbi1hcHBsZS1pcGhvbmU4LWdvbGQvYnVpbGQvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIERldmljZVNraW4ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmltYWdlID0gXCJkZXZpY2UucG5nXCI7XG4gICAgICAgIHRoaXMuaW1hZ2VXaWR0aCA9IDg3MTtcbiAgICAgICAgdGhpcy5pbWFnZUhlaWdodCA9IDE3NzY7XG4gICAgICAgIHRoaXMucGFkZGluZyA9IDQwO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBcImJsYWNrXCI7XG4gICAgfVxufVxuZXhwb3J0cy5EZXZpY2VTa2luID0gRGV2aWNlU2tpbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.device-skin-apple-iphone8-gold/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.examples/build/index.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.examples/build/index.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! framer */ \"framer\"), __webpack_require__(/*! react */ \"react\"));\n\telse { var i, a; }\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./package.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\":\n/*!***************************************!*\\\n  !*** ./code sync \\.(t|j)s(x?)|\\.css$ ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var map = {\\n\\t\\\"./ActionSheet.tsx\\\": \\\"./code/ActionSheet.tsx\\\",\\n\\t\\\"./AlertView.tsx\\\": \\\"./code/AlertView.tsx\\\",\\n\\t\\\"./NavigationBar.tsx\\\": \\\"./code/NavigationBar.tsx\\\",\\n\\t\\\"./NavigationBarLarge.tsx\\\": \\\"./code/NavigationBarLarge.tsx\\\",\\n\\t\\\"./PageControl.tsx\\\": \\\"./code/PageControl.tsx\\\",\\n\\t\\\"./ProgressIndicator.tsx\\\": \\\"./code/ProgressIndicator.tsx\\\",\\n\\t\\\"./SearchBar.tsx\\\": \\\"./code/SearchBar.tsx\\\",\\n\\t\\\"./SegmentedControl.tsx\\\": \\\"./code/SegmentedControl.tsx\\\",\\n\\t\\\"./Slider.tsx\\\": \\\"./code/Slider.tsx\\\",\\n\\t\\\"./StatusBar.tsx\\\": \\\"./code/StatusBar.tsx\\\",\\n\\t\\\"./Switch.tsx\\\": \\\"./code/Switch.tsx\\\",\\n\\t\\\"./Toolbar.tsx\\\": \\\"./code/Toolbar.tsx\\\",\\n\\t\\\"./canvas.tsx\\\": \\\"./code/canvas.tsx\\\"\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\tvar module = __webpack_require__(id);\\n\\treturn module;\\n}\\nfunction webpackContextResolve(req) {\\n\\tvar id = map[req];\\n\\tif(!(id + 1)) { // check for number or string\\n\\t\\tvar e = new Error('Cannot find module \\\"' + req + '\\\".');\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn id;\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\";//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9BY3Rpb25TaGVldC50c3hcIjogXCIuL2NvZGUvQWN0aW9uU2hlZXQudHN4XCIsXG5cdFwiLi9BbGVydFZpZXcudHN4XCI6IFwiLi9jb2RlL0FsZXJ0Vmlldy50c3hcIixcblx0XCIuL05hdmlnYXRpb25CYXIudHN4XCI6IFwiLi9jb2RlL05hdmlnYXRpb25CYXIudHN4XCIsXG5cdFwiLi9OYXZpZ2F0aW9uQmFyTGFyZ2UudHN4XCI6IFwiLi9jb2RlL05hdmlnYXRpb25CYXJMYXJnZS50c3hcIixcblx0XCIuL1BhZ2VDb250cm9sLnRzeFwiOiBcIi4vY29kZS9QYWdlQ29udHJvbC50c3hcIixcblx0XCIuL1Byb2dyZXNzSW5kaWNhdG9yLnRzeFwiOiBcIi4vY29kZS9Qcm9ncmVzc0luZGljYXRvci50c3hcIixcblx0XCIuL1NlYXJjaEJhci50c3hcIjogXCIuL2NvZGUvU2VhcmNoQmFyLnRzeFwiLFxuXHRcIi4vU2VnbWVudGVkQ29udHJvbC50c3hcIjogXCIuL2NvZGUvU2VnbWVudGVkQ29udHJvbC50c3hcIixcblx0XCIuL1NsaWRlci50c3hcIjogXCIuL2NvZGUvU2xpZGVyLnRzeFwiLFxuXHRcIi4vU3RhdHVzQmFyLnRzeFwiOiBcIi4vY29kZS9TdGF0dXNCYXIudHN4XCIsXG5cdFwiLi9Td2l0Y2gudHN4XCI6IFwiLi9jb2RlL1N3aXRjaC50c3hcIixcblx0XCIuL1Rvb2xiYXIudHN4XCI6IFwiLi9jb2RlL1Rvb2xiYXIudHN4XCIsXG5cdFwiLi9jYW52YXMudHN4XCI6IFwiLi9jb2RlL2NhbnZhcy50c3hcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\\n\");\n\n/***/ }),\n\n/***/ \"./code/ActionSheet.tsx\":\n/*!******************************!*\\\n  !*** ./code/ActionSheet.tsx ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass ActionSheet extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.onTapAction = (index) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { onTapAction } = this.props;\\n            if (!onTapAction)\\n                return;\\n            const actionTitle = this.actionTitles()[index];\\n            onTapAction(index, actionTitle);\\n        };\\n        this.actionTitles = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { action1, action2, action3, action4 } = this.props;\\n            return [action1, action2, action3, action4].filter(action => action.length > 0);\\n        };\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { title, tintColor, dimOverlay, width, height } = this.props;\\n        const buttonWidth = width - 16;\\n        const actionTitles = this.actionTitles();\\n        const buttons = actionTitles.map((acionTitle, index) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const isTop = title.length === 0 && index === 0;\\n            const isBottom = index === actionTitles.length - 1;\\n            return (React.createElement(\\\"div\\\", { style: {\\n                    width: buttonWidth,\\n                    height: 56,\\n                    lineHeight: \\\"56px\\\",\\n                    textAlign: \\\"center\\\",\\n                    borderTopLeftRadius: isTop ? 14 : 0,\\n                    borderTopRightRadius: isTop ? 14 : 0,\\n                    borderBottomLeftRadius: isBottom ? 14 : 0,\\n                    borderBottomRightRadius: isBottom ? 14 : 0,\\n                    background: \\\"rgba(248,248,248,.82)\\\",\\n                    boxShadow: isBottom ? undefined : dividerShadow,\\n                    backdropFilter: \\\"blur(20px)\\\",\\n                }, key: index, onClick: this.onTapAction.bind(this, index) }, acionTitle));\\n        });\\n        return (React.createElement(\\\"div\\\", { style: {\\n                width,\\n                height,\\n                color: tintColor,\\n                fontSize: 20,\\n                display: \\\"flex\\\",\\n                flexDirection: \\\"column\\\",\\n                justifyContent: \\\"flex-end\\\",\\n                alignItems: \\\"center\\\",\\n                background: dimOverlay ? \\\"rgba(4,4,15,.4)\\\" : undefined,\\n            } },\\n            title && (React.createElement(\\\"div\\\", { style: {\\n                    width: buttonWidth,\\n                    height: 45,\\n                    lineHeight: \\\"45px\\\",\\n                    textAlign: \\\"center\\\",\\n                    borderTopLeftRadius: 14,\\n                    borderTopRightRadius: 14,\\n                    background: \\\"rgba(248,248,248,.82)\\\",\\n                    fontSize: 13,\\n                    color: \\\"#8E8E93\\\",\\n                    boxShadow: actionTitles.length > 0 ? dividerShadow : undefined,\\n                    backdropFilter: \\\"blur(20px)\\\",\\n                }, onClick: this.props.onCancel }, title)),\\n            buttons,\\n            React.createElement(\\\"div\\\", { style: {\\n                    width: width - 16,\\n                    height: 56,\\n                    lineHeight: `${56}px`,\\n                    textAlign: \\\"center\\\",\\n                    borderRadius: 14,\\n                    marginTop: 8,\\n                    marginBottom: 10,\\n                    background: \\\"white\\\",\\n                } }, \\\"Cancel\\\")));\\n    }\\n}\\nActionSheet.defaultProps = {\\n    title: \\\"A short description of the actions goes here.\\\",\\n    action1: \\\"Action 1\\\",\\n    action2: \\\"Action 2\\\",\\n    action3: \\\"\\\",\\n    action4: \\\"\\\",\\n    tintColor: \\\"#007AFF\\\",\\n    dimOverlay: true,\\n    width: 375,\\n    height: 375,\\n};\\nActionSheet.propertyControls = {\\n    title: { type: framer_1.ControlType.String, title: \\\"Title\\\" },\\n    action1: { type: framer_1.ControlType.String, title: \\\"Action 1\\\" },\\n    action2: { type: framer_1.ControlType.String, title: \\\"Action 2\\\" },\\n    action3: { type: framer_1.ControlType.String, title: \\\"Action 3\\\" },\\n    action4: { type: framer_1.ControlType.String, title: \\\"Action 4\\\" },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n    dimOverlay: { type: framer_1.ControlType.Boolean, disabled: \\\"Hide\\\", enabled: \\\"Show\\\", title: \\\"DimOverlay\\\" },\\n};\\nexports.ActionSheet = ActionSheet;\\nconst dividerShadow = \\\"inset 0 -1px 0 -0.5px rgba(0,0,0,.05)\\\";\\nexports.__info__ = [{ name: \\\"ActionSheet\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FjdGlvblNoZWV0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGNBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscUNBQXFDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhDQUE4QztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwyREFBMkQ7QUFDNUUsU0FBUztBQUNULDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEVBQUU7QUFDZixrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnQ0FBZ0M7QUFDakQ7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBLG1DQUFtQyxHQUFHO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBb0Q7QUFDaEUsY0FBYyx1REFBdUQ7QUFDckUsY0FBYyx1REFBdUQ7QUFDckUsY0FBYyx1REFBdUQ7QUFDckUsY0FBYyx1REFBdUQ7QUFDckUsZ0JBQWdCLGtEQUFrRDtBQUNsRSxpQkFBaUIsNkZBQTZGO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBMEQiLCJmaWxlIjoiLi9jb2RlL0FjdGlvblNoZWV0LnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jbGFzcyBBY3Rpb25TaGVldCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMub25UYXBBY3Rpb24gPSAoaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyBvblRhcEFjdGlvbiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgICAgIGlmICghb25UYXBBY3Rpb24pXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgY29uc3QgYWN0aW9uVGl0bGUgPSB0aGlzLmFjdGlvblRpdGxlcygpW2luZGV4XTtcbiAgICAgICAgICAgIG9uVGFwQWN0aW9uKGluZGV4LCBhY3Rpb25UaXRsZSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYWN0aW9uVGl0bGVzID0gKCkgPT4ge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBjb25zdCB7IGFjdGlvbjEsIGFjdGlvbjIsIGFjdGlvbjMsIGFjdGlvbjQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgICAgICByZXR1cm4gW2FjdGlvbjEsIGFjdGlvbjIsIGFjdGlvbjMsIGFjdGlvbjRdLmZpbHRlcihhY3Rpb24gPT4gYWN0aW9uLmxlbmd0aCA+IDApO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBjb25zdCB7IHRpdGxlLCB0aW50Q29sb3IsIGRpbU92ZXJsYXksIHdpZHRoLCBoZWlnaHQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGJ1dHRvbldpZHRoID0gd2lkdGggLSAxNjtcbiAgICAgICAgY29uc3QgYWN0aW9uVGl0bGVzID0gdGhpcy5hY3Rpb25UaXRsZXMoKTtcbiAgICAgICAgY29uc3QgYnV0dG9ucyA9IGFjdGlvblRpdGxlcy5tYXAoKGFjaW9uVGl0bGUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IGlzVG9wID0gdGl0bGUubGVuZ3RoID09PSAwICYmIGluZGV4ID09PSAwO1xuICAgICAgICAgICAgY29uc3QgaXNCb3R0b20gPSBpbmRleCA9PT0gYWN0aW9uVGl0bGVzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogYnV0dG9uV2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogNTYsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IFwiNTZweFwiLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IGlzVG9wID8gMTQgOiAwLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJUb3BSaWdodFJhZGl1czogaXNUb3AgPyAxNCA6IDAsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IGlzQm90dG9tID8gMTQgOiAwLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogaXNCb3R0b20gPyAxNCA6IDAsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwicmdiYSgyNDgsMjQ4LDI0OCwuODIpXCIsXG4gICAgICAgICAgICAgICAgICAgIGJveFNoYWRvdzogaXNCb3R0b20gPyB1bmRlZmluZWQgOiBkaXZpZGVyU2hhZG93LFxuICAgICAgICAgICAgICAgICAgICBiYWNrZHJvcEZpbHRlcjogXCJibHVyKDIwcHgpXCIsXG4gICAgICAgICAgICAgICAgfSwga2V5OiBpbmRleCwgb25DbGljazogdGhpcy5vblRhcEFjdGlvbi5iaW5kKHRoaXMsIGluZGV4KSB9LCBhY2lvblRpdGxlKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZToge1xuICAgICAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgICAgICBjb2xvcjogdGludENvbG9yLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyMCxcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcImZsZXgtZW5kXCIsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBkaW1PdmVybGF5ID8gXCJyZ2JhKDQsNCwxNSwuNClcIiA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgIHRpdGxlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGJ1dHRvbldpZHRoLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDQ1LFxuICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjQ1cHhcIixcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAxNCxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IDE0LFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcInJnYmEoMjQ4LDI0OCwyNDgsLjgyKVwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTMsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIiM4RThFOTNcIixcbiAgICAgICAgICAgICAgICAgICAgYm94U2hhZG93OiBhY3Rpb25UaXRsZXMubGVuZ3RoID4gMCA/IGRpdmlkZXJTaGFkb3cgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wRmlsdGVyOiBcImJsdXIoMjBweClcIixcbiAgICAgICAgICAgICAgICB9LCBvbkNsaWNrOiB0aGlzLnByb3BzLm9uQ2FuY2VsIH0sIHRpdGxlKSksXG4gICAgICAgICAgICBidXR0b25zLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiB3aWR0aCAtIDE2LFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LFxuICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBgJHs1Nn1weGAsXG4gICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxNCxcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luVG9wOiA4LFxuICAgICAgICAgICAgICAgICAgICBtYXJnaW5Cb3R0b206IDEwLFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcIndoaXRlXCIsXG4gICAgICAgICAgICAgICAgfSB9LCBcIkNhbmNlbFwiKSkpO1xuICAgIH1cbn1cbkFjdGlvblNoZWV0LmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0aXRsZTogXCJBIHNob3J0IGRlc2NyaXB0aW9uIG9mIHRoZSBhY3Rpb25zIGdvZXMgaGVyZS5cIixcbiAgICBhY3Rpb24xOiBcIkFjdGlvbiAxXCIsXG4gICAgYWN0aW9uMjogXCJBY3Rpb24gMlwiLFxuICAgIGFjdGlvbjM6IFwiXCIsXG4gICAgYWN0aW9uNDogXCJcIixcbiAgICB0aW50Q29sb3I6IFwiIzAwN0FGRlwiLFxuICAgIGRpbU92ZXJsYXk6IHRydWUsXG4gICAgd2lkdGg6IDM3NSxcbiAgICBoZWlnaHQ6IDM3NSxcbn07XG5BY3Rpb25TaGVldC5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiVGl0bGVcIiB9LFxuICAgIGFjdGlvbjE6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJBY3Rpb24gMVwiIH0sXG4gICAgYWN0aW9uMjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkFjdGlvbiAyXCIgfSxcbiAgICBhY3Rpb24zOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiQWN0aW9uIDNcIiB9LFxuICAgIGFjdGlvbjQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJBY3Rpb24gNFwiIH0sXG4gICAgdGludENvbG9yOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJUaW50XCIgfSxcbiAgICBkaW1PdmVybGF5OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkJvb2xlYW4sIGRpc2FibGVkOiBcIkhpZGVcIiwgZW5hYmxlZDogXCJTaG93XCIsIHRpdGxlOiBcIkRpbU92ZXJsYXlcIiB9LFxufTtcbmV4cG9ydHMuQWN0aW9uU2hlZXQgPSBBY3Rpb25TaGVldDtcbmNvbnN0IGRpdmlkZXJTaGFkb3cgPSBcImluc2V0IDAgLTFweCAwIC0wLjVweCByZ2JhKDAsMCwwLC4wNSlcIjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIkFjdGlvblNoZWV0XCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/ActionSheet.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/AlertView.tsx\":\n/*!****************************!*\\\n  !*** ./code/AlertView.tsx ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass AlertView extends React.Component {\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { title, message, primary, secondary, destructive, tintColor, destructiveColor, primaryAction, secondaryAction, width, height, } = this.props;\\n        return (React.createElement(framer_1.Frame, { width: width, height: height, background: \\\"rgba(248,248,248,.82)\\\", backgroundBlur: 20, radius: 14, overflow: \\\"hidden\\\", style: { fontSize: 17, textAlign: \\\"center\\\" } },\\n            React.createElement(framer_1.Frame, { top: 18, bottom: 44 + 18, left: 16, right: 16, background: null },\\n                React.createElement(\\\"span\\\", { style: { display: \\\"block\\\", marginBottom: 4 } }, title),\\n                React.createElement(\\\"span\\\", { style: { display: \\\"block\\\", fontSize: 13 } }, message)),\\n            React.createElement(framer_1.Frame, { height: 44, width: width, left: 0, bottom: 0, borderStyle: \\\"solid\\\", borderColor: borderColor, borderWidth: { top: 0.5 }, background: null, style: { fontSize: 17, color: tintColor } },\\n                secondary && (React.createElement(framer_1.Frame, { height: 44, left: 0, width: \\\"50%\\\", background: null, borderColor: borderColor, borderStyle: \\\"solid\\\", borderWidth: { right: 0.5 }, onTap: secondaryAction }, secondary)),\\n                React.createElement(framer_1.Frame, { height: 44, right: 0, width: secondary ? \\\"50%\\\" : \\\"100%\\\", background: null, style: { color: destructive ? destructiveColor : tintColor }, onTap: primaryAction }, primary))));\\n    }\\n}\\nAlertView.defaultProps = {\\n    title: \\\"Current Location Not Available\\\",\\n    message: \\\"Your current location can not be determined at this time.\\\",\\n    primary: \\\"OK\\\",\\n    secondary: \\\"\\\",\\n    destructive: false,\\n    tintColor: \\\"#007AFF\\\",\\n    destructiveColor: \\\"#FF3B30\\\",\\n    width: 270,\\n    height: 140,\\n};\\nAlertView.propertyControls = {\\n    title: { type: framer_1.ControlType.String, title: \\\"Title\\\" },\\n    message: { type: framer_1.ControlType.String, title: \\\"Message\\\" },\\n    primary: { type: framer_1.ControlType.String, title: \\\"Primary\\\" },\\n    secondary: { type: framer_1.ControlType.String, title: \\\"Secondary\\\" },\\n    destructive: { type: framer_1.ControlType.Boolean, title: \\\"Destructive\\\" },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n    destructiveColor: { type: framer_1.ControlType.Color, title: \\\"Destructive\\\" },\\n};\\nexports.AlertView = AlertView;\\nconst borderColor = \\\"rgba(63,63,63,.3)\\\";\\nexports.__info__ = [{ name: \\\"AlertView\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FsZXJ0Vmlldy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwrSEFBK0g7QUFDOUkscURBQXFELGdJQUFnSSxvQ0FBb0MsRUFBRTtBQUMzTixpREFBaUQsa0VBQWtFO0FBQ25ILDZDQUE2QyxTQUFTLG9DQUFvQyxFQUFFO0FBQzVGLDZDQUE2QyxTQUFTLGlDQUFpQyxFQUFFO0FBQ3pGLGlEQUFpRCw2R0FBNkcsV0FBVyw0QkFBNEIsaUNBQWlDLEVBQUU7QUFDeE8sbUVBQW1FLG9IQUFvSCxhQUFhLDBCQUEwQjtBQUM5TixxREFBcUQsb0ZBQW9GLG9EQUFvRCx3QkFBd0I7QUFDck47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFLGNBQWMsc0RBQXNEO0FBQ3BFLGNBQWMsc0RBQXNEO0FBQ3BFLGdCQUFnQix3REFBd0Q7QUFDeEUsa0JBQWtCLDJEQUEyRDtBQUM3RSxnQkFBZ0Isa0RBQWtEO0FBQ2xFLHVCQUF1Qix5REFBeUQ7QUFDaEY7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHdEQUF3RCIsImZpbGUiOiIuL2NvZGUvQWxlcnRWaWV3LnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jbGFzcyBBbGVydFZpZXcgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgdGl0bGUsIG1lc3NhZ2UsIHByaW1hcnksIHNlY29uZGFyeSwgZGVzdHJ1Y3RpdmUsIHRpbnRDb2xvciwgZGVzdHJ1Y3RpdmVDb2xvciwgcHJpbWFyeUFjdGlvbiwgc2Vjb25kYXJ5QWN0aW9uLCB3aWR0aCwgaGVpZ2h0LCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IHdpZHRoOiB3aWR0aCwgaGVpZ2h0OiBoZWlnaHQsIGJhY2tncm91bmQ6IFwicmdiYSgyNDgsMjQ4LDI0OCwuODIpXCIsIGJhY2tncm91bmRCbHVyOiAyMCwgcmFkaXVzOiAxNCwgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsIHN0eWxlOiB7IGZvbnRTaXplOiAxNywgdGV4dEFsaWduOiBcImNlbnRlclwiIH0gfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRnJhbWUsIHsgdG9wOiAxOCwgYm90dG9tOiA0NCArIDE4LCBsZWZ0OiAxNiwgcmlnaHQ6IDE2LCBiYWNrZ3JvdW5kOiBudWxsIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBzdHlsZTogeyBkaXNwbGF5OiBcImJsb2NrXCIsIG1hcmdpbkJvdHRvbTogNCB9IH0sIHRpdGxlKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IHN0eWxlOiB7IGRpc3BsYXk6IFwiYmxvY2tcIiwgZm9udFNpemU6IDEzIH0gfSwgbWVzc2FnZSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyBoZWlnaHQ6IDQ0LCB3aWR0aDogd2lkdGgsIGxlZnQ6IDAsIGJvdHRvbTogMCwgYm9yZGVyU3R5bGU6IFwic29saWRcIiwgYm9yZGVyQ29sb3I6IGJvcmRlckNvbG9yLCBib3JkZXJXaWR0aDogeyB0b3A6IDAuNSB9LCBiYWNrZ3JvdW5kOiBudWxsLCBzdHlsZTogeyBmb250U2l6ZTogMTcsIGNvbG9yOiB0aW50Q29sb3IgfSB9LFxuICAgICAgICAgICAgICAgIHNlY29uZGFyeSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyBoZWlnaHQ6IDQ0LCBsZWZ0OiAwLCB3aWR0aDogXCI1MCVcIiwgYmFja2dyb3VuZDogbnVsbCwgYm9yZGVyQ29sb3I6IGJvcmRlckNvbG9yLCBib3JkZXJTdHlsZTogXCJzb2xpZFwiLCBib3JkZXJXaWR0aDogeyByaWdodDogMC41IH0sIG9uVGFwOiBzZWNvbmRhcnlBY3Rpb24gfSwgc2Vjb25kYXJ5KSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyBoZWlnaHQ6IDQ0LCByaWdodDogMCwgd2lkdGg6IHNlY29uZGFyeSA/IFwiNTAlXCIgOiBcIjEwMCVcIiwgYmFja2dyb3VuZDogbnVsbCwgc3R5bGU6IHsgY29sb3I6IGRlc3RydWN0aXZlID8gZGVzdHJ1Y3RpdmVDb2xvciA6IHRpbnRDb2xvciB9LCBvblRhcDogcHJpbWFyeUFjdGlvbiB9LCBwcmltYXJ5KSkpKTtcbiAgICB9XG59XG5BbGVydFZpZXcuZGVmYXVsdFByb3BzID0ge1xuICAgIHRpdGxlOiBcIkN1cnJlbnQgTG9jYXRpb24gTm90IEF2YWlsYWJsZVwiLFxuICAgIG1lc3NhZ2U6IFwiWW91ciBjdXJyZW50IGxvY2F0aW9uIGNhbiBub3QgYmUgZGV0ZXJtaW5lZCBhdCB0aGlzIHRpbWUuXCIsXG4gICAgcHJpbWFyeTogXCJPS1wiLFxuICAgIHNlY29uZGFyeTogXCJcIixcbiAgICBkZXN0cnVjdGl2ZTogZmFsc2UsXG4gICAgdGludENvbG9yOiBcIiMwMDdBRkZcIixcbiAgICBkZXN0cnVjdGl2ZUNvbG9yOiBcIiNGRjNCMzBcIixcbiAgICB3aWR0aDogMjcwLFxuICAgIGhlaWdodDogMTQwLFxufTtcbkFsZXJ0Vmlldy5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiVGl0bGVcIiB9LFxuICAgIG1lc3NhZ2U6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJNZXNzYWdlXCIgfSxcbiAgICBwcmltYXJ5OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiUHJpbWFyeVwiIH0sXG4gICAgc2Vjb25kYXJ5OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiU2Vjb25kYXJ5XCIgfSxcbiAgICBkZXN0cnVjdGl2ZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Cb29sZWFuLCB0aXRsZTogXCJEZXN0cnVjdGl2ZVwiIH0sXG4gICAgdGludENvbG9yOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJUaW50XCIgfSxcbiAgICBkZXN0cnVjdGl2ZUNvbG9yOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJEZXN0cnVjdGl2ZVwiIH0sXG59O1xuZXhwb3J0cy5BbGVydFZpZXcgPSBBbGVydFZpZXc7XG5jb25zdCBib3JkZXJDb2xvciA9IFwicmdiYSg2Myw2Myw2MywuMylcIjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIkFsZXJ0Vmlld1wiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/AlertView.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/NavigationBar.tsx\":\n/*!********************************!*\\\n  !*** ./code/NavigationBar.tsx ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass NavigationBar extends React.Component {\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { title, backItemTitle, rightItemTitle, showChevron, tintColor, textColor, customBackground, appearance, backAction, rightItemAction, width, height, } = this.props;\\n        let backgroundColor = \\\"rgba(33,33,33,.72\\\";\\n        let boxShadow = \\\"inset 0 -1px 0 -0.5px rgba(255,255,255,.16)\\\";\\n        switch (appearance) {\\n            case \\\"light\\\":\\n                boxShadow = \\\"inset 0 -1px 0 -0.5px rgba(0,0,0,.05)\\\";\\n                backgroundColor = \\\"rgba(248,248,248,.82)\\\";\\n                break;\\n            case \\\"custom\\\":\\n                backgroundColor = customBackground;\\n        }\\n        return (React.createElement(\\\"div\\\", { style: {\\n                width,\\n                height,\\n                backgroundColor,\\n                color: tintColor,\\n                backdropFilter: \\\"blur(10px)\\\",\\n                boxShadow,\\n                fontSize: 17,\\n                padding: \\\"32px 16px 0\\\",\\n                display: \\\"flex\\\",\\n                justifyContent: \\\"space-between\\\",\\n            } },\\n            React.createElement(\\\"div\\\", { style: { flexGrow: 2, flexShrink: 0, height: 20, width: 10, textAlign: \\\"left\\\" }, onClick: backAction },\\n                showChevron && (React.createElement(\\\"div\\\", { style: { float: \\\"left\\\", marginLeft: -7, marginRight: 7 }, dangerouslySetInnerHTML: { __html: chevron(tintColor) } })),\\n                backItemTitle),\\n            React.createElement(\\\"div\\\", { style: { color: textColor } }, title),\\n            React.createElement(\\\"div\\\", { style: { flexGrow: 2, flexShrink: 0, height: 20, width: 10, textAlign: \\\"right\\\" }, onClick: rightItemAction }, rightItemTitle)));\\n    }\\n}\\nNavigationBar.defaultProps = {\\n    title: \\\"Title\\\",\\n    backItemTitle: \\\"Previous\\\",\\n    rightItemTitle: \\\"Edit\\\",\\n    showChevron: true,\\n    appearance: \\\"light\\\",\\n    tintColor: \\\"#007AFF\\\",\\n    textColor: \\\"black\\\",\\n    customBackground: \\\"#09F\\\",\\n    width: 375,\\n    height: 64,\\n};\\nNavigationBar.propertyControls = {\\n    title: { type: framer_1.ControlType.String, title: \\\"Title\\\" },\\n    backItemTitle: { type: framer_1.ControlType.String, title: \\\"BackTitle\\\" },\\n    rightItemTitle: { type: framer_1.ControlType.String, title: \\\"RightTitle\\\" },\\n    showChevron: { type: framer_1.ControlType.Boolean, title: \\\"Chevron\\\" },\\n    appearance: {\\n        type: framer_1.ControlType.Enum,\\n        options: [\\\"dark\\\", \\\"light\\\", \\\"custom\\\"],\\n        optionTitles: [\\\"Dark\\\", \\\"Light\\\", \\\"Custom\\\"],\\n        title: \\\"Appearance\\\",\\n    },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n    textColor: { type: framer_1.ControlType.Color, title: \\\"Text\\\" },\\n    customBackground: { type: framer_1.ControlType.Color, title: \\\"Custom\\\" },\\n};\\nexports.NavigationBar = NavigationBar;\\nfunction chevron(tint) {\\n    window[\\\"__checkBudget__\\\"]();\\n    return `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n    <svg width=\\\"13px\\\" height=\\\"21px\\\" viewBox=\\\"0 0 13 21\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n        <g id=\\\"Symbols\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n            <g id=\\\"Bars/Navigation-Bar/_/Light/Left-Combinations/Back-Button\\\" transform=\\\"translate(-8.000000, -11.000000)\\\" fill=\\\"${tint}\\\">\\n                <path d=\\\"M18.0371349,31.5826673 L8.79215185,22.4458042 C8.40261605,22.0611888 8.40261605,21.4398102 8.79215185,21.0541958 L18.0371349,11.9173327 C18.5994648,11.3608891 19.5143745,11.3608891 20.0777032,11.9173327 C20.6400331,12.4737762 20.6400331,13.3768731 20.0777032,13.9333167 L12.1691276,21.7504995 L20.0777032,29.5656843 C20.6400331,30.1231269 20.6400331,31.0262238 20.0777032,31.5826673 C19.5143745,32.1391109 18.5994648,32.1391109 18.0371349,31.5826673\\\" id=\\\"Chevron\\\"></path>\\n            </g>\\n        </g>\\n    </svg>`;\\n}\\nexports.__info__ = [{ name: \\\"NavigationBar\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL05hdmlnYXRpb25CYXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUscUpBQXFKO0FBQ3BLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxFQUFFO0FBQ2Ysd0NBQXdDLFNBQVMsdUVBQXVFLHVCQUF1QjtBQUMvSSw0REFBNEQsU0FBUyxnREFBZ0QsNEJBQTRCLDZCQUE2QixFQUFFO0FBQ2hMO0FBQ0Esd0NBQXdDLFNBQVMsbUJBQW1CLEVBQUU7QUFDdEUsd0NBQXdDLFNBQVMsd0VBQXdFLDRCQUE0QjtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9EQUFvRDtBQUNoRSxvQkFBb0Isd0RBQXdEO0FBQzVFLHFCQUFxQix5REFBeUQ7QUFDOUUsa0JBQWtCLHVEQUF1RDtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGdCQUFnQixrREFBa0Q7QUFDbEUsZ0JBQWdCLGtEQUFrRDtBQUNsRSx1QkFBdUIsb0RBQW9EO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUlBQW1JLEtBQUs7QUFDeEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0REFBNEQiLCJmaWxlIjoiLi9jb2RlL05hdmlnYXRpb25CYXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIE5hdmlnYXRpb25CYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgdGl0bGUsIGJhY2tJdGVtVGl0bGUsIHJpZ2h0SXRlbVRpdGxlLCBzaG93Q2hldnJvbiwgdGludENvbG9yLCB0ZXh0Q29sb3IsIGN1c3RvbUJhY2tncm91bmQsIGFwcGVhcmFuY2UsIGJhY2tBY3Rpb24sIHJpZ2h0SXRlbUFjdGlvbiwgd2lkdGgsIGhlaWdodCwgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBiYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoMzMsMzMsMzMsLjcyXCI7XG4gICAgICAgIGxldCBib3hTaGFkb3cgPSBcImluc2V0IDAgLTFweCAwIC0wLjVweCByZ2JhKDI1NSwyNTUsMjU1LC4xNilcIjtcbiAgICAgICAgc3dpdGNoIChhcHBlYXJhbmNlKSB7XG4gICAgICAgICAgICBjYXNlIFwibGlnaHRcIjpcbiAgICAgICAgICAgICAgICBib3hTaGFkb3cgPSBcImluc2V0IDAgLTFweCAwIC0wLjVweCByZ2JhKDAsMCwwLC4wNSlcIjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoMjQ4LDI0OCwyNDgsLjgyKVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImN1c3RvbVwiOlxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9IGN1c3RvbUJhY2tncm91bmQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgICAgICAgIGNvbG9yOiB0aW50Q29sb3IsXG4gICAgICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IFwiYmx1cigxMHB4KVwiLFxuICAgICAgICAgICAgICAgIGJveFNoYWRvdyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTcsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogXCIzMnB4IDE2cHggMFwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWJldHdlZW5cIixcbiAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogeyBmbGV4R3JvdzogMiwgZmxleFNocmluazogMCwgaGVpZ2h0OiAyMCwgd2lkdGg6IDEwLCB0ZXh0QWxpZ246IFwibGVmdFwiIH0sIG9uQ2xpY2s6IGJhY2tBY3Rpb24gfSxcbiAgICAgICAgICAgICAgICBzaG93Q2hldnJvbiAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGZsb2F0OiBcImxlZnRcIiwgbWFyZ2luTGVmdDogLTcsIG1hcmdpblJpZ2h0OiA3IH0sIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogY2hldnJvbih0aW50Q29sb3IpIH0gfSkpLFxuICAgICAgICAgICAgICAgIGJhY2tJdGVtVGl0bGUpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGNvbG9yOiB0ZXh0Q29sb3IgfSB9LCB0aXRsZSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHsgZmxleEdyb3c6IDIsIGZsZXhTaHJpbms6IDAsIGhlaWdodDogMjAsIHdpZHRoOiAxMCwgdGV4dEFsaWduOiBcInJpZ2h0XCIgfSwgb25DbGljazogcmlnaHRJdGVtQWN0aW9uIH0sIHJpZ2h0SXRlbVRpdGxlKSkpO1xuICAgIH1cbn1cbk5hdmlnYXRpb25CYXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHRpdGxlOiBcIlRpdGxlXCIsXG4gICAgYmFja0l0ZW1UaXRsZTogXCJQcmV2aW91c1wiLFxuICAgIHJpZ2h0SXRlbVRpdGxlOiBcIkVkaXRcIixcbiAgICBzaG93Q2hldnJvbjogdHJ1ZSxcbiAgICBhcHBlYXJhbmNlOiBcImxpZ2h0XCIsXG4gICAgdGludENvbG9yOiBcIiMwMDdBRkZcIixcbiAgICB0ZXh0Q29sb3I6IFwiYmxhY2tcIixcbiAgICBjdXN0b21CYWNrZ3JvdW5kOiBcIiMwOUZcIixcbiAgICB3aWR0aDogMzc1LFxuICAgIGhlaWdodDogNjQsXG59O1xuTmF2aWdhdGlvbkJhci5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiVGl0bGVcIiB9LFxuICAgIGJhY2tJdGVtVGl0bGU6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJCYWNrVGl0bGVcIiB9LFxuICAgIHJpZ2h0SXRlbVRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiUmlnaHRUaXRsZVwiIH0sXG4gICAgc2hvd0NoZXZyb246IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQm9vbGVhbiwgdGl0bGU6IFwiQ2hldnJvblwiIH0sXG4gICAgYXBwZWFyYW5jZToge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICBvcHRpb25zOiBbXCJkYXJrXCIsIFwibGlnaHRcIiwgXCJjdXN0b21cIl0sXG4gICAgICAgIG9wdGlvblRpdGxlczogW1wiRGFya1wiLCBcIkxpZ2h0XCIsIFwiQ3VzdG9tXCJdLFxuICAgICAgICB0aXRsZTogXCJBcHBlYXJhbmNlXCIsXG4gICAgfSxcbiAgICB0aW50Q29sb3I6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ29sb3IsIHRpdGxlOiBcIlRpbnRcIiB9LFxuICAgIHRleHRDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGV4dFwiIH0sXG4gICAgY3VzdG9tQmFja2dyb3VuZDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiQ3VzdG9tXCIgfSxcbn07XG5leHBvcnRzLk5hdmlnYXRpb25CYXIgPSBOYXZpZ2F0aW9uQmFyO1xuZnVuY3Rpb24gY2hldnJvbih0aW50KSB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIGA8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz5cbiAgICA8c3ZnIHdpZHRoPVwiMTNweFwiIGhlaWdodD1cIjIxcHhcIiB2aWV3Qm94PVwiMCAwIDEzIDIxXCIgdmVyc2lvbj1cIjEuMVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIj5cbiAgICAgICAgPGcgaWQ9XCJTeW1ib2xzXCIgc3Ryb2tlPVwibm9uZVwiIHN0cm9rZS13aWR0aD1cIjFcIiBmaWxsPVwibm9uZVwiIGZpbGwtcnVsZT1cImV2ZW5vZGRcIj5cbiAgICAgICAgICAgIDxnIGlkPVwiQmFycy9OYXZpZ2F0aW9uLUJhci9fL0xpZ2h0L0xlZnQtQ29tYmluYXRpb25zL0JhY2stQnV0dG9uXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKC04LjAwMDAwMCwgLTExLjAwMDAwMClcIiBmaWxsPVwiJHt0aW50fVwiPlxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTguMDM3MTM0OSwzMS41ODI2NjczIEw4Ljc5MjE1MTg1LDIyLjQ0NTgwNDIgQzguNDAyNjE2MDUsMjIuMDYxMTg4OCA4LjQwMjYxNjA1LDIxLjQzOTgxMDIgOC43OTIxNTE4NSwyMS4wNTQxOTU4IEwxOC4wMzcxMzQ5LDExLjkxNzMzMjcgQzE4LjU5OTQ2NDgsMTEuMzYwODg5MSAxOS41MTQzNzQ1LDExLjM2MDg4OTEgMjAuMDc3NzAzMiwxMS45MTczMzI3IEMyMC42NDAwMzMxLDEyLjQ3Mzc3NjIgMjAuNjQwMDMzMSwxMy4zNzY4NzMxIDIwLjA3NzcwMzIsMTMuOTMzMzE2NyBMMTIuMTY5MTI3NiwyMS43NTA0OTk1IEwyMC4wNzc3MDMyLDI5LjU2NTY4NDMgQzIwLjY0MDAzMzEsMzAuMTIzMTI2OSAyMC42NDAwMzMxLDMxLjAyNjIyMzggMjAuMDc3NzAzMiwzMS41ODI2NjczIEMxOS41MTQzNzQ1LDMyLjEzOTExMDkgMTguNTk5NDY0OCwzMi4xMzkxMTA5IDE4LjAzNzEzNDksMzEuNTgyNjY3M1wiIGlkPVwiQ2hldnJvblwiPjwvcGF0aD5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgPC9nPlxuICAgIDwvc3ZnPmA7XG59XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJOYXZpZ2F0aW9uQmFyXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/NavigationBar.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/NavigationBarLarge.tsx\":\n/*!*************************************!*\\\n  !*** ./code/NavigationBarLarge.tsx ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass NavigationBarLarge extends React.Component {\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { title, backItemTitle, rightItemTitle, showChevron, tintColor, textColor, customBackground, appearance, backAction, rightItemAction, width, height, } = this.props;\\n        let backgroundColor = \\\"rgba(33,33,33,.72\\\";\\n        let boxShadow = \\\"inset 0 -1px 0 -0.5px rgba(255,255,255,.16)\\\";\\n        switch (appearance) {\\n            case \\\"light\\\":\\n                boxShadow = \\\"inset 0 -1px 0 -0.5px rgba(0,0,0,.05)\\\";\\n                backgroundColor = \\\"rgba(248,248,248,.82)\\\";\\n                break;\\n            case \\\"custom\\\":\\n                backgroundColor = customBackground;\\n        }\\n        return (React.createElement(\\\"div\\\", { style: {\\n                width,\\n                height,\\n                backgroundColor,\\n                color: tintColor,\\n                backdropFilter: \\\"blur(10px)\\\",\\n                boxShadow,\\n                fontSize: 17,\\n                padding: \\\"32px 16px 0\\\",\\n                display: \\\"flex\\\",\\n                justifyContent: \\\"space-between\\\",\\n            } },\\n            React.createElement(\\\"div\\\", { style: { flexGrow: 2, flexShrink: 0, height: 20, width: 10, textAlign: \\\"left\\\" }, onClick: backAction },\\n                showChevron && (React.createElement(\\\"div\\\", { style: { float: \\\"left\\\", marginLeft: -7, marginRight: 7 }, dangerouslySetInnerHTML: { __html: chevron(tintColor) } })),\\n                backItemTitle),\\n            React.createElement(\\\"div\\\", { style: { flexGrow: 2, flexShrink: 0, height: 20, width: 10, textAlign: \\\"right\\\" }, onClick: rightItemAction }, rightItemTitle),\\n            React.createElement(\\\"div\\\", { style: {\\n                    color: textColor,\\n                    fontSize: 34,\\n                    position: \\\"absolute\\\",\\n                    top: 67,\\n                    left: 16,\\n                    right: 16,\\n                    letterSpacing: 1.8,\\n                } }, title)));\\n    }\\n}\\nNavigationBarLarge.defaultProps = {\\n    title: \\\"Large Title\\\",\\n    backItemTitle: \\\"Previous\\\",\\n    rightItemTitle: \\\"Edit\\\",\\n    showChevron: true,\\n    appearance: \\\"light\\\",\\n    tintColor: \\\"#007AFF\\\",\\n    textColor: \\\"black\\\",\\n    customBackground: \\\"#09F\\\",\\n    width: 375,\\n    height: 116,\\n};\\nNavigationBarLarge.propertyControls = {\\n    title: { type: framer_1.ControlType.String, title: \\\"Title\\\" },\\n    backItemTitle: { type: framer_1.ControlType.String, title: \\\"BackTitle\\\" },\\n    rightItemTitle: { type: framer_1.ControlType.String, title: \\\"RightTitle\\\" },\\n    showChevron: { type: framer_1.ControlType.Boolean, title: \\\"Chevron\\\" },\\n    appearance: {\\n        type: framer_1.ControlType.Enum,\\n        options: [\\\"dark\\\", \\\"light\\\", \\\"custom\\\"],\\n        optionTitles: [\\\"Dark\\\", \\\"Light\\\", \\\"Custom\\\"],\\n        title: \\\"Appearance\\\",\\n    },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n    textColor: { type: framer_1.ControlType.Color, title: \\\"Text\\\" },\\n    customBackground: { type: framer_1.ControlType.Color, title: \\\"Custom\\\" },\\n};\\nexports.NavigationBarLarge = NavigationBarLarge;\\nfunction chevron(tint) {\\n    window[\\\"__checkBudget__\\\"]();\\n    return `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n    <svg width=\\\"13px\\\" height=\\\"21px\\\" viewBox=\\\"0 0 13 21\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n        <g id=\\\"Symbols\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n            <g id=\\\"Bars/Navigation-Bar/_/Light/Left-Combinations/Back-Button\\\" transform=\\\"translate(-8.000000, -11.000000)\\\" fill=\\\"${tint}\\\">\\n                <path d=\\\"M18.0371349,31.5826673 L8.79215185,22.4458042 C8.40261605,22.0611888 8.40261605,21.4398102 8.79215185,21.0541958 L18.0371349,11.9173327 C18.5994648,11.3608891 19.5143745,11.3608891 20.0777032,11.9173327 C20.6400331,12.4737762 20.6400331,13.3768731 20.0777032,13.9333167 L12.1691276,21.7504995 L20.0777032,29.5656843 C20.6400331,30.1231269 20.6400331,31.0262238 20.0777032,31.5826673 C19.5143745,32.1391109 18.5994648,32.1391109 18.0371349,31.5826673\\\" id=\\\"Chevron\\\"></path>\\n            </g>\\n        </g>\\n    </svg>`;\\n}\\nexports.__info__ = [{ name: \\\"NavigationBarLarge\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL05hdmlnYXRpb25CYXJMYXJnZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxSkFBcUo7QUFDcEs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEVBQUU7QUFDZix3Q0FBd0MsU0FBUyx1RUFBdUUsdUJBQXVCO0FBQy9JLDREQUE0RCxTQUFTLGdEQUFnRCw0QkFBNEIsNkJBQTZCLEVBQUU7QUFDaEw7QUFDQSx3Q0FBd0MsU0FBUyx3RUFBd0UsNEJBQTRCO0FBQ3JKLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixFQUFFO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFLG9CQUFvQix3REFBd0Q7QUFDNUUscUJBQXFCLHlEQUF5RDtBQUM5RSxrQkFBa0IsdURBQXVEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZ0JBQWdCLGtEQUFrRDtBQUNsRSxnQkFBZ0Isa0RBQWtEO0FBQ2xFLHVCQUF1QixvREFBb0Q7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtSUFBbUksS0FBSztBQUN4STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGlFQUFpRSIsImZpbGUiOiIuL2NvZGUvTmF2aWdhdGlvbkJhckxhcmdlLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jbGFzcyBOYXZpZ2F0aW9uQmFyTGFyZ2UgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgdGl0bGUsIGJhY2tJdGVtVGl0bGUsIHJpZ2h0SXRlbVRpdGxlLCBzaG93Q2hldnJvbiwgdGludENvbG9yLCB0ZXh0Q29sb3IsIGN1c3RvbUJhY2tncm91bmQsIGFwcGVhcmFuY2UsIGJhY2tBY3Rpb24sIHJpZ2h0SXRlbUFjdGlvbiwgd2lkdGgsIGhlaWdodCwgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBiYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoMzMsMzMsMzMsLjcyXCI7XG4gICAgICAgIGxldCBib3hTaGFkb3cgPSBcImluc2V0IDAgLTFweCAwIC0wLjVweCByZ2JhKDI1NSwyNTUsMjU1LC4xNilcIjtcbiAgICAgICAgc3dpdGNoIChhcHBlYXJhbmNlKSB7XG4gICAgICAgICAgICBjYXNlIFwibGlnaHRcIjpcbiAgICAgICAgICAgICAgICBib3hTaGFkb3cgPSBcImluc2V0IDAgLTFweCAwIC0wLjVweCByZ2JhKDAsMCwwLC4wNSlcIjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IgPSBcInJnYmEoMjQ4LDI0OCwyNDgsLjgyKVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImN1c3RvbVwiOlxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvciA9IGN1c3RvbUJhY2tncm91bmQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQsXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yLFxuICAgICAgICAgICAgICAgIGNvbG9yOiB0aW50Q29sb3IsXG4gICAgICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IFwiYmx1cigxMHB4KVwiLFxuICAgICAgICAgICAgICAgIGJveFNoYWRvdyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTcsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogXCIzMnB4IDE2cHggMFwiLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWJldHdlZW5cIixcbiAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogeyBmbGV4R3JvdzogMiwgZmxleFNocmluazogMCwgaGVpZ2h0OiAyMCwgd2lkdGg6IDEwLCB0ZXh0QWxpZ246IFwibGVmdFwiIH0sIG9uQ2xpY2s6IGJhY2tBY3Rpb24gfSxcbiAgICAgICAgICAgICAgICBzaG93Q2hldnJvbiAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGZsb2F0OiBcImxlZnRcIiwgbWFyZ2luTGVmdDogLTcsIG1hcmdpblJpZ2h0OiA3IH0sIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogY2hldnJvbih0aW50Q29sb3IpIH0gfSkpLFxuICAgICAgICAgICAgICAgIGJhY2tJdGVtVGl0bGUpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGZsZXhHcm93OiAyLCBmbGV4U2hyaW5rOiAwLCBoZWlnaHQ6IDIwLCB3aWR0aDogMTAsIHRleHRBbGlnbjogXCJyaWdodFwiIH0sIG9uQ2xpY2s6IHJpZ2h0SXRlbUFjdGlvbiB9LCByaWdodEl0ZW1UaXRsZSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHRleHRDb2xvcixcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDM0LFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IDY3LFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAxNixcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDE2LFxuICAgICAgICAgICAgICAgICAgICBsZXR0ZXJTcGFjaW5nOiAxLjgsXG4gICAgICAgICAgICAgICAgfSB9LCB0aXRsZSkpKTtcbiAgICB9XG59XG5OYXZpZ2F0aW9uQmFyTGFyZ2UuZGVmYXVsdFByb3BzID0ge1xuICAgIHRpdGxlOiBcIkxhcmdlIFRpdGxlXCIsXG4gICAgYmFja0l0ZW1UaXRsZTogXCJQcmV2aW91c1wiLFxuICAgIHJpZ2h0SXRlbVRpdGxlOiBcIkVkaXRcIixcbiAgICBzaG93Q2hldnJvbjogdHJ1ZSxcbiAgICBhcHBlYXJhbmNlOiBcImxpZ2h0XCIsXG4gICAgdGludENvbG9yOiBcIiMwMDdBRkZcIixcbiAgICB0ZXh0Q29sb3I6IFwiYmxhY2tcIixcbiAgICBjdXN0b21CYWNrZ3JvdW5kOiBcIiMwOUZcIixcbiAgICB3aWR0aDogMzc1LFxuICAgIGhlaWdodDogMTE2LFxufTtcbk5hdmlnYXRpb25CYXJMYXJnZS5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiVGl0bGVcIiB9LFxuICAgIGJhY2tJdGVtVGl0bGU6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJCYWNrVGl0bGVcIiB9LFxuICAgIHJpZ2h0SXRlbVRpdGxlOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiUmlnaHRUaXRsZVwiIH0sXG4gICAgc2hvd0NoZXZyb246IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQm9vbGVhbiwgdGl0bGU6IFwiQ2hldnJvblwiIH0sXG4gICAgYXBwZWFyYW5jZToge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5FbnVtLFxuICAgICAgICBvcHRpb25zOiBbXCJkYXJrXCIsIFwibGlnaHRcIiwgXCJjdXN0b21cIl0sXG4gICAgICAgIG9wdGlvblRpdGxlczogW1wiRGFya1wiLCBcIkxpZ2h0XCIsIFwiQ3VzdG9tXCJdLFxuICAgICAgICB0aXRsZTogXCJBcHBlYXJhbmNlXCIsXG4gICAgfSxcbiAgICB0aW50Q29sb3I6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ29sb3IsIHRpdGxlOiBcIlRpbnRcIiB9LFxuICAgIHRleHRDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGV4dFwiIH0sXG4gICAgY3VzdG9tQmFja2dyb3VuZDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiQ3VzdG9tXCIgfSxcbn07XG5leHBvcnRzLk5hdmlnYXRpb25CYXJMYXJnZSA9IE5hdmlnYXRpb25CYXJMYXJnZTtcbmZ1bmN0aW9uIGNoZXZyb24odGludCkge1xuICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgIHJldHVybiBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG4gICAgPHN2ZyB3aWR0aD1cIjEzcHhcIiBoZWlnaHQ9XCIyMXB4XCIgdmlld0JveD1cIjAgMCAxMyAyMVwiIHZlcnNpb249XCIxLjFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCI+XG4gICAgICAgIDxnIGlkPVwiU3ltYm9sc1wiIHN0cm9rZT1cIm5vbmVcIiBzdHJva2Utd2lkdGg9XCIxXCIgZmlsbD1cIm5vbmVcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+XG4gICAgICAgICAgICA8ZyBpZD1cIkJhcnMvTmF2aWdhdGlvbi1CYXIvXy9MaWdodC9MZWZ0LUNvbWJpbmF0aW9ucy9CYWNrLUJ1dHRvblwiIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgtOC4wMDAwMDAsIC0xMS4wMDAwMDApXCIgZmlsbD1cIiR7dGludH1cIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE4LjAzNzEzNDksMzEuNTgyNjY3MyBMOC43OTIxNTE4NSwyMi40NDU4MDQyIEM4LjQwMjYxNjA1LDIyLjA2MTE4ODggOC40MDI2MTYwNSwyMS40Mzk4MTAyIDguNzkyMTUxODUsMjEuMDU0MTk1OCBMMTguMDM3MTM0OSwxMS45MTczMzI3IEMxOC41OTk0NjQ4LDExLjM2MDg4OTEgMTkuNTE0Mzc0NSwxMS4zNjA4ODkxIDIwLjA3NzcwMzIsMTEuOTE3MzMyNyBDMjAuNjQwMDMzMSwxMi40NzM3NzYyIDIwLjY0MDAzMzEsMTMuMzc2ODczMSAyMC4wNzc3MDMyLDEzLjkzMzMxNjcgTDEyLjE2OTEyNzYsMjEuNzUwNDk5NSBMMjAuMDc3NzAzMiwyOS41NjU2ODQzIEMyMC42NDAwMzMxLDMwLjEyMzEyNjkgMjAuNjQwMDMzMSwzMS4wMjYyMjM4IDIwLjA3NzcwMzIsMzEuNTgyNjY3MyBDMTkuNTE0Mzc0NSwzMi4xMzkxMTA5IDE4LjU5OTQ2NDgsMzIuMTM5MTEwOSAxOC4wMzcxMzQ5LDMxLjU4MjY2NzNcIiBpZD1cIkNoZXZyb25cIj48L3BhdGg+XG4gICAgICAgICAgICA8L2c+XG4gICAgICAgIDwvZz5cbiAgICA8L3N2Zz5gO1xufVxuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiTmF2aWdhdGlvbkJhckxhcmdlXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/NavigationBarLarge.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/PageControl.tsx\":\n/*!******************************!*\\\n  !*** ./code/PageControl.tsx ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass PageControl extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            currentPage: 0,\\n            numberOfPages: 7,\\n        };\\n        this.next = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { nextPage } = this.props;\\n            const { currentPage, numberOfPages } = this.state;\\n            if (currentPage >= numberOfPages - 1)\\n                return;\\n            if (nextPage) {\\n                nextPage();\\n            }\\n            else {\\n                this.setState(Object.assign({}, this.state, { currentPage: currentPage + 1 }));\\n            }\\n        };\\n        this.previous = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { previousPage } = this.props;\\n            const { currentPage } = this.state;\\n            if (currentPage <= 0)\\n                return;\\n            if (previousPage) {\\n                previousPage();\\n            }\\n            else {\\n                this.setState(Object.assign({}, this.state, { currentPage: currentPage - 1 }));\\n            }\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { currentPage, numberOfPages } = this.props;\\n        this.setState({ currentPage, numberOfPages });\\n    }\\n    componentWillReceiveProps(props) {\\n        window[\\\"__checkBudget__\\\"]();\\n        let { currentPage, numberOfPages } = this.props;\\n        let shouldUpdate = false;\\n        if (props.currentPage !== this.props.currentPage) {\\n            currentPage = props.currentPage;\\n            shouldUpdate = true;\\n        }\\n        if (props.numberOfPages !== this.props.numberOfPages) {\\n            numberOfPages = props.numberOfPages;\\n            shouldUpdate = true;\\n        }\\n        if (shouldUpdate) {\\n            this.setState({ currentPage, numberOfPages });\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { width, height, indicatorColor, currentIndicatorColor } = this.props;\\n        const { numberOfPages, currentPage } = this.state;\\n        const dots = [];\\n        const dotsWidth = numberOfPages * dotSize + Math.max(numberOfPages - 1, 0) * spaceBetween;\\n        const leftOffset = Math.round((width - dotsWidth) / 2);\\n        for (let i = 0, il = numberOfPages; i < il; i++) {\\n            window[\\\"__checkBudget__\\\"]();\\n            const isCurrent = i === currentPage;\\n            const dot = (React.createElement(framer_1.Frame, { key: i, width: dotSize, height: dotSize, left: i * (dotSize + spaceBetween) + leftOffset, background: isCurrent ? currentIndicatorColor : indicatorColor, radius: dotSize }));\\n            dots.push(dot);\\n        }\\n        return (React.createElement(framer_1.Frame, { width: width, height: height, background: null },\\n            dots,\\n            React.createElement(framer_1.Frame, { left: 0, height: \\\"100%\\\", width: \\\"50%\\\", background: null, onTap: this.previous }),\\n            React.createElement(framer_1.Frame, { right: 0, height: \\\"100%\\\", width: \\\"50%\\\", background: null, onTap: this.next })));\\n    }\\n}\\nPageControl.defaultProps = {\\n    currentPage: 0,\\n    numberOfPages: 3,\\n    indicatorColor: \\\"rgba(0,0,0,.32)\\\",\\n    currentIndicatorColor: \\\"black\\\",\\n    width: 100,\\n    height: 20,\\n};\\nPageControl.propertyControls = {\\n    currentPage: { type: framer_1.ControlType.Number, min: 0, round: true, title: \\\"Current\\\" },\\n    numberOfPages: { type: framer_1.ControlType.Number, min: 1, round: true, title: \\\"Pages\\\" },\\n    indicatorColor: { type: framer_1.ControlType.Color, title: \\\"Indicator\\\" },\\n    currentIndicatorColor: { type: framer_1.ControlType.Color, title: \\\"Current\\\" },\\n};\\nexports.PageControl = PageControl;\\nconst dotSize = 7;\\nconst spaceBetween = 9;\\nexports.__info__ = [{ name: \\\"PageControl\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1BhZ2VDb250cm9sLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsV0FBVztBQUM5QixtQkFBbUIsNkJBQTZCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxlQUFlLCtCQUErQjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDLG1CQUFtQixjQUFjO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxlQUFlLCtCQUErQjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2QkFBNkI7QUFDNUMsdUJBQXVCLDZCQUE2QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxhQUFhLDZCQUE2QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw2QkFBNkI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVEQUF1RDtBQUN0RSxlQUFlLDZCQUE2QjtBQUM1QztBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0EsOERBQThELDRLQUE0SztBQUMxTztBQUNBO0FBQ0EscURBQXFELGlEQUFpRDtBQUN0RztBQUNBLGlEQUFpRCxnRkFBZ0Y7QUFDakksaURBQWlELDZFQUE2RTtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDJFQUEyRTtBQUM3RixvQkFBb0IseUVBQXlFO0FBQzdGLHFCQUFxQix1REFBdUQ7QUFDNUUsNEJBQTRCLHFEQUFxRDtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBMEQiLCJmaWxlIjoiLi9jb2RlL1BhZ2VDb250cm9sLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jbGFzcyBQYWdlQ29udHJvbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjdXJyZW50UGFnZTogMCxcbiAgICAgICAgICAgIG51bWJlck9mUGFnZXM6IDcsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubmV4dCA9ICgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyBuZXh0UGFnZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgICAgIGNvbnN0IHsgY3VycmVudFBhZ2UsIG51bWJlck9mUGFnZXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgICAgICBpZiAoY3VycmVudFBhZ2UgPj0gbnVtYmVyT2ZQYWdlcyAtIDEpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKG5leHRQYWdlKSB7XG4gICAgICAgICAgICAgICAgbmV4dFBhZ2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSwgeyBjdXJyZW50UGFnZTogY3VycmVudFBhZ2UgKyAxIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5wcmV2aW91cyA9ICgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyBwcmV2aW91c1BhZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgICAgICBjb25zdCB7IGN1cnJlbnRQYWdlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRQYWdlIDw9IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKHByZXZpb3VzUGFnZSkge1xuICAgICAgICAgICAgICAgIHByZXZpb3VzUGFnZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZShPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlLCB7IGN1cnJlbnRQYWdlOiBjdXJyZW50UGFnZSAtIDEgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgY3VycmVudFBhZ2UsIG51bWJlck9mUGFnZXMgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50UGFnZSwgbnVtYmVyT2ZQYWdlcyB9KTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcykge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgbGV0IHsgY3VycmVudFBhZ2UsIG51bWJlck9mUGFnZXMgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzaG91bGRVcGRhdGUgPSBmYWxzZTtcbiAgICAgICAgaWYgKHByb3BzLmN1cnJlbnRQYWdlICE9PSB0aGlzLnByb3BzLmN1cnJlbnRQYWdlKSB7XG4gICAgICAgICAgICBjdXJyZW50UGFnZSA9IHByb3BzLmN1cnJlbnRQYWdlO1xuICAgICAgICAgICAgc2hvdWxkVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMubnVtYmVyT2ZQYWdlcyAhPT0gdGhpcy5wcm9wcy5udW1iZXJPZlBhZ2VzKSB7XG4gICAgICAgICAgICBudW1iZXJPZlBhZ2VzID0gcHJvcHMubnVtYmVyT2ZQYWdlcztcbiAgICAgICAgICAgIHNob3VsZFVwZGF0ZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNob3VsZFVwZGF0ZSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnRQYWdlLCBudW1iZXJPZlBhZ2VzIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgaW5kaWNhdG9yQ29sb3IsIGN1cnJlbnRJbmRpY2F0b3JDb2xvciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBudW1iZXJPZlBhZ2VzLCBjdXJyZW50UGFnZSB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgY29uc3QgZG90cyA9IFtdO1xuICAgICAgICBjb25zdCBkb3RzV2lkdGggPSBudW1iZXJPZlBhZ2VzICogZG90U2l6ZSArIE1hdGgubWF4KG51bWJlck9mUGFnZXMgLSAxLCAwKSAqIHNwYWNlQmV0d2VlbjtcbiAgICAgICAgY29uc3QgbGVmdE9mZnNldCA9IE1hdGgucm91bmQoKHdpZHRoIC0gZG90c1dpZHRoKSAvIDIpO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgaWwgPSBudW1iZXJPZlBhZ2VzOyBpIDwgaWw7IGkrKykge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBjb25zdCBpc0N1cnJlbnQgPSBpID09PSBjdXJyZW50UGFnZTtcbiAgICAgICAgICAgIGNvbnN0IGRvdCA9IChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IGtleTogaSwgd2lkdGg6IGRvdFNpemUsIGhlaWdodDogZG90U2l6ZSwgbGVmdDogaSAqIChkb3RTaXplICsgc3BhY2VCZXR3ZWVuKSArIGxlZnRPZmZzZXQsIGJhY2tncm91bmQ6IGlzQ3VycmVudCA/IGN1cnJlbnRJbmRpY2F0b3JDb2xvciA6IGluZGljYXRvckNvbG9yLCByYWRpdXM6IGRvdFNpemUgfSkpO1xuICAgICAgICAgICAgZG90cy5wdXNoKGRvdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IHdpZHRoOiB3aWR0aCwgaGVpZ2h0OiBoZWlnaHQsIGJhY2tncm91bmQ6IG51bGwgfSxcbiAgICAgICAgICAgIGRvdHMsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IGxlZnQ6IDAsIGhlaWdodDogXCIxMDAlXCIsIHdpZHRoOiBcIjUwJVwiLCBiYWNrZ3JvdW5kOiBudWxsLCBvblRhcDogdGhpcy5wcmV2aW91cyB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRnJhbWUsIHsgcmlnaHQ6IDAsIGhlaWdodDogXCIxMDAlXCIsIHdpZHRoOiBcIjUwJVwiLCBiYWNrZ3JvdW5kOiBudWxsLCBvblRhcDogdGhpcy5uZXh0IH0pKSk7XG4gICAgfVxufVxuUGFnZUNvbnRyb2wuZGVmYXVsdFByb3BzID0ge1xuICAgIGN1cnJlbnRQYWdlOiAwLFxuICAgIG51bWJlck9mUGFnZXM6IDMsXG4gICAgaW5kaWNhdG9yQ29sb3I6IFwicmdiYSgwLDAsMCwuMzIpXCIsXG4gICAgY3VycmVudEluZGljYXRvckNvbG9yOiBcImJsYWNrXCIsXG4gICAgd2lkdGg6IDEwMCxcbiAgICBoZWlnaHQ6IDIwLFxufTtcblBhZ2VDb250cm9sLnByb3BlcnR5Q29udHJvbHMgPSB7XG4gICAgY3VycmVudFBhZ2U6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuTnVtYmVyLCBtaW46IDAsIHJvdW5kOiB0cnVlLCB0aXRsZTogXCJDdXJyZW50XCIgfSxcbiAgICBudW1iZXJPZlBhZ2VzOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLk51bWJlciwgbWluOiAxLCByb3VuZDogdHJ1ZSwgdGl0bGU6IFwiUGFnZXNcIiB9LFxuICAgIGluZGljYXRvckNvbG9yOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJJbmRpY2F0b3JcIiB9LFxuICAgIGN1cnJlbnRJbmRpY2F0b3JDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiQ3VycmVudFwiIH0sXG59O1xuZXhwb3J0cy5QYWdlQ29udHJvbCA9IFBhZ2VDb250cm9sO1xuY29uc3QgZG90U2l6ZSA9IDc7XG5jb25zdCBzcGFjZUJldHdlZW4gPSA5O1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiUGFnZUNvbnRyb2xcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/PageControl.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/ProgressIndicator.tsx\":\n/*!************************************!*\\\n  !*** ./code/ProgressIndicator.tsx ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass ProgressIndicator extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.lastTick = performance.now();\\n        this.rotation = framer_1.Animatable(0);\\n        this.tick = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { lastTick } = this;\\n            const currentTime = performance.now();\\n            this.rafHandle = window.requestAnimationFrame(this.tick);\\n            if (currentTime - lastTick < 120)\\n                return;\\n            this.lastTick = currentTime;\\n            this.rotation.set(framer_1.Animatable.getNumber(this.rotation) + 360 / 12);\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        this.tick();\\n    }\\n    componentWillUnmount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        window.cancelAnimationFrame(this.rafHandle);\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { width, height, indicatorColor } = this.props;\\n        const dots = [];\\n        for (let i = 0, il = numberOfDots; i < il; i++) {\\n            window[\\\"__checkBudget__\\\"]();\\n            const dot = (React.createElement(framer_1.Frame, { key: i, width: dotWidth, height: dotHeight, radius: dotWidth, background: indicatorColor, rotation: -i * (360 / numberOfDots), top: 0, opacity: 1 - 0.05 * i, originY: totalSize / 2 / dotHeight }));\\n            dots.push(dot);\\n        }\\n        return (React.createElement(framer_1.Frame, { width: totalSize, height: totalSize, parentSize: { width, height }, rotation: this.rotation, background: null }, dots));\\n    }\\n}\\nProgressIndicator.defaultProps = {\\n    indicatorColor: \\\"rgba(142,142,147,100)\\\",\\n    width: 40,\\n    height: 40,\\n};\\nProgressIndicator.propertyControls = {\\n    indicatorColor: { type: framer_1.ControlType.Color, title: \\\"Indicator\\\" },\\n};\\nexports.ProgressIndicator = ProgressIndicator;\\nconst numberOfDots = 12;\\nconst totalSize = 20;\\nconst dotWidth = 2;\\nconst dotHeight = 5;\\nexports.__info__ = [{ name: \\\"ProgressIndicator\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1Byb2dyZXNzSW5kaWNhdG9yLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixXQUFXO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0NBQWdDO0FBQy9DO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQSw4REFBOEQsbU1BQW1NO0FBQ2pRO0FBQ0E7QUFDQSxxREFBcUQsbURBQW1ELGdCQUFnQiw2Q0FBNkM7QUFDcks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1REFBdUQ7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdFQUFnRSIsImZpbGUiOiIuL2NvZGUvUHJvZ3Jlc3NJbmRpY2F0b3IudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIFByb2dyZXNzSW5kaWNhdG9yIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5sYXN0VGljayA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICB0aGlzLnJvdGF0aW9uID0gZnJhbWVyXzEuQW5pbWF0YWJsZSgwKTtcbiAgICAgICAgdGhpcy50aWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBjb25zdCB7IGxhc3RUaWNrIH0gPSB0aGlzO1xuICAgICAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgICAgIHRoaXMucmFmSGFuZGxlID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnRpY2spO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRUaW1lIC0gbGFzdFRpY2sgPCAxMjApXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5sYXN0VGljayA9IGN1cnJlbnRUaW1lO1xuICAgICAgICAgICAgdGhpcy5yb3RhdGlvbi5zZXQoZnJhbWVyXzEuQW5pbWF0YWJsZS5nZXROdW1iZXIodGhpcy5yb3RhdGlvbikgKyAzNjAgLyAxMik7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgdGhpcy50aWNrKCk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMucmFmSGFuZGxlKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0LCBpbmRpY2F0b3JDb2xvciB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgZG90cyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMCwgaWwgPSBudW1iZXJPZkRvdHM7IGkgPCBpbDsgaSsrKSB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IGRvdCA9IChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IGtleTogaSwgd2lkdGg6IGRvdFdpZHRoLCBoZWlnaHQ6IGRvdEhlaWdodCwgcmFkaXVzOiBkb3RXaWR0aCwgYmFja2dyb3VuZDogaW5kaWNhdG9yQ29sb3IsIHJvdGF0aW9uOiAtaSAqICgzNjAgLyBudW1iZXJPZkRvdHMpLCB0b3A6IDAsIG9wYWNpdHk6IDEgLSAwLjA1ICogaSwgb3JpZ2luWTogdG90YWxTaXplIC8gMiAvIGRvdEhlaWdodCB9KSk7XG4gICAgICAgICAgICBkb3RzLnB1c2goZG90KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRnJhbWUsIHsgd2lkdGg6IHRvdGFsU2l6ZSwgaGVpZ2h0OiB0b3RhbFNpemUsIHBhcmVudFNpemU6IHsgd2lkdGgsIGhlaWdodCB9LCByb3RhdGlvbjogdGhpcy5yb3RhdGlvbiwgYmFja2dyb3VuZDogbnVsbCB9LCBkb3RzKSk7XG4gICAgfVxufVxuUHJvZ3Jlc3NJbmRpY2F0b3IuZGVmYXVsdFByb3BzID0ge1xuICAgIGluZGljYXRvckNvbG9yOiBcInJnYmEoMTQyLDE0MiwxNDcsMTAwKVwiLFxuICAgIHdpZHRoOiA0MCxcbiAgICBoZWlnaHQ6IDQwLFxufTtcblByb2dyZXNzSW5kaWNhdG9yLnByb3BlcnR5Q29udHJvbHMgPSB7XG4gICAgaW5kaWNhdG9yQ29sb3I6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ29sb3IsIHRpdGxlOiBcIkluZGljYXRvclwiIH0sXG59O1xuZXhwb3J0cy5Qcm9ncmVzc0luZGljYXRvciA9IFByb2dyZXNzSW5kaWNhdG9yO1xuY29uc3QgbnVtYmVyT2ZEb3RzID0gMTI7XG5jb25zdCB0b3RhbFNpemUgPSAyMDtcbmNvbnN0IGRvdFdpZHRoID0gMjtcbmNvbnN0IGRvdEhlaWdodCA9IDU7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJQcm9ncmVzc0luZGljYXRvclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/ProgressIndicator.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/SearchBar.tsx\":\n/*!****************************!*\\\n  !*** ./code/SearchBar.tsx ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass SearchBar extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            value: SearchBar.defaultProps.value,\\n        };\\n        this.onChange = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const element = event.nativeEvent.target;\\n            const value = element.value;\\n            this.setState({ value });\\n            if (this.props.onValueChange)\\n                this.props.onValueChange(value);\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { value } = this.props;\\n        this.setState({ value });\\n    }\\n    componentWillReceiveProps(props) {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (props.value !== this.props.value) {\\n            this.setState({ value: props.value });\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { placeholder, backgroundColor, textColor } = this.props;\\n        const { value } = this.state;\\n        return (React.createElement(\\\"input\\\", { onChange: this.onChange, value: value, placeholder: placeholder, style: Object.assign({}, style, { backgroundColor, color: textColor }) }));\\n    }\\n}\\nSearchBar.defaultProps = {\\n    value: \\\"\\\",\\n    placeholder: \\\"Search\\\",\\n    width: 200,\\n    height: 36,\\n    backgroundColor: \\\"rgba(142,142,142,0.12)\\\",\\n    textColor: \\\"black\\\",\\n};\\nSearchBar.propertyControls = {\\n    value: { type: framer_1.ControlType.String, title: \\\"Value\\\" },\\n    placeholder: { type: framer_1.ControlType.String, title: \\\"Placeholder\\\" },\\n    backgroundColor: { type: framer_1.ControlType.Color, title: \\\"Background\\\" },\\n    textColor: { type: framer_1.ControlType.Color, title: \\\"Text\\\" },\\n};\\nexports.SearchBar = SearchBar;\\nconst style = {\\n    borderRadius: 10,\\n    border: \\\"none\\\",\\n    paddingLeft: 8,\\n    paddingRight: 8,\\n    position: \\\"absolute\\\",\\n    left: 0,\\n    right: 0,\\n    top: 0,\\n    bottom: 0,\\n};\\nexports.__info__ = [{ name: \\\"SearchBar\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1NlYXJjaEJhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsdUJBQXVCLFFBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSwwQ0FBMEM7QUFDekQsZUFBZSxRQUFRO0FBQ3ZCLDhDQUE4Qyx5RkFBeUYsVUFBVSxvQ0FBb0MsR0FBRztBQUN4TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBb0Q7QUFDaEUsa0JBQWtCLDBEQUEwRDtBQUM1RSxzQkFBc0Isd0RBQXdEO0FBQzlFLGdCQUFnQixrREFBa0Q7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsd0RBQXdEIiwiZmlsZSI6Ii4vY29kZS9TZWFyY2hCYXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIFNlYXJjaEJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB2YWx1ZTogU2VhcmNoQmFyLmRlZmF1bHRQcm9wcy52YWx1ZSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gZXZlbnQubmF0aXZlRXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBlbGVtZW50LnZhbHVlO1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMub25WYWx1ZUNoYW5nZSlcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uVmFsdWVDaGFuZ2UodmFsdWUpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB2YWx1ZSB9KTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcykge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgaWYgKHByb3BzLnZhbHVlICE9PSB0aGlzLnByb3BzLnZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWU6IHByb3BzLnZhbHVlIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgcGxhY2Vob2xkZXIsIGJhY2tncm91bmRDb2xvciwgdGV4dENvbG9yIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IHZhbHVlIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7IG9uQ2hhbmdlOiB0aGlzLm9uQ2hhbmdlLCB2YWx1ZTogdmFsdWUsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgc3R5bGU6IE9iamVjdC5hc3NpZ24oe30sIHN0eWxlLCB7IGJhY2tncm91bmRDb2xvciwgY29sb3I6IHRleHRDb2xvciB9KSB9KSk7XG4gICAgfVxufVxuU2VhcmNoQmFyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB2YWx1ZTogXCJcIixcbiAgICBwbGFjZWhvbGRlcjogXCJTZWFyY2hcIixcbiAgICB3aWR0aDogMjAwLFxuICAgIGhlaWdodDogMzYsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMTQyLDE0MiwxNDIsMC4xMilcIixcbiAgICB0ZXh0Q29sb3I6IFwiYmxhY2tcIixcbn07XG5TZWFyY2hCYXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB2YWx1ZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIlZhbHVlXCIgfSxcbiAgICBwbGFjZWhvbGRlcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIlBsYWNlaG9sZGVyXCIgfSxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ29sb3IsIHRpdGxlOiBcIkJhY2tncm91bmRcIiB9LFxuICAgIHRleHRDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGV4dFwiIH0sXG59O1xuZXhwb3J0cy5TZWFyY2hCYXIgPSBTZWFyY2hCYXI7XG5jb25zdCBzdHlsZSA9IHtcbiAgICBib3JkZXJSYWRpdXM6IDEwLFxuICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgcGFkZGluZ0xlZnQ6IDgsXG4gICAgcGFkZGluZ1JpZ2h0OiA4LFxuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgICB0b3A6IDAsXG4gICAgYm90dG9tOiAwLFxufTtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlNlYXJjaEJhclwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/SearchBar.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/SegmentedControl.tsx\":\n/*!***********************************!*\\\n  !*** ./code/SegmentedControl.tsx ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass SegmentedControl extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            currentSegment: 0,\\n        };\\n        this.onTapSegment = (index) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { onSegmentChange } = this.props;\\n            if (onSegmentChange) {\\n                const segmentTitle = this.segmentTitles()[index];\\n                onSegmentChange(index, segmentTitle);\\n            }\\n            else {\\n                this.setState({ currentSegment: index });\\n            }\\n        };\\n        this.segmentTitles = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { segment1, segment2, segment3, segment4 } = this.props;\\n            const segmentTitles = [];\\n            if (segment1)\\n                segmentTitles.push(segment1);\\n            if (segment2)\\n                segmentTitles.push(segment2);\\n            if (segment3)\\n                segmentTitles.push(segment3);\\n            if (segment4)\\n                segmentTitles.push(segment4);\\n            return segmentTitles;\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { currentSegment } = this.props;\\n        this.setState({ currentSegment });\\n    }\\n    componentWillReceiveProps(props) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { currentSegment } = props;\\n        if (currentSegment !== this.props.currentSegment) {\\n            this.setState({ currentSegment });\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { width, height, tintColor, textColor } = this.props;\\n        const { currentSegment } = this.state;\\n        const segmentTitles = this.segmentTitles();\\n        const segmentWidth = Math.round(width / segmentTitles.length);\\n        const segments = [];\\n        for (let i = 0, il = segmentTitles.length; i < il; i++) {\\n            window[\\\"__checkBudget__\\\"]();\\n            const isCurrent = i === currentSegment;\\n            const borderLeftEnabled = i !== 0;\\n            const segment = (React.createElement(framer_1.Frame, { key: i, width: segmentWidth, height: height, left: i * segmentWidth, top: 0, background: isCurrent ? tintColor : null, borderColor: tintColor, borderWidth: { left: borderLeftEnabled ? 1 : 0 }, borderStyle: \\\"solid\\\", style: { color: isCurrent ? textColor : tintColor, fontSize: 13 }, onTap: this.onTapSegment.bind(this, i) }, segmentTitles[i]));\\n            segments.push(segment);\\n        }\\n        return (React.createElement(framer_1.Frame, { width: width, height: height, background: null, borderColor: tintColor, borderWidth: 1, borderStyle: \\\"solid\\\", radius: 4, clip: true }, segments));\\n    }\\n}\\nSegmentedControl.defaultProps = {\\n    currentSegment: 0,\\n    segment1: \\\"Item 1\\\",\\n    segment2: \\\"Item 2\\\",\\n    segment3: \\\"\\\",\\n    segment4: \\\"\\\",\\n    tintColor: \\\"#007AFF\\\",\\n    textColor: \\\"white\\\",\\n    width: 120,\\n    height: 27,\\n};\\nSegmentedControl.propertyControls = {\\n    segment1: { type: framer_1.ControlType.String, title: \\\"Segment 1\\\" },\\n    segment2: { type: framer_1.ControlType.String, title: \\\"Segment 2\\\" },\\n    segment3: { type: framer_1.ControlType.String, title: \\\"Segment 3\\\" },\\n    segment4: { type: framer_1.ControlType.String, title: \\\"Segment 4\\\" },\\n    currentSegment: { type: framer_1.ControlType.Number, min: 0, round: true, title: \\\"Current\\\" },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n    textColor: { type: framer_1.ControlType.Color, title: \\\"Text\\\" },\\n};\\nexports.SegmentedControl = SegmentedControl;\\nexports.__info__ = [{ name: \\\"SegmentedControl\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1NlZ21lbnRlZENvbnRyb2wudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0JBQWtCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isd0JBQXdCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlDQUF5QztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEMsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxlQUFlLGlCQUFpQjtBQUNoQztBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNDQUFzQztBQUNyRCxlQUFlLGlCQUFpQjtBQUNoQztBQUNBO0FBQ0E7QUFDQSxrREFBa0QsUUFBUTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsOEpBQThKLGtDQUFrQyxnQ0FBZ0MseURBQXlELDBDQUEwQztBQUNyWTtBQUNBO0FBQ0EscURBQXFELHNJQUFzSTtBQUMzTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx3REFBd0Q7QUFDdkUsZUFBZSx3REFBd0Q7QUFDdkUsZUFBZSx3REFBd0Q7QUFDdkUsZUFBZSx3REFBd0Q7QUFDdkUscUJBQXFCLDJFQUEyRTtBQUNoRyxnQkFBZ0Isa0RBQWtEO0FBQ2xFLGdCQUFnQixrREFBa0Q7QUFDbEU7QUFDQTtBQUNBLHFCQUFxQiwrREFBK0QiLCJmaWxlIjoiLi9jb2RlL1NlZ21lbnRlZENvbnRyb2wudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIFNlZ21lbnRlZENvbnRyb2wgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgY3VycmVudFNlZ21lbnQ6IDAsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub25UYXBTZWdtZW50ID0gKGluZGV4KSA9PiB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IHsgb25TZWdtZW50Q2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICAgICAgaWYgKG9uU2VnbWVudENoYW5nZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlZ21lbnRUaXRsZSA9IHRoaXMuc2VnbWVudFRpdGxlcygpW2luZGV4XTtcbiAgICAgICAgICAgICAgICBvblNlZ21lbnRDaGFuZ2UoaW5kZXgsIHNlZ21lbnRUaXRsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHsgY3VycmVudFNlZ21lbnQ6IGluZGV4IH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnNlZ21lbnRUaXRsZXMgPSAoKSA9PiB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IHsgc2VnbWVudDEsIHNlZ21lbnQyLCBzZWdtZW50Mywgc2VnbWVudDQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgICAgICBjb25zdCBzZWdtZW50VGl0bGVzID0gW107XG4gICAgICAgICAgICBpZiAoc2VnbWVudDEpXG4gICAgICAgICAgICAgICAgc2VnbWVudFRpdGxlcy5wdXNoKHNlZ21lbnQxKTtcbiAgICAgICAgICAgIGlmIChzZWdtZW50MilcbiAgICAgICAgICAgICAgICBzZWdtZW50VGl0bGVzLnB1c2goc2VnbWVudDIpO1xuICAgICAgICAgICAgaWYgKHNlZ21lbnQzKVxuICAgICAgICAgICAgICAgIHNlZ21lbnRUaXRsZXMucHVzaChzZWdtZW50Myk7XG4gICAgICAgICAgICBpZiAoc2VnbWVudDQpXG4gICAgICAgICAgICAgICAgc2VnbWVudFRpdGxlcy5wdXNoKHNlZ21lbnQ0KTtcbiAgICAgICAgICAgIHJldHVybiBzZWdtZW50VGl0bGVzO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgY3VycmVudFNlZ21lbnQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjdXJyZW50U2VnbWVudCB9KTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcykge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgY29uc3QgeyBjdXJyZW50U2VnbWVudCB9ID0gcHJvcHM7XG4gICAgICAgIGlmIChjdXJyZW50U2VnbWVudCAhPT0gdGhpcy5wcm9wcy5jdXJyZW50U2VnbWVudCkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGN1cnJlbnRTZWdtZW50IH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgdGludENvbG9yLCB0ZXh0Q29sb3IgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgY3VycmVudFNlZ21lbnQgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHNlZ21lbnRUaXRsZXMgPSB0aGlzLnNlZ21lbnRUaXRsZXMoKTtcbiAgICAgICAgY29uc3Qgc2VnbWVudFdpZHRoID0gTWF0aC5yb3VuZCh3aWR0aCAvIHNlZ21lbnRUaXRsZXMubGVuZ3RoKTtcbiAgICAgICAgY29uc3Qgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDAsIGlsID0gc2VnbWVudFRpdGxlcy5sZW5ndGg7IGkgPCBpbDsgaSsrKSB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IGlzQ3VycmVudCA9IGkgPT09IGN1cnJlbnRTZWdtZW50O1xuICAgICAgICAgICAgY29uc3QgYm9yZGVyTGVmdEVuYWJsZWQgPSBpICE9PSAwO1xuICAgICAgICAgICAgY29uc3Qgc2VnbWVudCA9IChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IGtleTogaSwgd2lkdGg6IHNlZ21lbnRXaWR0aCwgaGVpZ2h0OiBoZWlnaHQsIGxlZnQ6IGkgKiBzZWdtZW50V2lkdGgsIHRvcDogMCwgYmFja2dyb3VuZDogaXNDdXJyZW50ID8gdGludENvbG9yIDogbnVsbCwgYm9yZGVyQ29sb3I6IHRpbnRDb2xvciwgYm9yZGVyV2lkdGg6IHsgbGVmdDogYm9yZGVyTGVmdEVuYWJsZWQgPyAxIDogMCB9LCBib3JkZXJTdHlsZTogXCJzb2xpZFwiLCBzdHlsZTogeyBjb2xvcjogaXNDdXJyZW50ID8gdGV4dENvbG9yIDogdGludENvbG9yLCBmb250U2l6ZTogMTMgfSwgb25UYXA6IHRoaXMub25UYXBTZWdtZW50LmJpbmQodGhpcywgaSkgfSwgc2VnbWVudFRpdGxlc1tpXSkpO1xuICAgICAgICAgICAgc2VnbWVudHMucHVzaChzZWdtZW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRnJhbWUsIHsgd2lkdGg6IHdpZHRoLCBoZWlnaHQ6IGhlaWdodCwgYmFja2dyb3VuZDogbnVsbCwgYm9yZGVyQ29sb3I6IHRpbnRDb2xvciwgYm9yZGVyV2lkdGg6IDEsIGJvcmRlclN0eWxlOiBcInNvbGlkXCIsIHJhZGl1czogNCwgY2xpcDogdHJ1ZSB9LCBzZWdtZW50cykpO1xuICAgIH1cbn1cblNlZ21lbnRlZENvbnRyb2wuZGVmYXVsdFByb3BzID0ge1xuICAgIGN1cnJlbnRTZWdtZW50OiAwLFxuICAgIHNlZ21lbnQxOiBcIkl0ZW0gMVwiLFxuICAgIHNlZ21lbnQyOiBcIkl0ZW0gMlwiLFxuICAgIHNlZ21lbnQzOiBcIlwiLFxuICAgIHNlZ21lbnQ0OiBcIlwiLFxuICAgIHRpbnRDb2xvcjogXCIjMDA3QUZGXCIsXG4gICAgdGV4dENvbG9yOiBcIndoaXRlXCIsXG4gICAgd2lkdGg6IDEyMCxcbiAgICBoZWlnaHQ6IDI3LFxufTtcblNlZ21lbnRlZENvbnRyb2wucHJvcGVydHlDb250cm9scyA9IHtcbiAgICBzZWdtZW50MTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIlNlZ21lbnQgMVwiIH0sXG4gICAgc2VnbWVudDI6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJTZWdtZW50IDJcIiB9LFxuICAgIHNlZ21lbnQzOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiU2VnbWVudCAzXCIgfSxcbiAgICBzZWdtZW50NDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIlNlZ21lbnQgNFwiIH0sXG4gICAgY3VycmVudFNlZ21lbnQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuTnVtYmVyLCBtaW46IDAsIHJvdW5kOiB0cnVlLCB0aXRsZTogXCJDdXJyZW50XCIgfSxcbiAgICB0aW50Q29sb3I6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ29sb3IsIHRpdGxlOiBcIlRpbnRcIiB9LFxuICAgIHRleHRDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGV4dFwiIH0sXG59O1xuZXhwb3J0cy5TZWdtZW50ZWRDb250cm9sID0gU2VnbWVudGVkQ29udHJvbDtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlNlZ21lbnRlZENvbnRyb2xcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/SegmentedControl.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/Slider.tsx\":\n/*!*************************!*\\\n  !*** ./code/Slider.tsx ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass Slider extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            value: Slider.defaultProps.value,\\n        };\\n        this.onMove = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { width, onValueChange } = this.props;\\n            const centerX = event.x + Slider.knobSize / 2;\\n            const value = Math.min(Math.max(0, (centerX / width) * 100), 100);\\n            this.setState({ value });\\n            if (onValueChange) {\\n                onValueChange(value);\\n            }\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { value } = this.props;\\n        this.setState({ value });\\n    }\\n    componentWillReceiveProps(props) {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (props.value !== this.props.value) {\\n            this.setState({ value: props.value });\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { knob, track, tint, width, height } = this.props;\\n        const value = Math.min(Math.max(this.state.value, 0), 100);\\n        const ratio = value / 100;\\n        const left = Math.round(width * ratio - Slider.knobSize / 2);\\n        const constraints = {\\n            x: -Slider.knobSize / 2,\\n            y: height / 2 - Slider.knobSize / 2,\\n            width: width + Slider.knobSize,\\n            height: Slider.knobSize,\\n        };\\n        return (React.createElement(React.Fragment, null,\\n            React.createElement(framer_1.Frame, { left: 0, clip: true, height: 2, width: width, top: height / 2 - 1, background: track, style: { borderRadius: 50 } },\\n                React.createElement(framer_1.Frame, { width: `${ratio * 100}%`, top: 0, left: 0, bottom: 0, background: tint })),\\n            React.createElement(framer_1.Draggable, { width: Slider.knobSize, height: Slider.knobSize, constraints: constraints, bounce: false, overdrag: false, onMove: this.onMove, horizontal: true, vertical: false, left: left, top: height / 2 - Slider.knobSize / 2, background: knob, radius: Slider.knobSize, shadows: [\\n                    {\\n                        inset: false,\\n                        color: \\\"rgba(0,0,0,0.1)\\\",\\n                        x: 0,\\n                        y: 0,\\n                        blur: 0,\\n                        spread: 1,\\n                    },\\n                    {\\n                        inset: false,\\n                        color: \\\"rgba(0,0,0,0.05)\\\",\\n                        x: 0,\\n                        y: 3,\\n                        blur: 1,\\n                        spread: 0,\\n                    },\\n                    {\\n                        inset: false,\\n                        color: \\\"rgba(0,0,0,0.1)\\\",\\n                        x: 0,\\n                        y: 2,\\n                        blur: 2,\\n                        spread: 0,\\n                    },\\n                    {\\n                        inset: false,\\n                        color: \\\"rgba(0,0,0,0.05)\\\",\\n                        x: 0,\\n                        y: 3,\\n                        blur: 3,\\n                        spread: 0,\\n                    },\\n                ] })));\\n    }\\n}\\nSlider.defaultProps = {\\n    width: 120,\\n    height: 44,\\n    value: 50,\\n    knob: \\\"white\\\",\\n    track: \\\"#A4AAB3\\\",\\n    tint: \\\"#007AFF\\\",\\n};\\nSlider.propertyControls = {\\n    value: { type: framer_1.ControlType.Number, title: \\\"Value\\\" },\\n    tint: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n};\\nSlider.knobSize = 28;\\nexports.Slider = Slider;\\nexports.__info__ = [{ name: \\\"Slider\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1NsaWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1QkFBdUI7QUFDMUM7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLHVCQUF1QixRQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFCQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUNBQW1DO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELCtGQUErRixtQkFBbUIsRUFBRTtBQUNySyxxREFBcUQsV0FBVyxZQUFZLGtEQUFrRDtBQUM5SCxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9EQUFvRDtBQUNoRSxXQUFXLGtEQUFrRDtBQUM3RDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscURBQXFEIiwiZmlsZSI6Ii4vY29kZS9TbGlkZXIudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIFNsaWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICB2YWx1ZTogU2xpZGVyLmRlZmF1bHRQcm9wcy52YWx1ZSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbk1vdmUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyB3aWR0aCwgb25WYWx1ZUNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgICAgIGNvbnN0IGNlbnRlclggPSBldmVudC54ICsgU2xpZGVyLmtub2JTaXplIC8gMjtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gTWF0aC5taW4oTWF0aC5tYXgoMCwgKGNlbnRlclggLyB3aWR0aCkgKiAxMDApLCAxMDApO1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlIH0pO1xuICAgICAgICAgICAgaWYgKG9uVmFsdWVDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBvblZhbHVlQ2hhbmdlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBjb25zdCB7IHZhbHVlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWUgfSk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMocHJvcHMpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGlmIChwcm9wcy52YWx1ZSAhPT0gdGhpcy5wcm9wcy52YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlOiBwcm9wcy52YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBjb25zdCB7IGtub2IsIHRyYWNrLCB0aW50LCB3aWR0aCwgaGVpZ2h0IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IE1hdGgubWluKE1hdGgubWF4KHRoaXMuc3RhdGUudmFsdWUsIDApLCAxMDApO1xuICAgICAgICBjb25zdCByYXRpbyA9IHZhbHVlIC8gMTAwO1xuICAgICAgICBjb25zdCBsZWZ0ID0gTWF0aC5yb3VuZCh3aWR0aCAqIHJhdGlvIC0gU2xpZGVyLmtub2JTaXplIC8gMik7XG4gICAgICAgIGNvbnN0IGNvbnN0cmFpbnRzID0ge1xuICAgICAgICAgICAgeDogLVNsaWRlci5rbm9iU2l6ZSAvIDIsXG4gICAgICAgICAgICB5OiBoZWlnaHQgLyAyIC0gU2xpZGVyLmtub2JTaXplIC8gMixcbiAgICAgICAgICAgIHdpZHRoOiB3aWR0aCArIFNsaWRlci5rbm9iU2l6ZSxcbiAgICAgICAgICAgIGhlaWdodDogU2xpZGVyLmtub2JTaXplLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IGxlZnQ6IDAsIGNsaXA6IHRydWUsIGhlaWdodDogMiwgd2lkdGg6IHdpZHRoLCB0b3A6IGhlaWdodCAvIDIgLSAxLCBiYWNrZ3JvdW5kOiB0cmFjaywgc3R5bGU6IHsgYm9yZGVyUmFkaXVzOiA1MCB9IH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyB3aWR0aDogYCR7cmF0aW8gKiAxMDB9JWAsIHRvcDogMCwgbGVmdDogMCwgYm90dG9tOiAwLCBiYWNrZ3JvdW5kOiB0aW50IH0pKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRHJhZ2dhYmxlLCB7IHdpZHRoOiBTbGlkZXIua25vYlNpemUsIGhlaWdodDogU2xpZGVyLmtub2JTaXplLCBjb25zdHJhaW50czogY29uc3RyYWludHMsIGJvdW5jZTogZmFsc2UsIG92ZXJkcmFnOiBmYWxzZSwgb25Nb3ZlOiB0aGlzLm9uTW92ZSwgaG9yaXpvbnRhbDogdHJ1ZSwgdmVydGljYWw6IGZhbHNlLCBsZWZ0OiBsZWZ0LCB0b3A6IGhlaWdodCAvIDIgLSBTbGlkZXIua25vYlNpemUgLyAyLCBiYWNrZ3JvdW5kOiBrbm9iLCByYWRpdXM6IFNsaWRlci5rbm9iU2l6ZSwgc2hhZG93czogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnNldDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJyZ2JhKDAsMCwwLDAuMSlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmx1cjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwcmVhZDogMSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmdiYSgwLDAsMCwwLjA1KVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDMsXG4gICAgICAgICAgICAgICAgICAgICAgICBibHVyOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3ByZWFkOiAwLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnNldDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJyZ2JhKDAsMCwwLDAuMSlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiAyLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmx1cjogMixcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwcmVhZDogMCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmdiYSgwLDAsMCwwLjA1KVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDMsXG4gICAgICAgICAgICAgICAgICAgICAgICBibHVyOiAzLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3ByZWFkOiAwLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0gfSkpKTtcbiAgICB9XG59XG5TbGlkZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHdpZHRoOiAxMjAsXG4gICAgaGVpZ2h0OiA0NCxcbiAgICB2YWx1ZTogNTAsXG4gICAga25vYjogXCJ3aGl0ZVwiLFxuICAgIHRyYWNrOiBcIiNBNEFBQjNcIixcbiAgICB0aW50OiBcIiMwMDdBRkZcIixcbn07XG5TbGlkZXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB2YWx1ZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsIHRpdGxlOiBcIlZhbHVlXCIgfSxcbiAgICB0aW50OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJUaW50XCIgfSxcbn07XG5TbGlkZXIua25vYlNpemUgPSAyODtcbmV4cG9ydHMuU2xpZGVyID0gU2xpZGVyO1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiU2xpZGVyXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/Slider.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/StatusBar.tsx\":\n/*!****************************!*\\\n  !*** ./code/StatusBar.tsx ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass StatusBar extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            time: \\\"9:00\\\",\\n        };\\n        this.updateTime = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const date = new Date();\\n            const time = (\\\"0\\\" + date.getHours()).slice(-2) + \\\":\\\" + (\\\"0\\\" + date.getMinutes()).slice(-2);\\n            this.setState({ time });\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        this.timer = window.setInterval(() => {\\n            window[\\\"__checkBudget__\\\"]();\\n            this.updateTime();\\n        }, 1000);\\n    }\\n    componentWillUnmount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        window.clearInterval(this.timer);\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { carrier, batteryLevel, appearance, width, height } = this.props;\\n        return (React.createElement(framer_1.Frame, { width: width, height: height, background: null, style: {\\n                fontSize: 12,\\n                textAlign: \\\"center\\\",\\n                color: appearance === \\\"dark\\\" ? \\\"black\\\" : \\\"white\\\",\\n            } },\\n            React.createElement(framer_1.Frame, { top: 0, left: 0, right: 0, height: 20, background: null },\\n                React.createElement(framer_1.Frame, { width: 100, left: 0, top: 0, height: 20, background: null },\\n                    React.createElement(\\\"div\\\", { style: {\\n                            fill: \\\"black\\\",\\n                            stroke: \\\"black\\\",\\n                            width: \\\"auto\\\",\\n                            float: \\\"left\\\",\\n                            padding: 3,\\n                            marginLeft: 2,\\n                            paddingTop: 3,\\n                        }, dangerouslySetInnerHTML: { __html: signal(appearance) } }),\\n                    React.createElement(\\\"div\\\", { style: { float: \\\"left\\\", lineHeight: \\\"20px\\\" } }, carrier)),\\n                React.createElement(framer_1.Frame, { height: 20, top: 0, background: null },\\n                    React.createElement(\\\"div\\\", { style: {\\n                            fontFamily: \\\"system-ui, -apple-system\\\",\\n                            marginTop: \\\"3px\\\",\\n                        } }, this.state.time)),\\n                React.createElement(framer_1.Frame, { width: 100, right: 0, top: 0, height: 20, background: null },\\n                    React.createElement(\\\"div\\\", { style: {\\n                            fill: \\\"black\\\",\\n                            stroke: \\\"black\\\",\\n                            width: \\\"auto\\\",\\n                            float: \\\"right\\\",\\n                            padding: 4,\\n                            paddingLeft: 5,\\n                            paddingTop: 4,\\n                        }, dangerouslySetInnerHTML: {\\n                            __html: batterSVG(appearance, batteryLevel),\\n                        } }),\\n                    React.createElement(\\\"div\\\", { style: { float: \\\"right\\\", lineHeight: \\\"20px\\\" } }, `${Math.round(batteryLevel)}%`)))));\\n    }\\n}\\nStatusBar.defaultProps = {\\n    carrier: \\\"Framer\\\",\\n    appearance: \\\"dark\\\",\\n    batteryLevel: 100,\\n    width: 200,\\n    height: 20,\\n};\\nStatusBar.propertyControls = {\\n    carrier: { type: framer_1.ControlType.String, title: \\\"Carrier\\\" },\\n    appearance: {\\n        type: framer_1.ControlType.Enum,\\n        options: [\\\"dark\\\", \\\"light\\\"],\\n        optionTitles: [\\\"Dark\\\", \\\"Light\\\"],\\n        title: \\\"Appearance\\\",\\n    },\\n    batteryLevel: {\\n        type: framer_1.ControlType.Number,\\n        min: 0,\\n        max: 100,\\n        round: true,\\n        title: \\\"Battery\\\",\\n    },\\n};\\nexports.StatusBar = StatusBar;\\nfunction batterSVG(appearance, batteryLevel) {\\n    window[\\\"__checkBudget__\\\"]();\\n    const color = appearance === \\\"dark\\\" ? \\\"black\\\" : \\\"white\\\";\\n    const batteryJuiceColor = batteryLevel <= 10 ? \\\"red\\\" : batteryLevel <= 20 ? \\\"#FFCC01\\\" : color;\\n    return `<svg width=\\\"27px\\\" height=\\\"12px\\\" viewBox=\\\"0 0 27 12\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <g id=\\\"Symbols\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"Bars/Status/Black\\\" transform=\\\"translate(-343.000000, -4.000000)\\\">\\n            <g id=\\\"Pin-Right\\\" transform=\\\"translate(298.000000, 3.000000)\\\">\\n                <g id=\\\"Battery\\\" transform=\\\"translate(9.000000, 0.000000)\\\">\\n                    <g transform=\\\"translate(36.000000, 1.500000)\\\">\\n                        <path d=\\\"M3.2048565,0.5 C2.26431807,0.5 1.89540921,0.571239588 1.5147423,0.774822479 C1.19446913,0.946106445 0.946106445,1.19446913 0.774822479,1.5147423 C0.571239588,1.89540921 0.5,2.26431807 0.5,3.2048565 L0.5,8.2951435 C0.5,9.23568193 0.571239588,9.60459079 0.774822479,9.9852577 C0.946106445,10.3055309 1.19446913,10.5538936 1.5147423,10.7251775 C1.89540921,10.9287604 2.26431807,11 3.2048565,11 L22.0738202,11 C22.8614775,11 23.5,10.3614775 23.5,9.57382015 L23.5,3.2048565 C23.5,2.26431807 23.4287604,1.89540921 23.2251775,1.5147423 C23.0538936,1.19446913 22.8055309,0.946106445 22.4852577,0.774822479 C22.1045908,0.571239588 21.7356819,0.5 20.7951435,0.5 L3.2048565,0.5 Z\\\" id=\\\"Border\\\" stroke=\\\"${color}\\\" opacity=\\\"0.4\\\"></path>\\n                        <path d=\\\"M25,4 C25.8626136,4.2220214 26.5,5.00507154 26.5,5.93699126 C26.5,6.86891097 25.8626136,7.65196112 25,7.87398251 L25,4 Z\\\" id=\\\"Nub\\\" stroke=\\\"none\\\" fill=\\\"${color}\\\" opacity=\\\"0.4\\\"></path>\\n                        <rect id=\\\"Charge\\\" fill=\\\"${batteryJuiceColor}\\\" x=\\\"2\\\" y=\\\"2\\\" width=\\\"${Math.round((batteryLevel / 100) * 19 + 1)}\\\" height=\\\"7.5\\\" rx=\\\"0.5\\\"></rect>\\n                    </g>\\n                </g>\\n            </g>\\n        </g>\\n    </g>\\n</svg>`;\\n}\\nfunction signal(appearance) {\\n    window[\\\"__checkBudget__\\\"]();\\n    const color = appearance === \\\"dark\\\" ? \\\"black\\\" : \\\"white\\\";\\n    return `<svg width=\\\"17px\\\" height=\\\"10px\\\" viewBox=\\\"0 0 17 10\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <g id=\\\"Symbols\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"Overrides/Status-Bar/Signal---Black\\\" transform=\\\"translate(-6.000000, -5.000000)\\\" fill=\\\"${color}\\\">\\n            <g id=\\\"Group\\\" transform=\\\"translate(6.000000, 3.000000)\\\">\\n                <path d=\\\"M1,7.5 L2,7.5 C2.55228475,7.5 3,7.94771525 3,8.5 L3,11 C3,11.5522847 2.55228475,12 2,12 L1,12 C0.44771525,12 6.76353751e-17,11.5522847 0,11 L0,8.5 C-6.76353751e-17,7.94771525 0.44771525,7.5 1,7.5 Z M5.5,6 L6.5,6 C7.05228475,6 7.5,6.44771525 7.5,7 L7.5,11 C7.5,11.5522847 7.05228475,12 6.5,12 L5.5,12 C4.94771525,12 4.5,11.5522847 4.5,11 L4.5,7 C4.5,6.44771525 4.94771525,6 5.5,6 Z M10,4 L11,4 C11.5522847,4 12,4.44771525 12,5 L12,11 C12,11.5522847 11.5522847,12 11,12 L10,12 C9.44771525,12 9,11.5522847 9,11 L9,5 C9,4.44771525 9.44771525,4 10,4 Z M14.5,2 L15.5,2 C16.0522847,2 16.5,2.44771525 16.5,3 L16.5,11 C16.5,11.5522847 16.0522847,12 15.5,12 L14.5,12 C13.9477153,12 13.5,11.5522847 13.5,11 L13.5,3 C13.5,2.44771525 13.9477153,2 14.5,2 Z\\\" id=\\\"Mobile-Signal\\\"></path>\\n            </g>\\n        </g>\\n    </g>\\n</svg>`;\\n}\\nexports.__info__ = [{ name: \\\"StatusBar\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./code/StatusBar.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/Switch.tsx\":\n/*!*************************!*\\\n  !*** ./code/Switch.tsx ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass Switch extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.state = {\\n            enabled: false,\\n        };\\n        this.switch = framer_1.PropertyStore({ left: 0, dimScale: 1 }, true);\\n        this.animation = undefined;\\n        this.onTap = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const enabled = !this.state.enabled;\\n            const { onChange } = this.props;\\n            if (onChange) {\\n                onChange(enabled);\\n            }\\n            else {\\n                this.setState({ enabled });\\n            }\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { enabled } = this.props;\\n        this.setState({ enabled });\\n        this.transition(enabled, false);\\n    }\\n    componentWillReceiveProps(props) {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (props.enabled !== this.props.enabled) {\\n            this.setState({ enabled: props.enabled });\\n        }\\n    }\\n    transition(enabled, shouldAnimate = true) {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (this.animation) {\\n            this.animation.cancel();\\n            this.animation = undefined;\\n        }\\n        const { width, height } = this.props;\\n        const knobWidth = height - 2;\\n        const left = enabled ? width - knobWidth - 1 : 1;\\n        const dimScale = enabled ? 0 : 1;\\n        if (shouldAnimate && framer_1.RenderTarget.current() === framer_1.RenderTarget.preview) {\\n            const springOptions = { tension: 250, friction: 25 };\\n            this.animation = framer_1.animate.spring(this.switch, { left, dimScale }, springOptions);\\n        }\\n        else {\\n            this.switch.left = left;\\n            this.switch.dimScale = dimScale;\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { tint, width, height } = this.props;\\n        const { enabled } = this.state;\\n        this.transition(enabled);\\n        return (React.createElement(framer_1.Frame, { width: width, height: height, background: tint, onTap: this.onTap, style: {\\n                borderRadius: 1000,\\n            } },\\n            React.createElement(framer_1.Frame, { background: \\\"#F8F8F8\\\", top: 0, left: 0, right: 0, bottom: 0, scale: this.switch.dimScale, scaleX: 1, style: {\\n                    borderRadius: 1000,\\n                    boxShadow: \\\"inset 0 0 0 1px #E4E4E4\\\",\\n                } }),\\n            React.createElement(framer_1.Frame, { background: \\\"white\\\", top: 1, bottom: 1, left: this.switch.left, aspectRatio: 1, style: {\\n                    borderRadius: 1000,\\n                    boxShadow: \\\"0 2px 1px 1px rgba(0,0,0,.07), 0 0 1px rgba(0,0,0,.3)\\\",\\n                } })));\\n    }\\n}\\nSwitch.defaultProps = {\\n    width: 51,\\n    height: 31,\\n    enabled: true,\\n    tint: \\\"#4BD964\\\",\\n};\\nSwitch.propertyControls = {\\n    enabled: { type: framer_1.ControlType.Boolean, title: \\\"Enabled\\\" },\\n    tint: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n};\\nexports.Switch = Switch;\\nexports.__info__ = [{ name: \\\"Switch\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1N3aXRjaC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHVCQUF1QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixXQUFXO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFVBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsVUFBVTtBQUN6Qix1QkFBdUIsVUFBVTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHlCQUF5QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsbUVBQW1FLGlCQUFpQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckMsZUFBZSxVQUFVO0FBQ3pCO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0EsYUFBYSxFQUFFO0FBQ2YsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRTtBQUNuQixpREFBaUQ7QUFDakQ7QUFDQTtBQUNBLGlCQUFpQixFQUFFO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsdURBQXVEO0FBQ3JFLFdBQVcsa0RBQWtEO0FBQzdEO0FBQ0E7QUFDQSxxQkFBcUIscURBQXFEIiwiZmlsZSI6Ii4vY29kZS9Td2l0Y2gudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNsYXNzIFN3aXRjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5zd2l0Y2ggPSBmcmFtZXJfMS5Qcm9wZXJ0eVN0b3JlKHsgbGVmdDogMCwgZGltU2NhbGU6IDEgfSwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuYW5pbWF0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLm9uVGFwID0gKCkgPT4ge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBjb25zdCBlbmFibGVkID0gIXRoaXMuc3RhdGUuZW5hYmxlZDtcbiAgICAgICAgICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgICAgICBpZiAob25DaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBvbkNoYW5nZShlbmFibGVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBlbmFibGVkIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgZW5hYmxlZCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVuYWJsZWQgfSk7XG4gICAgICAgIHRoaXMudHJhbnNpdGlvbihlbmFibGVkLCBmYWxzZSk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMocHJvcHMpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGlmIChwcm9wcy5lbmFibGVkICE9PSB0aGlzLnByb3BzLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBlbmFibGVkOiBwcm9wcy5lbmFibGVkIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyYW5zaXRpb24oZW5hYmxlZCwgc2hvdWxkQW5pbWF0ZSA9IHRydWUpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGlmICh0aGlzLmFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5hbmltYXRpb24uY2FuY2VsKCk7XG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGtub2JXaWR0aCA9IGhlaWdodCAtIDI7XG4gICAgICAgIGNvbnN0IGxlZnQgPSBlbmFibGVkID8gd2lkdGggLSBrbm9iV2lkdGggLSAxIDogMTtcbiAgICAgICAgY29uc3QgZGltU2NhbGUgPSBlbmFibGVkID8gMCA6IDE7XG4gICAgICAgIGlmIChzaG91bGRBbmltYXRlICYmIGZyYW1lcl8xLlJlbmRlclRhcmdldC5jdXJyZW50KCkgPT09IGZyYW1lcl8xLlJlbmRlclRhcmdldC5wcmV2aWV3KSB7XG4gICAgICAgICAgICBjb25zdCBzcHJpbmdPcHRpb25zID0geyB0ZW5zaW9uOiAyNTAsIGZyaWN0aW9uOiAyNSB9O1xuICAgICAgICAgICAgdGhpcy5hbmltYXRpb24gPSBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyh0aGlzLnN3aXRjaCwgeyBsZWZ0LCBkaW1TY2FsZSB9LCBzcHJpbmdPcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3dpdGNoLmxlZnQgPSBsZWZ0O1xuICAgICAgICAgICAgdGhpcy5zd2l0Y2guZGltU2NhbGUgPSBkaW1TY2FsZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBjb25zdCB7IHRpbnQsIHdpZHRoLCBoZWlnaHQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgZW5hYmxlZCB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgdGhpcy50cmFuc2l0aW9uKGVuYWJsZWQpO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoZnJhbWVyXzEuRnJhbWUsIHsgd2lkdGg6IHdpZHRoLCBoZWlnaHQ6IGhlaWdodCwgYmFja2dyb3VuZDogdGludCwgb25UYXA6IHRoaXMub25UYXAsIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMDAwLFxuICAgICAgICAgICAgfSB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyBiYWNrZ3JvdW5kOiBcIiNGOEY4RjhcIiwgdG9wOiAwLCBsZWZ0OiAwLCByaWdodDogMCwgYm90dG9tOiAwLCBzY2FsZTogdGhpcy5zd2l0Y2guZGltU2NhbGUsIHNjYWxlWDogMSwgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMDAwLFxuICAgICAgICAgICAgICAgICAgICBib3hTaGFkb3c6IFwiaW5zZXQgMCAwIDAgMXB4ICNFNEU0RTRcIixcbiAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChmcmFtZXJfMS5GcmFtZSwgeyBiYWNrZ3JvdW5kOiBcIndoaXRlXCIsIHRvcDogMSwgYm90dG9tOiAxLCBsZWZ0OiB0aGlzLnN3aXRjaC5sZWZ0LCBhc3BlY3RSYXRpbzogMSwgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAxMDAwLFxuICAgICAgICAgICAgICAgICAgICBib3hTaGFkb3c6IFwiMCAycHggMXB4IDFweCByZ2JhKDAsMCwwLC4wNyksIDAgMCAxcHggcmdiYSgwLDAsMCwuMylcIixcbiAgICAgICAgICAgICAgICB9IH0pKSk7XG4gICAgfVxufVxuU3dpdGNoLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB3aWR0aDogNTEsXG4gICAgaGVpZ2h0OiAzMSxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIHRpbnQ6IFwiIzRCRDk2NFwiLFxufTtcblN3aXRjaC5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIGVuYWJsZWQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQm9vbGVhbiwgdGl0bGU6IFwiRW5hYmxlZFwiIH0sXG4gICAgdGludDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGludFwiIH0sXG59O1xuZXhwb3J0cy5Td2l0Y2ggPSBTd2l0Y2g7XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJTd2l0Y2hcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/Switch.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/Toolbar.tsx\":\n/*!**************************!*\\\n  !*** ./code/Toolbar.tsx ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nclass Toolbar extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.onTapAction = (index) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { onTapAction } = this.props;\\n            if (onTapAction) {\\n                const label = this.actionsLabels()[index];\\n                onTapAction(index, label);\\n            }\\n        };\\n        this.actionsLabels = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const { action1, action2, action3, action4 } = this.props;\\n            return [action1, action2, action3, action4].filter(label => label.length > 0);\\n        };\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { width, height, tintColor, appearance } = this.props;\\n        const items = this.actionsLabels().map((label, index) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            return (React.createElement(\\\"div\\\", { key: index, onClick: this.onTapAction.bind(this, index) }, label));\\n        });\\n        const isDark = appearance === \\\"dark\\\";\\n        const backgroundColor = isDark ? \\\"rgba(33,33,33,.72)\\\" : \\\"rgba(248,248,248,.82)\\\";\\n        const boxShadow = isDark ? \\\"inset 0 1px 0 -0.5px rgba(255,255,255,.16)\\\" : \\\"inset 0 1px 0 -0.5px rgba(0,0,0,.05)\\\";\\n        return (React.createElement(\\\"div\\\", { style: {\\n                width,\\n                height,\\n                backgroundColor,\\n                display: \\\"flex\\\",\\n                justifyContent: \\\"space-between\\\",\\n                alignItems: \\\"center\\\",\\n                padding: \\\"0 16px\\\",\\n                color: tintColor,\\n                backdropFilter: \\\"blur(10px)\\\",\\n                boxShadow,\\n            } }, items));\\n    }\\n}\\nToolbar.defaultProps = {\\n    action1: \\\"Action 1\\\",\\n    action2: \\\"Action 2\\\",\\n    action3: \\\"Action 3\\\",\\n    action4: \\\"\\\",\\n    appearance: \\\"light\\\",\\n    tintColor: \\\"#007AFF\\\",\\n    width: 375,\\n    height: 44,\\n};\\nToolbar.propertyControls = {\\n    action1: { type: framer_1.ControlType.String, title: \\\"Action 1\\\" },\\n    action2: { type: framer_1.ControlType.String, title: \\\"Action 2\\\" },\\n    action3: { type: framer_1.ControlType.String, title: \\\"Action 3\\\" },\\n    action4: { type: framer_1.ControlType.String, title: \\\"Action 4\\\" },\\n    appearance: {\\n        type: framer_1.ControlType.Enum,\\n        options: [\\\"dark\\\", \\\"light\\\"],\\n        optionTitles: [\\\"Dark\\\", \\\"Light\\\"],\\n        title: \\\"Appearance\\\",\\n    },\\n    tintColor: { type: framer_1.ControlType.Color, title: \\\"Tint\\\" },\\n};\\nexports.Toolbar = Toolbar;\\nexports.__info__ = [{ name: \\\"Toolbar\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1Rvb2xiYXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxQ0FBcUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUNBQXVDO0FBQ3REO0FBQ0E7QUFDQSxnREFBZ0QsMERBQTBEO0FBQzFHLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEVBQUU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsdURBQXVEO0FBQ3JFLGNBQWMsdURBQXVEO0FBQ3JFLGNBQWMsdURBQXVEO0FBQ3JFLGNBQWMsdURBQXVEO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZ0JBQWdCLGtEQUFrRDtBQUNsRTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFzRCIsImZpbGUiOiIuL2NvZGUvVG9vbGJhci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY2xhc3MgVG9vbGJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMub25UYXBBY3Rpb24gPSAoaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyBvblRhcEFjdGlvbiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgICAgIGlmIChvblRhcEFjdGlvbikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5hY3Rpb25zTGFiZWxzKClbaW5kZXhdO1xuICAgICAgICAgICAgICAgIG9uVGFwQWN0aW9uKGluZGV4LCBsYWJlbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuYWN0aW9uc0xhYmVscyA9ICgpID0+IHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgeyBhY3Rpb24xLCBhY3Rpb24yLCBhY3Rpb24zLCBhY3Rpb240IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICAgICAgcmV0dXJuIFthY3Rpb24xLCBhY3Rpb24yLCBhY3Rpb24zLCBhY3Rpb240XS5maWx0ZXIobGFiZWwgPT4gbGFiZWwubGVuZ3RoID4gMCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCwgdGludENvbG9yLCBhcHBlYXJhbmNlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBpdGVtcyA9IHRoaXMuYWN0aW9uc0xhYmVscygpLm1hcCgobGFiZWwsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGtleTogaW5kZXgsIG9uQ2xpY2s6IHRoaXMub25UYXBBY3Rpb24uYmluZCh0aGlzLCBpbmRleCkgfSwgbGFiZWwpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IGlzRGFyayA9IGFwcGVhcmFuY2UgPT09IFwiZGFya1wiO1xuICAgICAgICBjb25zdCBiYWNrZ3JvdW5kQ29sb3IgPSBpc0RhcmsgPyBcInJnYmEoMzMsMzMsMzMsLjcyKVwiIDogXCJyZ2JhKDI0OCwyNDgsMjQ4LC44MilcIjtcbiAgICAgICAgY29uc3QgYm94U2hhZG93ID0gaXNEYXJrID8gXCJpbnNldCAwIDFweCAwIC0wLjVweCByZ2JhKDI1NSwyNTUsMjU1LC4xNilcIiA6IFwiaW5zZXQgMCAxcHggMCAtMC41cHggcmdiYSgwLDAsMCwuMDUpXCI7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcixcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJzcGFjZS1iZXR3ZWVuXCIsXG4gICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiBcIjAgMTZweFwiLFxuICAgICAgICAgICAgICAgIGNvbG9yOiB0aW50Q29sb3IsXG4gICAgICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6IFwiYmx1cigxMHB4KVwiLFxuICAgICAgICAgICAgICAgIGJveFNoYWRvdyxcbiAgICAgICAgICAgIH0gfSwgaXRlbXMpKTtcbiAgICB9XG59XG5Ub29sYmFyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBhY3Rpb24xOiBcIkFjdGlvbiAxXCIsXG4gICAgYWN0aW9uMjogXCJBY3Rpb24gMlwiLFxuICAgIGFjdGlvbjM6IFwiQWN0aW9uIDNcIixcbiAgICBhY3Rpb240OiBcIlwiLFxuICAgIGFwcGVhcmFuY2U6IFwibGlnaHRcIixcbiAgICB0aW50Q29sb3I6IFwiIzAwN0FGRlwiLFxuICAgIHdpZHRoOiAzNzUsXG4gICAgaGVpZ2h0OiA0NCxcbn07XG5Ub29sYmFyLnByb3BlcnR5Q29udHJvbHMgPSB7XG4gICAgYWN0aW9uMTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkFjdGlvbiAxXCIgfSxcbiAgICBhY3Rpb24yOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6IFwiQWN0aW9uIDJcIiB9LFxuICAgIGFjdGlvbjM6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogXCJBY3Rpb24gM1wiIH0sXG4gICAgYWN0aW9uNDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiBcIkFjdGlvbiA0XCIgfSxcbiAgICBhcHBlYXJhbmNlOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkVudW0sXG4gICAgICAgIG9wdGlvbnM6IFtcImRhcmtcIiwgXCJsaWdodFwiXSxcbiAgICAgICAgb3B0aW9uVGl0bGVzOiBbXCJEYXJrXCIsIFwiTGlnaHRcIl0sXG4gICAgICAgIHRpdGxlOiBcIkFwcGVhcmFuY2VcIixcbiAgICB9LFxuICAgIHRpbnRDb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiVGludFwiIH0sXG59O1xuZXhwb3J0cy5Ub29sYmFyID0gVG9vbGJhcjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlRvb2xiYXJcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/Toolbar.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/canvas.tsx\":\n/*!*************************!*\\\n  !*** ./code/canvas.tsx ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\n// WARNING: this file is auto generated, any changes will be lost\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst canvas = framer_1.CanvasStore.shared({\\\"children\\\":[]});\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2NhbnZhcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsNkNBQTZDIiwiZmlsZSI6Ii4vY29kZS9jYW52YXMudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgYXV0byBnZW5lcmF0ZWQsIGFueSBjaGFuZ2VzIHdpbGwgYmUgbG9zdFxuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgY2FudmFzID0gZnJhbWVyXzEuQ2FudmFzU3RvcmUuc2hhcmVkKCk7IC8vIENBTlZBU19EQVRBO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/canvas.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./package.js\":\n/*!********************!*\\\n  !*** ./package.js ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"// The template for the dynamic webpack entry. Be aware of the variables\\n\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\"./package.json\\\")\\n\\nconst package = {\\n    packageJson,\\n    sourceModules: {},\\n    dependencies: {},\\n}\\n\\n// This is a special webpack thing that watches the whole directory\\n// https://github.com/webpack/docs/wiki/context\\nconst ctx = __webpack_require__(\\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\")\\n\\nctx.keys().forEach(key => {\\n    package.sourceModules[key] = () => ctx(key)\\n})\\n\\n// The packages are passed in through a template\\nconst packages = {}\\n\\n                packages[\\\"framer\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! framer */ \\\"framer\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"framer\\\",\\\"version\\\":\\\"0.7.5\\\",\\\"main\\\":\\\"build/framer.js\\\",\\\"types\\\":\\\"build/framer.d.ts\\\",\\\"author\\\":\\\"Framer\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/chalk\\\":\\\"^2.2.0\\\",\\\"@types/draft-js\\\":\\\"0.10.19\\\",\\\"@types/enzyme\\\":\\\"^3.1.10\\\",\\\"@types/hsluv\\\":\\\"https://github.com/framer/typed_hsluv#bump\\\",\\\"@types/jest\\\":\\\"^23.0.0\\\",\\\"@types/jest-diff\\\":\\\"^20.0.0\\\",\\\"@types/node\\\":\\\"^9.6.0\\\",\\\"@types/react\\\":\\\"16.3.12\\\",\\\"@types/react-dom\\\":\\\"^16.0.5\\\",\\\"cache-loader\\\":\\\"^1.2.2\\\",\\\"chalk\\\":\\\"^2.4.1\\\",\\\"convert-tsconfig-paths-to-webpack-aliases\\\":\\\"^0.9.2\\\",\\\"css.escape\\\":\\\"^1.5.1\\\",\\\"dts-bundle\\\":\\\"^0.7.3\\\",\\\"enzyme\\\":\\\"^3.3.0\\\",\\\"enzyme-adapter-react-16\\\":\\\"^1.1.1\\\",\\\"fork-ts-checker-webpack-plugin\\\":\\\"^0.4.1\\\",\\\"hoist-non-react-statics\\\":\\\"^2.5.0\\\",\\\"jest\\\":\\\"^23.1.0\\\",\\\"jest-diff\\\":\\\"^22.0.3\\\",\\\"jest-junit\\\":\\\"^3.4.1\\\",\\\"progress-bar-webpack-plugin\\\":\\\"^1.11.0\\\",\\\"raf\\\":\\\"^3.4.0\\\",\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dev-utils\\\":\\\"^5.0.1\\\",\\\"react-dom\\\":\\\"^16.3.2\\\",\\\"ts-jest\\\":\\\"^22.4.5\\\",\\\"ts-loader\\\":\\\"^4.1.0\\\",\\\"tslint\\\":\\\"^5.10.0\\\",\\\"tslint-microsoft-contrib\\\":\\\"^5.0.3\\\",\\\"typescript\\\":\\\"^2.8.3\\\",\\\"watch\\\":\\\"^1.0.2\\\",\\\"webpack\\\":\\\"^4.4.1\\\",\\\"webpack-cli\\\":\\\"^2.0.13\\\",\\\"webpack-dev-server\\\":\\\"^3.1.4\\\",\\\"xcssmatrix\\\":\\\"^0.2.2\\\"},\\\"peerDependencies\\\":{\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dom\\\":\\\"^16.3.2\\\"},\\\"dependencies\\\":{\\\"draft-js\\\":\\\"0.10.4\\\",\\\"eventemitter3\\\":\\\"^3.1.0\\\",\\\"hsluv\\\":\\\"^0.0.3\\\",\\\"immutable\\\":\\\"^3.8.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"Scroll\\\",\\\"children\\\":true,\\\"properties\\\":[{\\\"key\\\":\\\"direction\\\",\\\"title\\\":\\\"Direction\\\",\\\"kind\\\":\\\"enum\\\",\\\"options\\\":[\\\"horizontal\\\",\\\"vertical\\\",\\\"both\\\"]}]},{\\\"name\\\":\\\"Page\\\",\\\"children\\\":true},{\\\"name\\\":\\\"Stack\\\"},{\\\"name\\\":\\\"FramerAppleWatch38\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleWatch42\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonySmartWatch\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneSE\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8Plus\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneX\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus5X\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus6\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2XL\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerHTCOneA9\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftLumia950\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungNote5\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungGalaxyS8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadMini\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexusTablet\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro3\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIMac\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleThunderboltDisplay\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerDellXPS\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfaceBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonyW850C\\\",\\\"type\\\":\\\"device\\\"}]},\\\"scripts\\\":{\\\"coverage\\\":\\\"jest --config jest.json --coverage\\\",\\\"test\\\":\\\"jest --config jest.json\\\",\\\"watch\\\":\\\"jest --config jest.json --watch\\\"}}\\n                    return package\\n                }\\n\\npackage.dependencies = packages\\n\\nexports.__framer__ = package\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw0SUFBNEkscTdCQUFxN0IscUJBQXFCLHdDQUF3QyxpQkFBaUIsbUZBQW1GLFdBQVcsZUFBZSwrQ0FBK0MsK0ZBQStGLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxlQUFlLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsZ0RBQWdELEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsd0NBQXdDLEVBQUUsaURBQWlELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsaURBQWlELEVBQUUsb0RBQW9ELEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsdURBQXVELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsK0NBQStDLEVBQUUsdUNBQXVDLEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsWUFBWTtBQUN2NUY7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuL3BhY2thZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgdGVtcGxhdGUgZm9yIHRoZSBkeW5hbWljIHdlYnBhY2sgZW50cnkuIEJlIGF3YXJlIG9mIHRoZSB2YXJpYWJsZXNcblxuY29uc3QgcGFja2FnZUpzb24gPSByZXF1aXJlKFwiLi9wYWNrYWdlLmpzb25cIilcblxuY29uc3QgcGFja2FnZSA9IHtcbiAgICBwYWNrYWdlSnNvbixcbiAgICBzb3VyY2VNb2R1bGVzOiB7fSxcbiAgICBkZXBlbmRlbmNpZXM6IHt9LFxufVxuXG4vLyBUaGlzIGlzIGEgc3BlY2lhbCB3ZWJwYWNrIHRoaW5nIHRoYXQgd2F0Y2hlcyB0aGUgd2hvbGUgZGlyZWN0b3J5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay9kb2NzL3dpa2kvY29udGV4dFxuY29uc3QgY3R4ID0gcmVxdWlyZS5jb250ZXh0KFwiLi9jb2RlXCIsIHRydWUsIC9cXC4odHxqKXMoeD8pfFxcLmNzcyQvKVxuXG5jdHgua2V5cygpLmZvckVhY2goa2V5ID0+IHtcbiAgICBwYWNrYWdlLnNvdXJjZU1vZHVsZXNba2V5XSA9ICgpID0+IGN0eChrZXkpXG59KVxuXG4vLyBUaGUgcGFja2FnZXMgYXJlIHBhc3NlZCBpbiB0aHJvdWdoIGEgdGVtcGxhdGVcbmNvbnN0IHBhY2thZ2VzID0ge31cblxuICAgICAgICAgICAgICAgIHBhY2thZ2VzW1wiZnJhbWVyXCJdID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFja2FnZSA9IHt9XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWNrYWdlID0gcmVxdWlyZShcImZyYW1lclwiKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHBhY2thZ2UuX19mcmFtZXJfXyA9IHBhY2thZ2UuX19mcmFtZXJfXyB8fCB7fVxuICAgICAgICAgICAgICAgICAgICBwYWNrYWdlLl9fZnJhbWVyX18ucGFja2FnZUpzb24gPSB7XCJuYW1lXCI6XCJmcmFtZXJcIixcInZlcnNpb25cIjpcIjAuNy41XCIsXCJtYWluXCI6XCJidWlsZC9mcmFtZXIuanNcIixcInR5cGVzXCI6XCJidWlsZC9mcmFtZXIuZC50c1wiLFwiYXV0aG9yXCI6XCJGcmFtZXJcIixcImxpY2Vuc2VcIjpcIk1JVFwiLFwiZGV2RGVwZW5kZW5jaWVzXCI6e1wiQHR5cGVzL2NoYWxrXCI6XCJeMi4yLjBcIixcIkB0eXBlcy9kcmFmdC1qc1wiOlwiMC4xMC4xOVwiLFwiQHR5cGVzL2VuenltZVwiOlwiXjMuMS4xMFwiLFwiQHR5cGVzL2hzbHV2XCI6XCJodHRwczovL2dpdGh1Yi5jb20vZnJhbWVyL3R5cGVkX2hzbHV2I2J1bXBcIixcIkB0eXBlcy9qZXN0XCI6XCJeMjMuMC4wXCIsXCJAdHlwZXMvamVzdC1kaWZmXCI6XCJeMjAuMC4wXCIsXCJAdHlwZXMvbm9kZVwiOlwiXjkuNi4wXCIsXCJAdHlwZXMvcmVhY3RcIjpcIjE2LjMuMTJcIixcIkB0eXBlcy9yZWFjdC1kb21cIjpcIl4xNi4wLjVcIixcImNhY2hlLWxvYWRlclwiOlwiXjEuMi4yXCIsXCJjaGFsa1wiOlwiXjIuNC4xXCIsXCJjb252ZXJ0LXRzY29uZmlnLXBhdGhzLXRvLXdlYnBhY2stYWxpYXNlc1wiOlwiXjAuOS4yXCIsXCJjc3MuZXNjYXBlXCI6XCJeMS41LjFcIixcImR0cy1idW5kbGVcIjpcIl4wLjcuM1wiLFwiZW56eW1lXCI6XCJeMy4zLjBcIixcImVuenltZS1hZGFwdGVyLXJlYWN0LTE2XCI6XCJeMS4xLjFcIixcImZvcmstdHMtY2hlY2tlci13ZWJwYWNrLXBsdWdpblwiOlwiXjAuNC4xXCIsXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiOlwiXjIuNS4wXCIsXCJqZXN0XCI6XCJeMjMuMS4wXCIsXCJqZXN0LWRpZmZcIjpcIl4yMi4wLjNcIixcImplc3QtanVuaXRcIjpcIl4zLjQuMVwiLFwicHJvZ3Jlc3MtYmFyLXdlYnBhY2stcGx1Z2luXCI6XCJeMS4xMS4wXCIsXCJyYWZcIjpcIl4zLjQuMFwiLFwicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRldi11dGlsc1wiOlwiXjUuMC4xXCIsXCJyZWFjdC1kb21cIjpcIl4xNi4zLjJcIixcInRzLWplc3RcIjpcIl4yMi40LjVcIixcInRzLWxvYWRlclwiOlwiXjQuMS4wXCIsXCJ0c2xpbnRcIjpcIl41LjEwLjBcIixcInRzbGludC1taWNyb3NvZnQtY29udHJpYlwiOlwiXjUuMC4zXCIsXCJ0eXBlc2NyaXB0XCI6XCJeMi44LjNcIixcIndhdGNoXCI6XCJeMS4wLjJcIixcIndlYnBhY2tcIjpcIl40LjQuMVwiLFwid2VicGFjay1jbGlcIjpcIl4yLjAuMTNcIixcIndlYnBhY2stZGV2LXNlcnZlclwiOlwiXjMuMS40XCIsXCJ4Y3NzbWF0cml4XCI6XCJeMC4yLjJcIn0sXCJwZWVyRGVwZW5kZW5jaWVzXCI6e1wicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRvbVwiOlwiXjE2LjMuMlwifSxcImRlcGVuZGVuY2llc1wiOntcImRyYWZ0LWpzXCI6XCIwLjEwLjRcIixcImV2ZW50ZW1pdHRlcjNcIjpcIl4zLjEuMFwiLFwiaHNsdXZcIjpcIl4wLjAuM1wiLFwiaW1tdXRhYmxlXCI6XCJeMy44LjJcIn0sXCJmcmFtZXJcIjp7XCJjb21wb25lbnRzXCI6W3tcIm5hbWVcIjpcIlNjcm9sbFwiLFwiY2hpbGRyZW5cIjp0cnVlLFwicHJvcGVydGllc1wiOlt7XCJrZXlcIjpcImRpcmVjdGlvblwiLFwidGl0bGVcIjpcIkRpcmVjdGlvblwiLFwia2luZFwiOlwiZW51bVwiLFwib3B0aW9uc1wiOltcImhvcml6b250YWxcIixcInZlcnRpY2FsXCIsXCJib3RoXCJdfV19LHtcIm5hbWVcIjpcIlBhZ2VcIixcImNoaWxkcmVuXCI6dHJ1ZX0se1wibmFtZVwiOlwiU3RhY2tcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDM4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDQyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU29ueVNtYXJ0V2F0Y2hcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQaG9uZVNFXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4UGx1c1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBob25lWFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNVhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVOZXh1czZcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJYTFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckhUQ09uZUE5XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0THVtaWE5NTBcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nTm90ZTVcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nR2FsYXh5UzhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRNaW5pXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGFkUHJvXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlTmV4dXNUYWJsZXRcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJNaWNyb3NvZnRTdXJmYWNlUHJvM1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lck1pY3Jvc29mdFN1cmZhY2VQcm80XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJTWFjXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVUaHVuZGVyYm9sdERpc3BsYXlcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tQcm9cIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJEZWxsWFBTXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0U3VyZmFjZUJvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTb255Vzg1MENcIixcInR5cGVcIjpcImRldmljZVwifV19LFwic2NyaXB0c1wiOntcImNvdmVyYWdlXCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvbiAtLWNvdmVyYWdlXCIsXCJ0ZXN0XCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvblwiLFwid2F0Y2hcIjpcImplc3QgLS1jb25maWcgamVzdC5qc29uIC0td2F0Y2hcIn19XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWNrYWdlXG4gICAgICAgICAgICAgICAgfVxuXG5wYWNrYWdlLmRlcGVuZGVuY2llcyA9IHBhY2thZ2VzXG5cbmV4cG9ydHMuX19mcmFtZXJfXyA9IHBhY2thZ2VcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./package.js\\n\");\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: main, devDependencies, peerDependencies, name, author, version, license, framer, keywords, default */\n/***/ (function(module) {\n\neval(\"module.exports = {\\\"main\\\":\\\"build/index.js\\\",\\\"devDependencies\\\":{\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.7.5\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.7.5\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"name\\\":\\\"@framer/framer.examples\\\",\\\"author\\\":\\\"Framer\\\",\\\"version\\\":\\\"1.3.4\\\",\\\"license\\\":\\\"MIT\\\",\\\"framer\\\":{\\\"id\\\":\\\"d52e8201-9936-42d9-8208-5c36c6f0e1bc\\\",\\\"displayName\\\":\\\"Example Kit\\\"},\\\"keywords\\\":[\\\"interactive\\\",\\\"examples\\\",\\\"ios\\\",\\\"kit\\\",\\\"apple\\\",\\\"ui\\\"]};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./package.json\\n\");\n\n/***/ }),\n\n/***/ \"framer\":\n/*!******************************************************************************************!*\\\n  !*** external {\"root\":\"Framer\",\"commonjs2\":\"framer\",\"commonjs\":\"framer\",\"amd\":\"framer\"} ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///framer\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n/***/ })\n\n/******/ });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.examples/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/koenbok.signature/build/index.js":
/*!********************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/koenbok.signature/build/index.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! framer */ \"framer\"), __webpack_require__(/*! react */ \"react\"));\n\telse { var i, a; }\n})(window, function(__WEBPACK_EXTERNAL_MODULE_framer__, __WEBPACK_EXTERNAL_MODULE_react__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./package.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\":\n/*!***************************************!*\\\n  !*** ./code sync \\.(t|j)s(x?)|\\.css$ ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var map = {\\n\\t\\\"./Signature.tsx\\\": \\\"./code/Signature.tsx\\\",\\n\\t\\\"./canvas.tsx\\\": \\\"./code/canvas.tsx\\\",\\n\\t\\\"./signature/bezier.ts\\\": \\\"./code/signature/bezier.ts\\\",\\n\\t\\\"./signature/point.ts\\\": \\\"./code/signature/point.ts\\\",\\n\\t\\\"./signature/signature_pad.ts\\\": \\\"./code/signature/signature_pad.ts\\\",\\n\\t\\\"./signature/throttle.ts\\\": \\\"./code/signature/throttle.ts\\\"\\n};\\n\\n\\nfunction webpackContext(req) {\\n\\tvar id = webpackContextResolve(req);\\n\\tvar module = __webpack_require__(id);\\n\\treturn module;\\n}\\nfunction webpackContextResolve(req) {\\n\\tvar id = map[req];\\n\\tif(!(id + 1)) { // check for number or string\\n\\t\\tvar e = new Error('Cannot find module \\\"' + req + '\\\".');\\n\\t\\te.code = 'MODULE_NOT_FOUND';\\n\\t\\tthrow e;\\n\\t}\\n\\treturn id;\\n}\\nwebpackContext.keys = function webpackContextKeys() {\\n\\treturn Object.keys(map);\\n};\\nwebpackContext.resolve = webpackContextResolve;\\nmodule.exports = webpackContext;\\nwebpackContext.id = \\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\";//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXC4odHxqKXMoeD8pfFxcLmNzcyQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vU2lnbmF0dXJlLnRzeFwiOiBcIi4vY29kZS9TaWduYXR1cmUudHN4XCIsXG5cdFwiLi9jYW52YXMudHN4XCI6IFwiLi9jb2RlL2NhbnZhcy50c3hcIixcblx0XCIuL3NpZ25hdHVyZS9iZXppZXIudHNcIjogXCIuL2NvZGUvc2lnbmF0dXJlL2Jlemllci50c1wiLFxuXHRcIi4vc2lnbmF0dXJlL3BvaW50LnRzXCI6IFwiLi9jb2RlL3NpZ25hdHVyZS9wb2ludC50c1wiLFxuXHRcIi4vc2lnbmF0dXJlL3NpZ25hdHVyZV9wYWQudHNcIjogXCIuL2NvZGUvc2lnbmF0dXJlL3NpZ25hdHVyZV9wYWQudHNcIixcblx0XCIuL3NpZ25hdHVyZS90aHJvdHRsZS50c1wiOiBcIi4vY29kZS9zaWduYXR1cmUvdGhyb3R0bGUudHNcIlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0cmV0dXJuIG1vZHVsZTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0dmFyIGlkID0gbWFwW3JlcV07XG5cdGlmKCEoaWQgKyAxKSkgeyAvLyBjaGVjayBmb3IgbnVtYmVyIG9yIHN0cmluZ1xuXHRcdHZhciBlID0gbmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgXCInICsgcmVxICsgJ1wiLicpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBpZDtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSBcIi4vY29kZSBzeW5jIHJlY3Vyc2l2ZSBcXFxcLih0fGopcyh4Pyl8XFxcXC5jc3MkXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\\n\");\n\n/***/ }),\n\n/***/ \"./code/Signature.tsx\":\n/*!****************************!*\\\n  !*** ./code/Signature.tsx ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst React = __webpack_require__(/*! react */ \\\"react\\\");\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst signature_pad_1 = __webpack_require__(/*! ./signature/signature_pad */ \\\"./code/signature/signature_pad.ts\\\");\\nclass Signature extends React.Component {\\n    constructor() {\\n        super(...arguments);\\n        this.canvas = React.createRef();\\n        this.clear = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            if (this.signature) {\\n                this.signature.clear();\\n            }\\n        };\\n    }\\n    componentDidMount() {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (this.canvas.current) {\\n            this.signature = new signature_pad_1.default(this.canvas.current);\\n        }\\n    }\\n    render() {\\n        window[\\\"__checkBudget__\\\"]();\\n        if (this.signature) {\\n            this.signature.penColor = this.props.color;\\n            this.signature.minWidth = this.props.minWidth;\\n            this.signature.maxWidth = this.props.maxWidth;\\n            this.signature.dotSize = this.props.dotSize;\\n        }\\n        return (React.createElement(\\\"canvas\\\", { ref: this.canvas, width: framer_1.Animatable.getNumber(this.props.width), height: framer_1.Animatable.getNumber(this.props.height), onDoubleClick: this.clear, style: { backgroundColor: this.props.background } }));\\n    }\\n}\\nSignature.defaultProps = {\\n    color: \\\"#000\\\",\\n    background: \\\"#fff\\\",\\n    minWidth: 0.5,\\n    maxWidth: 2.5,\\n    dotSize: 2\\n};\\nSignature.propertyControls = {\\n    color: { type: framer_1.ControlType.Color, title: \\\"Pen\\\" },\\n    background: { type: framer_1.ControlType.Color, title: \\\"Background\\\" },\\n    minWidth: {\\n        type: framer_1.ControlType.Number,\\n        min: 0,\\n        max: 10,\\n        title: \\\"Min Width\\\"\\n    },\\n    maxWidth: {\\n        type: framer_1.ControlType.Number,\\n        min: 0,\\n        max: 10,\\n        title: \\\"Max Width\\\"\\n    }\\n};\\nexports.Signature = Signature;\\nexports.__info__ = [{ name: \\\"Signature\\\", children: false, type: \\\"component\\\" }];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1NpZ25hdHVyZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyx3S0FBd0sseUNBQXlDLEVBQUU7QUFDbFE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFpRDtBQUM3RCxpQkFBaUIsd0RBQXdEO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix3REFBd0QiLCJmaWxlIjoiLi9jb2RlL1NpZ25hdHVyZS50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3Qgc2lnbmF0dXJlX3BhZF8xID0gcmVxdWlyZShcIi4vc2lnbmF0dXJlL3NpZ25hdHVyZV9wYWRcIik7XG5jbGFzcyBTaWduYXR1cmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNhbnZhcyA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuICAgICAgICB0aGlzLmNsZWFyID0gKCkgPT4ge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5zaWduYXR1cmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNpZ25hdHVyZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGlmICh0aGlzLmNhbnZhcy5jdXJyZW50KSB7XG4gICAgICAgICAgICB0aGlzLnNpZ25hdHVyZSA9IG5ldyBzaWduYXR1cmVfcGFkXzEuZGVmYXVsdCh0aGlzLmNhbnZhcy5jdXJyZW50KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBpZiAodGhpcy5zaWduYXR1cmUpIHtcbiAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlLnBlbkNvbG9yID0gdGhpcy5wcm9wcy5jb2xvcjtcbiAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlLm1pbldpZHRoID0gdGhpcy5wcm9wcy5taW5XaWR0aDtcbiAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlLm1heFdpZHRoID0gdGhpcy5wcm9wcy5tYXhXaWR0aDtcbiAgICAgICAgICAgIHRoaXMuc2lnbmF0dXJlLmRvdFNpemUgPSB0aGlzLnByb3BzLmRvdFNpemU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIsIHsgcmVmOiB0aGlzLmNhbnZhcywgd2lkdGg6IGZyYW1lcl8xLkFuaW1hdGFibGUuZ2V0TnVtYmVyKHRoaXMucHJvcHMud2lkdGgpLCBoZWlnaHQ6IGZyYW1lcl8xLkFuaW1hdGFibGUuZ2V0TnVtYmVyKHRoaXMucHJvcHMuaGVpZ2h0KSwgb25Eb3VibGVDbGljazogdGhpcy5jbGVhciwgc3R5bGU6IHsgYmFja2dyb3VuZENvbG9yOiB0aGlzLnByb3BzLmJhY2tncm91bmQgfSB9KSk7XG4gICAgfVxufVxuU2lnbmF0dXJlLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBjb2xvcjogXCIjMDAwXCIsXG4gICAgYmFja2dyb3VuZDogXCIjZmZmXCIsXG4gICAgbWluV2lkdGg6IDAuNSxcbiAgICBtYXhXaWR0aDogMi41LFxuICAgIGRvdFNpemU6IDJcbn07XG5TaWduYXR1cmUucHJvcGVydHlDb250cm9scyA9IHtcbiAgICBjb2xvcjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5Db2xvciwgdGl0bGU6IFwiUGVuXCIgfSxcbiAgICBiYWNrZ3JvdW5kOiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLkNvbG9yLCB0aXRsZTogXCJCYWNrZ3JvdW5kXCIgfSxcbiAgICBtaW5XaWR0aDoge1xuICAgICAgICB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsXG4gICAgICAgIG1pbjogMCxcbiAgICAgICAgbWF4OiAxMCxcbiAgICAgICAgdGl0bGU6IFwiTWluIFdpZHRoXCJcbiAgICB9LFxuICAgIG1heFdpZHRoOiB7XG4gICAgICAgIHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLk51bWJlcixcbiAgICAgICAgbWluOiAwLFxuICAgICAgICBtYXg6IDEwLFxuICAgICAgICB0aXRsZTogXCJNYXggV2lkdGhcIlxuICAgIH1cbn07XG5leHBvcnRzLlNpZ25hdHVyZSA9IFNpZ25hdHVyZTtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlNpZ25hdHVyZVwiLCBjaGlsZHJlbjogZmFsc2UsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./code/Signature.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/canvas.tsx\":\n/*!*************************!*\\\n  !*** ./code/canvas.tsx ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\n// WARNING: this file is auto generated, any changes will be lost\\nconst framer_1 = __webpack_require__(/*! framer */ \\\"framer\\\");\\nconst canvas = framer_1.CanvasStore.shared({\\\"children\\\":[]});\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2NhbnZhcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsNkNBQTZDIiwiZmlsZSI6Ii4vY29kZS9jYW52YXMudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgYXV0byBnZW5lcmF0ZWQsIGFueSBjaGFuZ2VzIHdpbGwgYmUgbG9zdFxuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgY2FudmFzID0gZnJhbWVyXzEuQ2FudmFzU3RvcmUuc2hhcmVkKCk7IC8vIENBTlZBU19EQVRBO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/canvas.tsx\\n\");\n\n/***/ }),\n\n/***/ \"./code/signature/bezier.ts\":\n/*!**********************************!*\\\n  !*** ./code/signature/bezier.ts ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nconst point_1 = __webpack_require__(/*! ./point */ \\\"./code/signature/point.ts\\\");\\nclass Bezier {\\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\\n        this.startPoint = startPoint;\\n        this.control2 = control2;\\n        this.control1 = control1;\\n        this.endPoint = endPoint;\\n        this.startWidth = startWidth;\\n        this.endWidth = endWidth;\\n        window[\\\"__checkBudget__\\\"]();\\n    }\\n    static fromPoints(points, widths) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\\n    }\\n    static calculateControlPoints(s1, s2, s3) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const dx1 = s1.x - s2.x;\\n        const dy1 = s1.y - s2.y;\\n        const dx2 = s2.x - s3.x;\\n        const dy2 = s2.y - s3.y;\\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\\n        const l1 = Math.sqrt((dx1 * dx1) + (dy1 * dy1));\\n        const l2 = Math.sqrt((dx2 * dx2) + (dy2 * dy2));\\n        const dxm = (m1.x - m2.x);\\n        const dym = (m1.y - m2.y);\\n        const k = l2 / (l1 + l2);\\n        const cm = { x: m2.x + (dxm * k), y: m2.y + (dym * k) };\\n        const tx = s2.x - cm.x;\\n        const ty = s2.y - cm.y;\\n        return {\\n            c1: new point_1.Point(m1.x + tx, m1.y + ty),\\n            c2: new point_1.Point(m2.x + tx, m2.y + ty),\\n        };\\n    }\\n    // Returns approximated length. Code taken from https://www.lemoda.net/maths/bezier-length/index.html.\\n    length() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const steps = 10;\\n        let length = 0;\\n        let px;\\n        let py;\\n        for (let i = 0; i <= steps; i += 1) {\\n            window[\\\"__checkBudget__\\\"]();\\n            const t = i / steps;\\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\\n            if (i > 0) {\\n                const xdiff = cx - px;\\n                const ydiff = cy - py;\\n                length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\\n            }\\n            px = cx;\\n            py = cy;\\n        }\\n        return length;\\n    }\\n    // Calculate parametric value of x or y given t and the four point coordinates of a cubic bezier curve.\\n    point(t, start, c1, c2, end) {\\n        window[\\\"__checkBudget__\\\"]();\\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\\n            + (3.0 * c2 * (1.0 - t) * t * t)\\n            + (end * t * t * t);\\n    }\\n}\\nexports.Bezier = Bezier;\\nexports.__info__ = [];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL3NpZ25hdHVyZS9iZXppZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsWUFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL2NvZGUvc2lnbmF0dXJlL2Jlemllci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgcG9pbnRfMSA9IHJlcXVpcmUoXCIuL3BvaW50XCIpO1xuY2xhc3MgQmV6aWVyIHtcbiAgICBjb25zdHJ1Y3RvcihzdGFydFBvaW50LCBjb250cm9sMiwgY29udHJvbDEsIGVuZFBvaW50LCBzdGFydFdpZHRoLCBlbmRXaWR0aCkge1xuICAgICAgICB0aGlzLnN0YXJ0UG9pbnQgPSBzdGFydFBvaW50O1xuICAgICAgICB0aGlzLmNvbnRyb2wyID0gY29udHJvbDI7XG4gICAgICAgIHRoaXMuY29udHJvbDEgPSBjb250cm9sMTtcbiAgICAgICAgdGhpcy5lbmRQb2ludCA9IGVuZFBvaW50O1xuICAgICAgICB0aGlzLnN0YXJ0V2lkdGggPSBzdGFydFdpZHRoO1xuICAgICAgICB0aGlzLmVuZFdpZHRoID0gZW5kV2lkdGg7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVBvaW50cyhwb2ludHMsIHdpZHRocykge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgY29uc3QgYzIgPSB0aGlzLmNhbGN1bGF0ZUNvbnRyb2xQb2ludHMocG9pbnRzWzBdLCBwb2ludHNbMV0sIHBvaW50c1syXSkuYzI7XG4gICAgICAgIGNvbnN0IGMzID0gdGhpcy5jYWxjdWxhdGVDb250cm9sUG9pbnRzKHBvaW50c1sxXSwgcG9pbnRzWzJdLCBwb2ludHNbM10pLmMxO1xuICAgICAgICByZXR1cm4gbmV3IEJlemllcihwb2ludHNbMV0sIGMyLCBjMywgcG9pbnRzWzJdLCB3aWR0aHMuc3RhcnQsIHdpZHRocy5lbmQpO1xuICAgIH1cbiAgICBzdGF0aWMgY2FsY3VsYXRlQ29udHJvbFBvaW50cyhzMSwgczIsIHMzKSB7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICBjb25zdCBkeDEgPSBzMS54IC0gczIueDtcbiAgICAgICAgY29uc3QgZHkxID0gczEueSAtIHMyLnk7XG4gICAgICAgIGNvbnN0IGR4MiA9IHMyLnggLSBzMy54O1xuICAgICAgICBjb25zdCBkeTIgPSBzMi55IC0gczMueTtcbiAgICAgICAgY29uc3QgbTEgPSB7IHg6IChzMS54ICsgczIueCkgLyAyLjAsIHk6IChzMS55ICsgczIueSkgLyAyLjAgfTtcbiAgICAgICAgY29uc3QgbTIgPSB7IHg6IChzMi54ICsgczMueCkgLyAyLjAsIHk6IChzMi55ICsgczMueSkgLyAyLjAgfTtcbiAgICAgICAgY29uc3QgbDEgPSBNYXRoLnNxcnQoKGR4MSAqIGR4MSkgKyAoZHkxICogZHkxKSk7XG4gICAgICAgIGNvbnN0IGwyID0gTWF0aC5zcXJ0KChkeDIgKiBkeDIpICsgKGR5MiAqIGR5MikpO1xuICAgICAgICBjb25zdCBkeG0gPSAobTEueCAtIG0yLngpO1xuICAgICAgICBjb25zdCBkeW0gPSAobTEueSAtIG0yLnkpO1xuICAgICAgICBjb25zdCBrID0gbDIgLyAobDEgKyBsMik7XG4gICAgICAgIGNvbnN0IGNtID0geyB4OiBtMi54ICsgKGR4bSAqIGspLCB5OiBtMi55ICsgKGR5bSAqIGspIH07XG4gICAgICAgIGNvbnN0IHR4ID0gczIueCAtIGNtLng7XG4gICAgICAgIGNvbnN0IHR5ID0gczIueSAtIGNtLnk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjMTogbmV3IHBvaW50XzEuUG9pbnQobTEueCArIHR4LCBtMS55ICsgdHkpLFxuICAgICAgICAgICAgYzI6IG5ldyBwb2ludF8xLlBvaW50KG0yLnggKyB0eCwgbTIueSArIHR5KSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLy8gUmV0dXJucyBhcHByb3hpbWF0ZWQgbGVuZ3RoLiBDb2RlIHRha2VuIGZyb20gaHR0cHM6Ly93d3cubGVtb2RhLm5ldC9tYXRocy9iZXppZXItbGVuZ3RoL2luZGV4Lmh0bWwuXG4gICAgbGVuZ3RoKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgY29uc3Qgc3RlcHMgPSAxMDtcbiAgICAgICAgbGV0IGxlbmd0aCA9IDA7XG4gICAgICAgIGxldCBweDtcbiAgICAgICAgbGV0IHB5O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBzdGVwczsgaSArPSAxKSB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGNvbnN0IHQgPSBpIC8gc3RlcHM7XG4gICAgICAgICAgICBjb25zdCBjeCA9IHRoaXMucG9pbnQodCwgdGhpcy5zdGFydFBvaW50LngsIHRoaXMuY29udHJvbDEueCwgdGhpcy5jb250cm9sMi54LCB0aGlzLmVuZFBvaW50LngpO1xuICAgICAgICAgICAgY29uc3QgY3kgPSB0aGlzLnBvaW50KHQsIHRoaXMuc3RhcnRQb2ludC55LCB0aGlzLmNvbnRyb2wxLnksIHRoaXMuY29udHJvbDIueSwgdGhpcy5lbmRQb2ludC55KTtcbiAgICAgICAgICAgIGlmIChpID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHhkaWZmID0gY3ggLSBweDtcbiAgICAgICAgICAgICAgICBjb25zdCB5ZGlmZiA9IGN5IC0gcHk7XG4gICAgICAgICAgICAgICAgbGVuZ3RoICs9IE1hdGguc3FydCgoeGRpZmYgKiB4ZGlmZikgKyAoeWRpZmYgKiB5ZGlmZikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHggPSBjeDtcbiAgICAgICAgICAgIHB5ID0gY3k7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICB9XG4gICAgLy8gQ2FsY3VsYXRlIHBhcmFtZXRyaWMgdmFsdWUgb2YgeCBvciB5IGdpdmVuIHQgYW5kIHRoZSBmb3VyIHBvaW50IGNvb3JkaW5hdGVzIG9mIGEgY3ViaWMgYmV6aWVyIGN1cnZlLlxuICAgIHBvaW50KHQsIHN0YXJ0LCBjMSwgYzIsIGVuZCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChzdGFydCAqICgxLjAgLSB0KSAqICgxLjAgLSB0KSAqICgxLjAgLSB0KSlcbiAgICAgICAgICAgICsgKDMuMCAqIGMxICogKDEuMCAtIHQpICogKDEuMCAtIHQpICogdClcbiAgICAgICAgICAgICsgKDMuMCAqIGMyICogKDEuMCAtIHQpICogdCAqIHQpXG4gICAgICAgICAgICArIChlbmQgKiB0ICogdCAqIHQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmV6aWVyID0gQmV6aWVyO1xuZXhwb3J0cy5fX2luZm9fXyA9IFtdO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./code/signature/bezier.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/signature/point.ts\":\n/*!*********************************!*\\\n  !*** ./code/signature/point.ts ***!\n  \\*********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nclass Point {\\n    constructor(x, y, time) {\\n        this.x = x;\\n        this.y = y;\\n        window[\\\"__checkBudget__\\\"]();\\n        this.time = time || Date.now();\\n    }\\n    distanceTo(start) {\\n        window[\\\"__checkBudget__\\\"]();\\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\\n    }\\n    equals(other) {\\n        window[\\\"__checkBudget__\\\"]();\\n        return this.x === other.x && this.y === other.y && this.time === other.time;\\n    }\\n    velocityFrom(start) {\\n        window[\\\"__checkBudget__\\\"]();\\n        return (this.time !== start.time) ? this.distanceTo(start) / (this.time - start.time) : 0;\\n    }\\n}\\nexports.Point = Point;\\nexports.__info__ = [];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL3NpZ25hdHVyZS9wb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vY29kZS9zaWduYXR1cmUvcG9pbnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIFBvaW50IHtcbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCB0aW1lKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICB0aGlzLnRpbWUgPSB0aW1lIHx8IERhdGUubm93KCk7XG4gICAgfVxuICAgIGRpc3RhbmNlVG8oc3RhcnQpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIHJldHVybiBNYXRoLnNxcnQoTWF0aC5wb3codGhpcy54IC0gc3RhcnQueCwgMikgKyBNYXRoLnBvdyh0aGlzLnkgLSBzdGFydC55LCAyKSk7XG4gICAgfVxuICAgIGVxdWFscyhvdGhlcikge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIHRoaXMueCA9PT0gb3RoZXIueCAmJiB0aGlzLnkgPT09IG90aGVyLnkgJiYgdGhpcy50aW1lID09PSBvdGhlci50aW1lO1xuICAgIH1cbiAgICB2ZWxvY2l0eUZyb20oc3RhcnQpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIHJldHVybiAodGhpcy50aW1lICE9PSBzdGFydC50aW1lKSA/IHRoaXMuZGlzdGFuY2VUbyhzdGFydCkgLyAodGhpcy50aW1lIC0gc3RhcnQudGltZSkgOiAwO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9pbnQgPSBQb2ludDtcbmV4cG9ydHMuX19pbmZvX18gPSBbXTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/signature/point.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/signature/signature_pad.ts\":\n/*!*****************************************!*\\\n  !*** ./code/signature/signature_pad.ts ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\n/**\\n * The main idea and some parts of the code (e.g. drawing variable width Bézier curve) are taken from:\\n * http://corner.squareup.com/2012/07/smoother-signatures.html\\n *\\n * Implementation of interpolation using cubic Bézier curves is taken from:\\n * http://www.benknowscode.com/2012/09/path-interpolation-using-cubic-bezier_9742.html\\n *\\n * Algorithm for approximated length of a Bézier curve is taken from:\\n * http://www.lemoda.net/maths/bezier-length/index.html\\n */\\nconst bezier_1 = __webpack_require__(/*! ./bezier */ \\\"./code/signature/bezier.ts\\\");\\nconst point_1 = __webpack_require__(/*! ./point */ \\\"./code/signature/point.ts\\\");\\nconst throttle_1 = __webpack_require__(/*! ./throttle */ \\\"./code/signature/throttle.ts\\\");\\nclass SignaturePad {\\n    /* tslint:enable: variable-name */\\n    constructor(canvas, options = {}) {\\n        this.canvas = canvas;\\n        this.options = options;\\n        // Event handlers\\n        this._handleMouseDown = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            if (event.which === 1) {\\n                this._mouseButtonDown = true;\\n                this._strokeBegin(event);\\n            }\\n        };\\n        this._handleMouseMove = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            if (this._mouseButtonDown) {\\n                this._strokeMoveUpdate(event);\\n            }\\n        };\\n        this._handleMouseUp = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            if (event.which === 1 && this._mouseButtonDown) {\\n                this._mouseButtonDown = false;\\n                this._strokeEnd(event);\\n            }\\n        };\\n        this._handleTouchStart = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            // Prevent scrolling.\\n            event.preventDefault();\\n            if (event.targetTouches.length === 1) {\\n                const touch = event.changedTouches[0];\\n                this._strokeBegin(touch);\\n            }\\n        };\\n        this._handleTouchMove = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            // Prevent scrolling.\\n            event.preventDefault();\\n            const touch = event.targetTouches[0];\\n            this._strokeMoveUpdate(touch);\\n        };\\n        this._handleTouchEnd = (event) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const wasCanvasTouched = event.target === this.canvas;\\n            if (wasCanvasTouched) {\\n                event.preventDefault();\\n                const touch = event.changedTouches[0];\\n                this._strokeEnd(touch);\\n            }\\n        };\\n        window[\\\"__checkBudget__\\\"]();\\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\\n        this.minWidth = options.minWidth || 0.5;\\n        this.maxWidth = options.maxWidth || 2.5;\\n        this.throttle = (\\\"throttle\\\" in options ? options.throttle : 16); // in milisecondss\\n        this.minDistance = (\\\"minDistance\\\" in options ? options.minDistance : 5); // in pixels\\n        if (this.throttle) {\\n            this._strokeMoveUpdate = throttle_1.throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\\n        }\\n        else {\\n            this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\\n        }\\n        this.dotSize = options.dotSize || function () {\\n            window[\\\"__checkBudget__\\\"]();\\n            return (this.minWidth + this.maxWidth) / 2;\\n        };\\n        this.penColor = options.penColor || \\\"black\\\";\\n        this.backgroundColor = options.backgroundColor || \\\"rgba(0,0,0,0)\\\";\\n        this.onBegin = options.onBegin;\\n        this.onEnd = options.onEnd;\\n        this._ctx = canvas.getContext(\\\"2d\\\");\\n        this.clear();\\n        // Enable mouse and touch event handlers\\n        this.on();\\n    }\\n    clear() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const ctx = this._ctx;\\n        const canvas = this.canvas;\\n        // Clear canvas using background color\\n        ctx.fillStyle = this.backgroundColor;\\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\\n        this._data = [];\\n        this._reset();\\n        this._isEmpty = true;\\n    }\\n    fromDataURL(dataUrl, options = {}, callback) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const image = new Image();\\n        const ratio = options.ratio || window.devicePixelRatio || 1;\\n        const width = options.width || (this.canvas.width / ratio);\\n        const height = options.height || (this.canvas.height / ratio);\\n        this._reset();\\n        image.onload = () => {\\n            window[\\\"__checkBudget__\\\"]();\\n            this._ctx.drawImage(image, 0, 0, width, height);\\n            if (callback) {\\n                callback();\\n            }\\n        };\\n        image.onerror = (error) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            if (callback) {\\n                callback(error);\\n            }\\n        };\\n        image.src = dataUrl;\\n        this._isEmpty = false;\\n    }\\n    toDataURL(type = \\\"image/png\\\", encoderOptions) {\\n        window[\\\"__checkBudget__\\\"]();\\n        switch (type) {\\n            case \\\"image/svg+xml\\\":\\n                return this._toSVG();\\n            default:\\n                return this.canvas.toDataURL(type, encoderOptions);\\n        }\\n    }\\n    on() {\\n        window[\\\"__checkBudget__\\\"]();\\n        this._handleMouseEvents();\\n        if (\\\"ontouchstart\\\" in window) {\\n            this._handleTouchEvents();\\n        }\\n    }\\n    off() {\\n        window[\\\"__checkBudget__\\\"]();\\n        // Pass touch events to canvas element on mobile IE11 and Edge.\\n        this.canvas.style.msTouchAction = \\\"auto\\\";\\n        this.canvas.style.touchAction = \\\"auto\\\";\\n        this.canvas.removeEventListener(\\\"mousedown\\\", this._handleMouseDown);\\n        this.canvas.removeEventListener(\\\"mousemove\\\", this._handleMouseMove);\\n        document.removeEventListener(\\\"mouseup\\\", this._handleMouseUp);\\n        // TS 2.8.1 has incorrect type definition for touch event handlers\\n        // @ts-ignore\\n        this.canvas.removeEventListener(\\\"touchstart\\\", this._handleTouchStart);\\n        // @ts-ignore\\n        this.canvas.removeEventListener(\\\"touchmove\\\", this._handleTouchMove);\\n        // @ts-ignore\\n        this.canvas.removeEventListener(\\\"touchend\\\", this._handleTouchEnd);\\n    }\\n    isEmpty() {\\n        window[\\\"__checkBudget__\\\"]();\\n        return this._isEmpty;\\n    }\\n    fromData(pointGroups) {\\n        window[\\\"__checkBudget__\\\"]();\\n        this.clear();\\n        this._fromData(pointGroups, ({ color, curve }) => this._drawCurve({ color, curve }), ({ color, point }) => this._drawDot({ color, point }));\\n        this._data = pointGroups;\\n    }\\n    toData() {\\n        window[\\\"__checkBudget__\\\"]();\\n        return this._data;\\n    }\\n    // Private methods\\n    _strokeBegin(event) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const newPointGroup = {\\n            color: this.penColor,\\n            points: [],\\n        };\\n        this._data.push(newPointGroup);\\n        this._reset();\\n        this._strokeUpdate(event);\\n        if (typeof this.onBegin === \\\"function\\\") {\\n            this.onBegin(event);\\n        }\\n    }\\n    _strokeUpdate(event) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const x = event.clientX;\\n        const y = event.clientY;\\n        const point = this._createPoint(x, y);\\n        const lastPointGroup = this._data[this._data.length - 1];\\n        const lastPoints = lastPointGroup.points;\\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\\n        const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\\n        const color = lastPointGroup.color;\\n        // Skip this point if it's too close to the previous one\\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\\n            const curve = this._addPoint(point);\\n            if (!lastPoint) {\\n                this._drawDot({ color, point });\\n            }\\n            else if (curve) {\\n                this._drawCurve({ color, curve });\\n            }\\n            lastPoints.push({\\n                time: point.time,\\n                x: point.x,\\n                y: point.y,\\n            });\\n        }\\n    }\\n    _strokeEnd(event) {\\n        window[\\\"__checkBudget__\\\"]();\\n        this._strokeUpdate(event);\\n        if (typeof this.onEnd === \\\"function\\\") {\\n            this.onEnd(event);\\n        }\\n    }\\n    _handleMouseEvents() {\\n        window[\\\"__checkBudget__\\\"]();\\n        this._mouseButtonDown = false;\\n        this.canvas.addEventListener(\\\"mousedown\\\", this._handleMouseDown);\\n        this.canvas.addEventListener(\\\"mousemove\\\", this._handleMouseMove);\\n        document.addEventListener(\\\"mouseup\\\", this._handleMouseUp);\\n    }\\n    _handleTouchEvents() {\\n        window[\\\"__checkBudget__\\\"]();\\n        // Pass touch events to canvas element on mobile IE11 and Edge.\\n        this.canvas.style.msTouchAction = \\\"none\\\";\\n        this.canvas.style.touchAction = \\\"none\\\";\\n        // TS 2.8.1 has incorrect type definition for touch event handlers\\n        // @ts-ignore\\n        this.canvas.addEventListener(\\\"touchstart\\\", this._handleTouchStart);\\n        // @ts-ignore\\n        this.canvas.addEventListener(\\\"touchmove\\\", this._handleTouchMove);\\n        // @ts-ignore\\n        this.canvas.addEventListener(\\\"touchend\\\", this._handleTouchEnd);\\n    }\\n    // Called when a new line is started\\n    _reset() {\\n        window[\\\"__checkBudget__\\\"]();\\n        this._points = [];\\n        this._lastVelocity = 0;\\n        this._lastWidth = (this.minWidth + this.maxWidth) / 2;\\n        this._ctx.fillStyle = this.penColor;\\n    }\\n    _createPoint(x, y) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const rect = this.canvas.getBoundingClientRect();\\n        return new point_1.Point(x - rect.left, y - rect.top, new Date().getTime());\\n    }\\n    // Add point to \\\"_points\\\" array and generate new curve if there are enough points (i.e. 3)\\n    _addPoint(point) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const { _points } = this;\\n        _points.push(point);\\n        if (_points.length > 2) {\\n            // To reduce the initial lag make it work with 3 points\\n            // by copying the first point to the beginning.\\n            if (_points.length === 3) {\\n                _points.unshift(_points[0]);\\n            }\\n            // _points array will always have 4 points here.\\n            const widths = this._calculateCurveWidths(_points[1], _points[2]);\\n            const curve = bezier_1.Bezier.fromPoints(_points, widths);\\n            // Remove the first element from the list, so that we always have no\\n            // more than 4 points in \\\"points\\\" array.\\n            _points.shift();\\n            return curve;\\n        }\\n        return null;\\n    }\\n    _calculateCurveWidths(startPoint, endPoint) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const velocity = (this.velocityFilterWeight * endPoint.velocityFrom(startPoint))\\n            + ((1 - this.velocityFilterWeight) * this._lastVelocity);\\n        const newWidth = this._strokeWidth(velocity);\\n        const widths = {\\n            end: newWidth,\\n            start: this._lastWidth,\\n        };\\n        this._lastVelocity = velocity;\\n        this._lastWidth = newWidth;\\n        return widths;\\n    }\\n    _strokeWidth(velocity) {\\n        window[\\\"__checkBudget__\\\"]();\\n        return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\\n    }\\n    _drawCurveSegment(x, y, width) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const ctx = this._ctx;\\n        ctx.moveTo(x, y);\\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\\n        this._isEmpty = false;\\n    }\\n    _drawCurve({ color, curve }) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const ctx = this._ctx;\\n        const widthDelta = curve.endWidth - curve.startWidth;\\n        // '2' is just an arbitrary number here. If only lenght is used, then\\n        // there are gaps between curve segments :/\\n        const drawSteps = Math.floor(curve.length()) * 2;\\n        ctx.beginPath();\\n        ctx.fillStyle = color;\\n        for (let i = 0; i < drawSteps; i += 1) {\\n            window[\\\"__checkBudget__\\\"]();\\n            // Calculate the Bezier (x, y) coordinate for this step.\\n            const t = i / drawSteps;\\n            const tt = t * t;\\n            const ttt = tt * t;\\n            const u = 1 - t;\\n            const uu = u * u;\\n            const uuu = uu * u;\\n            let x = uuu * curve.startPoint.x;\\n            x += 3 * uu * t * curve.control1.x;\\n            x += 3 * u * tt * curve.control2.x;\\n            x += ttt * curve.endPoint.x;\\n            let y = uuu * curve.startPoint.y;\\n            y += 3 * uu * t * curve.control1.y;\\n            y += 3 * u * tt * curve.control2.y;\\n            y += ttt * curve.endPoint.y;\\n            const width = curve.startWidth + (ttt * widthDelta);\\n            this._drawCurveSegment(x, y, width);\\n        }\\n        ctx.closePath();\\n        ctx.fill();\\n    }\\n    _drawDot({ color, point }) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const ctx = this._ctx;\\n        const width = typeof this.dotSize === \\\"function\\\" ? this.dotSize() : this.dotSize;\\n        ctx.beginPath();\\n        this._drawCurveSegment(point.x, point.y, width);\\n        ctx.closePath();\\n        ctx.fillStyle = color;\\n        ctx.fill();\\n    }\\n    _fromData(pointGroups, drawCurve, drawDot) {\\n        window[\\\"__checkBudget__\\\"]();\\n        for (const group of pointGroups) {\\n            const { color, points } = group;\\n            if (points.length > 1) {\\n                for (let j = 0; j < points.length; j += 1) {\\n                    window[\\\"__checkBudget__\\\"]();\\n                    const basicPoint = points[j];\\n                    const point = new point_1.Point(basicPoint.x, basicPoint.y, basicPoint.time);\\n                    // All points in the group have the same color, so it's enough to set\\n                    // penColor just at the beginning.\\n                    this.penColor = color;\\n                    if (j === 0) {\\n                        this._reset();\\n                    }\\n                    const curve = this._addPoint(point);\\n                    if (curve) {\\n                        drawCurve({ color, curve });\\n                    }\\n                }\\n            }\\n            else {\\n                this._reset();\\n                drawDot({\\n                    color,\\n                    point: points[0],\\n                });\\n            }\\n        }\\n    }\\n    _toSVG() {\\n        window[\\\"__checkBudget__\\\"]();\\n        const pointGroups = this._data;\\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\\n        const minX = 0;\\n        const minY = 0;\\n        const maxX = this.canvas.width / ratio;\\n        const maxY = this.canvas.height / ratio;\\n        const svg = document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"svg\\\");\\n        svg.setAttribute(\\\"width\\\", this.canvas.width.toString());\\n        svg.setAttribute(\\\"height\\\", this.canvas.height.toString());\\n        this._fromData(pointGroups, ({ color, curve }) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const path = document.createElement(\\\"path\\\");\\n            // Need to check curve for NaN values, these pop up when drawing\\n            // lines on the canvas that are not continuous. E.g. Sharp corners\\n            // or stopping mid-stroke and than continuing without lifting mouse.\\n            /* eslint-disable no-restricted-globals */\\n            if (!isNaN(curve.control1.x) &&\\n                !isNaN(curve.control1.y) &&\\n                !isNaN(curve.control2.x) &&\\n                !isNaN(curve.control2.y)) {\\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} `\\n                    + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} `\\n                    + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} `\\n                    + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\\n                path.setAttribute(\\\"d\\\", attr);\\n                path.setAttribute(\\\"stroke-width\\\", (curve.endWidth * 2.25).toFixed(3));\\n                path.setAttribute(\\\"stroke\\\", color);\\n                path.setAttribute(\\\"fill\\\", \\\"none\\\");\\n                path.setAttribute(\\\"stroke-linecap\\\", \\\"round\\\");\\n                svg.appendChild(path);\\n            }\\n        }, ({ color, point }) => {\\n            window[\\\"__checkBudget__\\\"]();\\n            const circle = document.createElement(\\\"circle\\\");\\n            const dotSize = typeof this.dotSize === \\\"function\\\" ? this.dotSize() : this.dotSize;\\n            circle.setAttribute(\\\"r\\\", dotSize.toString());\\n            circle.setAttribute(\\\"cx\\\", point.x.toString());\\n            circle.setAttribute(\\\"cy\\\", point.y.toString());\\n            circle.setAttribute(\\\"fill\\\", color);\\n            svg.appendChild(circle);\\n        });\\n        const prefix = \\\"data:image/svg+xml;base64,\\\";\\n        const header = \\\"<svg\\\"\\n            + \\\" xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\"\\\"\\n            + \\\" xmlns:xlink=\\\\\\\"http://www.w3.org/1999/xlink\\\\\\\"\\\"\\n            + ` viewBox=\\\"${minX} ${minY} ${maxX} ${maxY}\\\"`\\n            + ` width=\\\"${maxX}\\\"`\\n            + ` height=\\\"${maxY}\\\"`\\n            + \\\">\\\";\\n        let body = svg.innerHTML;\\n        // IE hack for missing innerHTML property on SVGElement\\n        if (body === undefined) {\\n            const dummy = document.createElement(\\\"dummy\\\");\\n            const nodes = svg.childNodes;\\n            dummy.innerHTML = \\\"\\\";\\n            // tslint:disable-next-line: prefer-for-of\\n            for (let i = 0; i < nodes.length; i += 1) {\\n                window[\\\"__checkBudget__\\\"]();\\n                dummy.appendChild(nodes[i].cloneNode(true));\\n            }\\n            body = dummy.innerHTML;\\n        }\\n        const footer = \\\"</svg>\\\";\\n        const data = header + body + footer;\\n        return prefix + btoa(data);\\n    }\\n}\\nexports.default = SignaturePad;\\nexports.__info__ = [];\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./code/signature/signature_pad.ts\\n\");\n\n/***/ }),\n\n/***/ \"./code/signature/throttle.ts\":\n/*!************************************!*\\\n  !*** ./code/signature/throttle.ts ***!\n  \\************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\n// Slightly simplified version of http://stackoverflow.com/a/27078401/815507\\nfunction throttle(fn, wait = 250) {\\n    window[\\\"__checkBudget__\\\"]();\\n    let previous = 0;\\n    let timeout = null;\\n    let result;\\n    let storedContext;\\n    let storedArgs;\\n    const later = () => {\\n        window[\\\"__checkBudget__\\\"]();\\n        previous = Date.now();\\n        timeout = null;\\n        result = fn.apply(storedContext, storedArgs);\\n        if (!timeout) {\\n            storedContext = null;\\n            storedArgs = [];\\n        }\\n    };\\n    return function (...args) {\\n        window[\\\"__checkBudget__\\\"]();\\n        const now = Date.now();\\n        const remaining = wait - (now - previous);\\n        storedContext = this;\\n        storedArgs = args;\\n        if (remaining <= 0 || remaining > wait) {\\n            if (timeout) {\\n                clearTimeout(timeout);\\n                timeout = null;\\n            }\\n            previous = now;\\n            result = fn.apply(storedContext, storedArgs);\\n            if (!timeout) {\\n                storedContext = null;\\n                storedArgs = [];\\n            }\\n        }\\n        else if (!timeout) {\\n            timeout = setTimeout(later, remaining);\\n        }\\n        return result;\\n    };\\n}\\nexports.throttle = throttle;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL3NpZ25hdHVyZS90aHJvdHRsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vY29kZS9zaWduYXR1cmUvdGhyb3R0bGUudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIFNsaWdodGx5IHNpbXBsaWZpZWQgdmVyc2lvbiBvZiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNzA3ODQwMS84MTU1MDdcbmZ1bmN0aW9uIHRocm90dGxlKGZuLCB3YWl0ID0gMjUwKSB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgbGV0IHByZXZpb3VzID0gMDtcbiAgICBsZXQgdGltZW91dCA9IG51bGw7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBsZXQgc3RvcmVkQ29udGV4dDtcbiAgICBsZXQgc3RvcmVkQXJncztcbiAgICBjb25zdCBsYXRlciA9ICgpID0+IHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIHByZXZpb3VzID0gRGF0ZS5ub3coKTtcbiAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgIHJlc3VsdCA9IGZuLmFwcGx5KHN0b3JlZENvbnRleHQsIHN0b3JlZEFyZ3MpO1xuICAgICAgICBpZiAoIXRpbWVvdXQpIHtcbiAgICAgICAgICAgIHN0b3JlZENvbnRleHQgPSBudWxsO1xuICAgICAgICAgICAgc3RvcmVkQXJncyA9IFtdO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGNvbnN0IHJlbWFpbmluZyA9IHdhaXQgLSAobm93IC0gcHJldmlvdXMpO1xuICAgICAgICBzdG9yZWRDb250ZXh0ID0gdGhpcztcbiAgICAgICAgc3RvcmVkQXJncyA9IGFyZ3M7XG4gICAgICAgIGlmIChyZW1haW5pbmcgPD0gMCB8fCByZW1haW5pbmcgPiB3YWl0KSB7XG4gICAgICAgICAgICBpZiAodGltZW91dCkge1xuICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgICAgICB0aW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByZXZpb3VzID0gbm93O1xuICAgICAgICAgICAgcmVzdWx0ID0gZm4uYXBwbHkoc3RvcmVkQ29udGV4dCwgc3RvcmVkQXJncyk7XG4gICAgICAgICAgICBpZiAoIXRpbWVvdXQpIHtcbiAgICAgICAgICAgICAgICBzdG9yZWRDb250ZXh0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICBzdG9yZWRBcmdzID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIXRpbWVvdXQpIHtcbiAgICAgICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGxhdGVyLCByZW1haW5pbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbn1cbmV4cG9ydHMudGhyb3R0bGUgPSB0aHJvdHRsZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./code/signature/throttle.ts\\n\");\n\n/***/ }),\n\n/***/ \"./package.js\":\n/*!********************!*\\\n  !*** ./package.js ***!\n  \\********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"// The template for the dynamic webpack entry. Be aware of the variables\\n\\nconst packageJson = __webpack_require__(/*! ./package.json */ \\\"./package.json\\\")\\n\\nconst package = {\\n    packageJson,\\n    sourceModules: {},\\n    dependencies: {},\\n}\\n\\n// This is a special webpack thing that watches the whole directory\\n// https://github.com/webpack/docs/wiki/context\\nconst ctx = __webpack_require__(\\\"./code sync recursive \\\\\\\\.(t|j)s(x?)|\\\\\\\\.css$\\\")\\n\\nctx.keys().forEach(key => {\\n    package.sourceModules[key] = () => ctx(key)\\n})\\n\\n// The packages are passed in through a template\\nconst packages = {}\\n\\n                packages[\\\"framer\\\"] = () => {\\n                    var package = {}\\n                    try {\\n                        package = __webpack_require__(/*! framer */ \\\"framer\\\")\\n                    } catch (e) {\\n                        console.log(e)\\n                    }\\n                    package.__framer__ = package.__framer__ || {}\\n                    package.__framer__.packageJson = {\\\"name\\\":\\\"framer\\\",\\\"version\\\":\\\"0.7.5\\\",\\\"main\\\":\\\"build/framer.js\\\",\\\"types\\\":\\\"build/framer.d.ts\\\",\\\"author\\\":\\\"Framer\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/chalk\\\":\\\"^2.2.0\\\",\\\"@types/draft-js\\\":\\\"0.10.19\\\",\\\"@types/enzyme\\\":\\\"^3.1.10\\\",\\\"@types/hsluv\\\":\\\"https://github.com/framer/typed_hsluv#bump\\\",\\\"@types/jest\\\":\\\"^23.0.0\\\",\\\"@types/jest-diff\\\":\\\"^20.0.0\\\",\\\"@types/node\\\":\\\"^9.6.0\\\",\\\"@types/react\\\":\\\"16.3.12\\\",\\\"@types/react-dom\\\":\\\"^16.0.5\\\",\\\"cache-loader\\\":\\\"^1.2.2\\\",\\\"chalk\\\":\\\"^2.4.1\\\",\\\"convert-tsconfig-paths-to-webpack-aliases\\\":\\\"^0.9.2\\\",\\\"css.escape\\\":\\\"^1.5.1\\\",\\\"dts-bundle\\\":\\\"^0.7.3\\\",\\\"enzyme\\\":\\\"^3.3.0\\\",\\\"enzyme-adapter-react-16\\\":\\\"^1.1.1\\\",\\\"fork-ts-checker-webpack-plugin\\\":\\\"^0.4.1\\\",\\\"hoist-non-react-statics\\\":\\\"^2.5.0\\\",\\\"jest\\\":\\\"^23.1.0\\\",\\\"jest-diff\\\":\\\"^22.0.3\\\",\\\"jest-junit\\\":\\\"^3.4.1\\\",\\\"progress-bar-webpack-plugin\\\":\\\"^1.11.0\\\",\\\"raf\\\":\\\"^3.4.0\\\",\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dev-utils\\\":\\\"^5.0.1\\\",\\\"react-dom\\\":\\\"^16.3.2\\\",\\\"ts-jest\\\":\\\"^22.4.5\\\",\\\"ts-loader\\\":\\\"^4.1.0\\\",\\\"tslint\\\":\\\"^5.10.0\\\",\\\"tslint-microsoft-contrib\\\":\\\"^5.0.3\\\",\\\"typescript\\\":\\\"^2.8.3\\\",\\\"watch\\\":\\\"^1.0.2\\\",\\\"webpack\\\":\\\"^4.4.1\\\",\\\"webpack-cli\\\":\\\"^2.0.13\\\",\\\"webpack-dev-server\\\":\\\"^3.1.4\\\",\\\"xcssmatrix\\\":\\\"^0.2.2\\\"},\\\"peerDependencies\\\":{\\\"react\\\":\\\"^16.3.2\\\",\\\"react-dom\\\":\\\"^16.3.2\\\"},\\\"dependencies\\\":{\\\"draft-js\\\":\\\"0.10.4\\\",\\\"eventemitter3\\\":\\\"^3.1.0\\\",\\\"hsluv\\\":\\\"^0.0.3\\\",\\\"immutable\\\":\\\"^3.8.2\\\"},\\\"framer\\\":{\\\"components\\\":[{\\\"name\\\":\\\"Scroll\\\",\\\"children\\\":true,\\\"properties\\\":[{\\\"key\\\":\\\"direction\\\",\\\"title\\\":\\\"Direction\\\",\\\"kind\\\":\\\"enum\\\",\\\"options\\\":[\\\"horizontal\\\",\\\"vertical\\\",\\\"both\\\"]}]},{\\\"name\\\":\\\"Page\\\",\\\"children\\\":true},{\\\"name\\\":\\\"Stack\\\"},{\\\"name\\\":\\\"FramerAppleWatch38\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleWatch42\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonySmartWatch\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneSE\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhone8Plus\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPhoneX\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus5X\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexus6\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGooglePixel2XL\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerHTCOneA9\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftLumia950\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungNote5\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSamsungGalaxyS8\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadMini\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIPadPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerGoogleNexusTablet\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro3\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfacePro4\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleIMac\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleThunderboltDisplay\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookAir\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerAppleMacBookPro\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerDellXPS\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerMicrosoftSurfaceBook\\\",\\\"type\\\":\\\"device\\\"},{\\\"name\\\":\\\"FramerSonyW850C\\\",\\\"type\\\":\\\"device\\\"}]},\\\"scripts\\\":{\\\"coverage\\\":\\\"jest --config jest.json --coverage\\\",\\\"test\\\":\\\"jest --config jest.json\\\",\\\"watch\\\":\\\"jest --config jest.json --watch\\\"}}\\n                    return package\\n                }\\n\\npackage.dependencies = packages\\n\\nexports.__framer__ = package\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw0SUFBNEkscTdCQUFxN0IscUJBQXFCLHdDQUF3QyxpQkFBaUIsbUZBQW1GLFdBQVcsZUFBZSwrQ0FBK0MsK0ZBQStGLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxlQUFlLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsZ0RBQWdELEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsNENBQTRDLEVBQUUsOENBQThDLEVBQUUsd0NBQXdDLEVBQUUsaURBQWlELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsNENBQTRDLEVBQUUsNkNBQTZDLEVBQUUsNENBQTRDLEVBQUUsaURBQWlELEVBQUUsb0RBQW9ELEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsdURBQXVELEVBQUUsNENBQTRDLEVBQUUsK0NBQStDLEVBQUUsK0NBQStDLEVBQUUsdUNBQXVDLEVBQUUsb0RBQW9ELEVBQUUseUNBQXlDLEVBQUUsWUFBWTtBQUN2NUY7QUFDQTs7QUFFQTs7QUFFQSIsImZpbGUiOiIuL3BhY2thZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgdGVtcGxhdGUgZm9yIHRoZSBkeW5hbWljIHdlYnBhY2sgZW50cnkuIEJlIGF3YXJlIG9mIHRoZSB2YXJpYWJsZXNcblxuY29uc3QgcGFja2FnZUpzb24gPSByZXF1aXJlKFwiLi9wYWNrYWdlLmpzb25cIilcblxuY29uc3QgcGFja2FnZSA9IHtcbiAgICBwYWNrYWdlSnNvbixcbiAgICBzb3VyY2VNb2R1bGVzOiB7fSxcbiAgICBkZXBlbmRlbmNpZXM6IHt9LFxufVxuXG4vLyBUaGlzIGlzIGEgc3BlY2lhbCB3ZWJwYWNrIHRoaW5nIHRoYXQgd2F0Y2hlcyB0aGUgd2hvbGUgZGlyZWN0b3J5XG4vLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay9kb2NzL3dpa2kvY29udGV4dFxuY29uc3QgY3R4ID0gcmVxdWlyZS5jb250ZXh0KFwiLi9jb2RlXCIsIHRydWUsIC9cXC4odHxqKXMoeD8pfFxcLmNzcyQvKVxuXG5jdHgua2V5cygpLmZvckVhY2goa2V5ID0+IHtcbiAgICBwYWNrYWdlLnNvdXJjZU1vZHVsZXNba2V5XSA9ICgpID0+IGN0eChrZXkpXG59KVxuXG4vLyBUaGUgcGFja2FnZXMgYXJlIHBhc3NlZCBpbiB0aHJvdWdoIGEgdGVtcGxhdGVcbmNvbnN0IHBhY2thZ2VzID0ge31cblxuICAgICAgICAgICAgICAgIHBhY2thZ2VzW1wiZnJhbWVyXCJdID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFja2FnZSA9IHt9XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWNrYWdlID0gcmVxdWlyZShcImZyYW1lclwiKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHBhY2thZ2UuX19mcmFtZXJfXyA9IHBhY2thZ2UuX19mcmFtZXJfXyB8fCB7fVxuICAgICAgICAgICAgICAgICAgICBwYWNrYWdlLl9fZnJhbWVyX18ucGFja2FnZUpzb24gPSB7XCJuYW1lXCI6XCJmcmFtZXJcIixcInZlcnNpb25cIjpcIjAuNy41XCIsXCJtYWluXCI6XCJidWlsZC9mcmFtZXIuanNcIixcInR5cGVzXCI6XCJidWlsZC9mcmFtZXIuZC50c1wiLFwiYXV0aG9yXCI6XCJGcmFtZXJcIixcImxpY2Vuc2VcIjpcIk1JVFwiLFwiZGV2RGVwZW5kZW5jaWVzXCI6e1wiQHR5cGVzL2NoYWxrXCI6XCJeMi4yLjBcIixcIkB0eXBlcy9kcmFmdC1qc1wiOlwiMC4xMC4xOVwiLFwiQHR5cGVzL2VuenltZVwiOlwiXjMuMS4xMFwiLFwiQHR5cGVzL2hzbHV2XCI6XCJodHRwczovL2dpdGh1Yi5jb20vZnJhbWVyL3R5cGVkX2hzbHV2I2J1bXBcIixcIkB0eXBlcy9qZXN0XCI6XCJeMjMuMC4wXCIsXCJAdHlwZXMvamVzdC1kaWZmXCI6XCJeMjAuMC4wXCIsXCJAdHlwZXMvbm9kZVwiOlwiXjkuNi4wXCIsXCJAdHlwZXMvcmVhY3RcIjpcIjE2LjMuMTJcIixcIkB0eXBlcy9yZWFjdC1kb21cIjpcIl4xNi4wLjVcIixcImNhY2hlLWxvYWRlclwiOlwiXjEuMi4yXCIsXCJjaGFsa1wiOlwiXjIuNC4xXCIsXCJjb252ZXJ0LXRzY29uZmlnLXBhdGhzLXRvLXdlYnBhY2stYWxpYXNlc1wiOlwiXjAuOS4yXCIsXCJjc3MuZXNjYXBlXCI6XCJeMS41LjFcIixcImR0cy1idW5kbGVcIjpcIl4wLjcuM1wiLFwiZW56eW1lXCI6XCJeMy4zLjBcIixcImVuenltZS1hZGFwdGVyLXJlYWN0LTE2XCI6XCJeMS4xLjFcIixcImZvcmstdHMtY2hlY2tlci13ZWJwYWNrLXBsdWdpblwiOlwiXjAuNC4xXCIsXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiOlwiXjIuNS4wXCIsXCJqZXN0XCI6XCJeMjMuMS4wXCIsXCJqZXN0LWRpZmZcIjpcIl4yMi4wLjNcIixcImplc3QtanVuaXRcIjpcIl4zLjQuMVwiLFwicHJvZ3Jlc3MtYmFyLXdlYnBhY2stcGx1Z2luXCI6XCJeMS4xMS4wXCIsXCJyYWZcIjpcIl4zLjQuMFwiLFwicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRldi11dGlsc1wiOlwiXjUuMC4xXCIsXCJyZWFjdC1kb21cIjpcIl4xNi4zLjJcIixcInRzLWplc3RcIjpcIl4yMi40LjVcIixcInRzLWxvYWRlclwiOlwiXjQuMS4wXCIsXCJ0c2xpbnRcIjpcIl41LjEwLjBcIixcInRzbGludC1taWNyb3NvZnQtY29udHJpYlwiOlwiXjUuMC4zXCIsXCJ0eXBlc2NyaXB0XCI6XCJeMi44LjNcIixcIndhdGNoXCI6XCJeMS4wLjJcIixcIndlYnBhY2tcIjpcIl40LjQuMVwiLFwid2VicGFjay1jbGlcIjpcIl4yLjAuMTNcIixcIndlYnBhY2stZGV2LXNlcnZlclwiOlwiXjMuMS40XCIsXCJ4Y3NzbWF0cml4XCI6XCJeMC4yLjJcIn0sXCJwZWVyRGVwZW5kZW5jaWVzXCI6e1wicmVhY3RcIjpcIl4xNi4zLjJcIixcInJlYWN0LWRvbVwiOlwiXjE2LjMuMlwifSxcImRlcGVuZGVuY2llc1wiOntcImRyYWZ0LWpzXCI6XCIwLjEwLjRcIixcImV2ZW50ZW1pdHRlcjNcIjpcIl4zLjEuMFwiLFwiaHNsdXZcIjpcIl4wLjAuM1wiLFwiaW1tdXRhYmxlXCI6XCJeMy44LjJcIn0sXCJmcmFtZXJcIjp7XCJjb21wb25lbnRzXCI6W3tcIm5hbWVcIjpcIlNjcm9sbFwiLFwiY2hpbGRyZW5cIjp0cnVlLFwicHJvcGVydGllc1wiOlt7XCJrZXlcIjpcImRpcmVjdGlvblwiLFwidGl0bGVcIjpcIkRpcmVjdGlvblwiLFwia2luZFwiOlwiZW51bVwiLFwib3B0aW9uc1wiOltcImhvcml6b250YWxcIixcInZlcnRpY2FsXCIsXCJib3RoXCJdfV19LHtcIm5hbWVcIjpcIlBhZ2VcIixcImNoaWxkcmVuXCI6dHJ1ZX0se1wibmFtZVwiOlwiU3RhY2tcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDM4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVXYXRjaDQyXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyU29ueVNtYXJ0V2F0Y2hcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQaG9uZVNFXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGhvbmU4UGx1c1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckFwcGxlSVBob25lWFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckdvb2dsZU5leHVzNVhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVOZXh1czZcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJHb29nbGVQaXhlbDJYTFwiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lckhUQ09uZUE5XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0THVtaWE5NTBcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nTm90ZTVcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTYW1zdW5nR2FsYXh5UzhcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZUlQYWRNaW5pXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJUGFkUHJvXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyR29vZ2xlTmV4dXNUYWJsZXRcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJNaWNyb3NvZnRTdXJmYWNlUHJvM1wiLFwidHlwZVwiOlwiZGV2aWNlXCJ9LHtcIm5hbWVcIjpcIkZyYW1lck1pY3Jvc29mdFN1cmZhY2VQcm80XCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVJTWFjXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyQXBwbGVUaHVuZGVyYm9sdERpc3BsYXlcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tBaXJcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJBcHBsZU1hY0Jvb2tQcm9cIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJEZWxsWFBTXCIsXCJ0eXBlXCI6XCJkZXZpY2VcIn0se1wibmFtZVwiOlwiRnJhbWVyTWljcm9zb2Z0U3VyZmFjZUJvb2tcIixcInR5cGVcIjpcImRldmljZVwifSx7XCJuYW1lXCI6XCJGcmFtZXJTb255Vzg1MENcIixcInR5cGVcIjpcImRldmljZVwifV19LFwic2NyaXB0c1wiOntcImNvdmVyYWdlXCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvbiAtLWNvdmVyYWdlXCIsXCJ0ZXN0XCI6XCJqZXN0IC0tY29uZmlnIGplc3QuanNvblwiLFwid2F0Y2hcIjpcImplc3QgLS1jb25maWcgamVzdC5qc29uIC0td2F0Y2hcIn19XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWNrYWdlXG4gICAgICAgICAgICAgICAgfVxuXG5wYWNrYWdlLmRlcGVuZGVuY2llcyA9IHBhY2thZ2VzXG5cbmV4cG9ydHMuX19mcmFtZXJfXyA9IHBhY2thZ2VcbiJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./package.js\\n\");\n\n/***/ }),\n\n/***/ \"./package.json\":\n/*!**********************!*\\\n  !*** ./package.json ***!\n  \\**********************/\n/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, name, version, default */\n/***/ (function(module) {\n\neval(\"module.exports = {\\\"main\\\":\\\"build/index.js\\\",\\\"license\\\":\\\"MIT\\\",\\\"devDependencies\\\":{\\\"@types/react\\\":\\\"^16.0.31\\\",\\\"framer\\\":\\\"^0.7.5\\\"},\\\"peerDependencies\\\":{\\\"framer\\\":\\\"^0.7.5\\\",\\\"react\\\":\\\"^16.3.0\\\",\\\"react-dom\\\":\\\"^16.3.0\\\"},\\\"framer\\\":{\\\"id\\\":\\\"7ea35cab-4d4a-4859-ab04-268ca5b74084\\\",\\\"displayName\\\":\\\"Signature\\\"},\\\"author\\\":\\\"Koen Bok\\\",\\\"name\\\":\\\"@framer/koenbok.signature\\\",\\\"version\\\":\\\"1.3.0\\\"};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./package.json\\n\");\n\n/***/ }),\n\n/***/ \"framer\":\n/*!******************************************************************************************!*\\\n  !*** external {\"root\":\"Framer\",\"commonjs2\":\"framer\",\"commonjs\":\"framer\",\"amd\":\"framer\"} ***!\n  \\******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///framer\\n\");\n\n/***/ }),\n\n/***/ \"react\":\n/*!**************************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n  \\**************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///react\\n\");\n\n/***/ })\n\n/******/ });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/koenbok.signature/build/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenate.js":
/*!*************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenate.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9oeXBoZW5hdGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uLy4uL0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9oeXBoZW5hdGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgX3VwcGVyY2FzZVBhdHRlcm4gPSAvKFtBLVpdKS9nO1xuXG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIHN0cmluZywgZm9yIGV4YW1wbGU6XG4gKlxuICogICA+IGh5cGhlbmF0ZSgnYmFja2dyb3VuZENvbG9yJylcbiAqICAgPCBcImJhY2tncm91bmQtY29sb3JcIlxuICpcbiAqIEZvciBDU1Mgc3R5bGUgbmFtZXMsIHVzZSBgaHlwaGVuYXRlU3R5bGVOYW1lYCBpbnN0ZWFkIHdoaWNoIHdvcmtzIHByb3Blcmx5XG4gKiB3aXRoIGFsbCB2ZW5kb3IgcHJlZml4ZXMsIGluY2x1ZGluZyBgbXNgLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gaHlwaGVuYXRlKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoX3VwcGVyY2FzZVBhdHRlcm4sICctJDEnKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGh5cGhlbmF0ZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenate.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenateStyleName.js":
/*!**********************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenateStyleName.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n\n\nvar hyphenate = __webpack_require__(/*! ./hyphenate */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenate.js\");\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9mYmpzL2xpYi9oeXBoZW5hdGVTdHlsZU5hbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vLi4vLi4vQ2FjaGVzL0ZyYW1lci9wcm9qZWN0cy9mYmQ3ZTY3Ny0xNGU1LTRiYzUtYWFlMC05YmEzNTRlMGZjZjkvbm9kZV9tb2R1bGVzL2ZianMvbGliL2h5cGhlbmF0ZVN0eWxlTmFtZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoeXBoZW5hdGUgPSByZXF1aXJlKCcuL2h5cGhlbmF0ZScpO1xuXG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xuXG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIENTUyBwcm9wZXJ0eSBuYW1lLCBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdiYWNrZ3JvdW5kQ29sb3InKVxuICogICA8IFwiYmFja2dyb3VuZC1jb2xvclwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdNb3pUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tb3otdHJhbnNpdGlvblwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdtc1RyYW5zaXRpb24nKVxuICogICA8IFwiLW1zLXRyYW5zaXRpb25cIlxuICpcbiAqIEFzIE1vZGVybml6ciBzdWdnZXN0cyAoaHR0cDovL21vZGVybml6ci5jb20vZG9jcy8jcHJlZml4ZWQpLCBhbiBgbXNgIHByZWZpeFxuICogaXMgY29udmVydGVkIHRvIGAtbXMtYC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGh5cGhlbmF0ZVN0eWxlTmFtZShzdHJpbmcpIHtcbiAgcmV0dXJuIGh5cGhlbmF0ZShzdHJpbmcpLnJlcGxhY2UobXNQYXR0ZXJuLCAnLW1zLScpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGh5cGhlbmF0ZVN0eWxlTmFtZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenateStyleName.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!***************************************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \***************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE4Qzs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsaUJBQWlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2ZiZDdlNjc3LTE0ZTUtNGJjNS1hYWUwLTliYTM1NGUwZmNmOS9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YgJiYgZ2V0UHJvdG90eXBlT2YoT2JqZWN0KTtcblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoIVJFQUNUX1NUQVRJQ1Nba2V5XSAmJiAhS05PV05fU1RBVElDU1trZXldICYmICghYmxhY2tsaXN0IHx8ICFibGFja2xpc3Rba2V5XSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG4gICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0YXJnZXRDb21wb25lbnQsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBob2lzdE5vblJlYWN0U3RhdGljcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/object-assign/index.js":
/*!**************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/object-assign/index.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixzQkFBc0I7QUFDdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2ZiZDdlNjc3LTE0ZTUtNGJjNS1hYWUwLTliYTM1NGUwZmNmOS9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/object-assign/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/checkPropTypes.js":
/*!********************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/checkPropTypes.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          )\n\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLFVBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEdBQTRHO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4uLy4uLy4uL0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKHR5cGVTcGVjcy5oYXNPd25Qcm9wZXJ0eSh0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgLy8gUHJvcCB0eXBlIHZhbGlkYXRpb24gbWF5IHRocm93LiBJbiBjYXNlIHRoZXkgZG8sIHdlIGRvbid0IHdhbnQgdG9cbiAgICAgICAgLy8gZmFpbCB0aGUgcmVuZGVyIHBoYXNlIHdoZXJlIGl0IGRpZG4ndCBmYWlsIGJlZm9yZS4gU28gd2UgbG9nIGl0LlxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxuICAgICAgICAgIGlmICh0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBFcnJvcihcbiAgICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiAnICsgbG9jYXRpb24gKyAnIHR5cGUgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyAnICtcbiAgICAgICAgICAgICAgJ2l0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGAnICsgdHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICsgJ2AuJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlcnJvciA9IHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdKHZhbHVlcywgdHlwZVNwZWNOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgbnVsbCwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgIGVycm9yID0gZXg7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yICYmICEoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikpIHtcbiAgICAgICAgICBwcmludFdhcm5pbmcoXG4gICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6IHR5cGUgc3BlY2lmaWNhdGlvbiBvZiAnICtcbiAgICAgICAgICAgIGxvY2F0aW9uICsgJyBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7IHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnZnVuY3Rpb24gbXVzdCByZXR1cm4gYG51bGxgIG9yIGFuIGBFcnJvcmAgYnV0IHJldHVybmVkIGEgJyArIHR5cGVvZiBlcnJvciArICcuICcgK1xuICAgICAgICAgICAgJ1lvdSBtYXkgaGF2ZSBmb3Jnb3R0ZW4gdG8gcGFzcyBhbiBhcmd1bWVudCB0byB0aGUgdHlwZSBjaGVja2VyICcgK1xuICAgICAgICAgICAgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArXG4gICAgICAgICAgICAnc2hhcGUgYWxsIHJlcXVpcmUgYW4gYXJndW1lbnQpLidcbiAgICAgICAgICApXG5cbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhKGVycm9yLm1lc3NhZ2UgaW4gbG9nZ2VkVHlwZUZhaWx1cmVzKSkge1xuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuICAgICAgICAgIC8vIHNhbWUgZXJyb3IuXG4gICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yLm1lc3NhZ2VdID0gdHJ1ZTtcblxuICAgICAgICAgIHZhciBzdGFjayA9IGdldFN0YWNrID8gZ2V0U3RhY2soKSA6ICcnO1xuXG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgJ0ZhaWxlZCAnICsgbG9jYXRpb24gKyAnIHR5cGU6ICcgKyBlcnJvci5tZXNzYWdlICsgKHN0YWNrICE9IG51bGwgPyBzdGFjayA6ICcnKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/factoryWithTypeCheckers.js":
/*!*****************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar assign = __webpack_require__(/*! object-assign */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/checkPropTypes.js\");\n\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n       true ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/factoryWithTypeCheckers.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/index.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/index.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/factoryWithTypeCheckers.js\")(isValidElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLFFBSUQiLCJmaWxlIjoiLi4vLi4vLi4vQ2FjaGVzL0ZyYW1lci9wcm9qZWN0cy9mYmQ3ZTY3Ny0xNGU1LTRiYzUtYWFlMC05YmEzNTRlMGZjZjkvbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!******************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi4vLi4vLi4vQ2FjaGVzL0ZyYW1lci9wcm9qZWN0cy9mYmQ3ZTY3Ny0xNGU1LTRiYzUtYWFlMC05YmEzNTRlMGZjZjkvbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/cjs/react-is.development.js":
/*!****************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/cjs/react-is.development.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.4.2\n * react-is.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\n\nfunction isAsyncMode(object) {\n  return typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Profiler = Profiler;\nexports.Portal = Portal;\nexports.StrictMode = StrictMode;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isProfiler = isProfiler;\nexports.isPortal = isPortal;\nexports.isStrictMode = isStrictMode;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7OztBQUlBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEMsY0FBYzs7QUFFNUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4uLy4uLy4uL0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjQuMlxuICogcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cblxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIChmdW5jdGlvbigpIHtcbid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuLy8gVGhlIFN5bWJvbCB1c2VkIHRvIHRhZyB0aGUgUmVhY3RFbGVtZW50LWxpa2UgdHlwZXMuIElmIHRoZXJlIGlzIG5vIG5hdGl2ZSBTeW1ib2xcbi8vIG5vciBwb2x5ZmlsbCwgdGhlbiBhIHBsYWluIG51bWJlciBpcyB1c2VkIGZvciBwZXJmb3JtYW5jZS5cbnZhciBoYXNTeW1ib2wgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIFN5bWJvbC5mb3I7XG5cbnZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykgOiAweGVhYzc7XG52YXIgUkVBQ1RfUE9SVEFMX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5wb3J0YWwnKSA6IDB4ZWFjYTtcbnZhciBSRUFDVF9GUkFHTUVOVF9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QuZnJhZ21lbnQnKSA6IDB4ZWFjYjtcbnZhciBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3Quc3RyaWN0X21vZGUnKSA6IDB4ZWFjYztcbnZhciBSRUFDVF9QUk9GSUxFUl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QucHJvZmlsZXInKSA6IDB4ZWFkMjtcbnZhciBSRUFDVF9QUk9WSURFUl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QucHJvdmlkZXInKSA6IDB4ZWFjZDtcbnZhciBSRUFDVF9DT05URVhUX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5jb250ZXh0JykgOiAweGVhY2U7XG52YXIgUkVBQ1RfQVNZTkNfTU9ERV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcigncmVhY3QuYXN5bmNfbW9kZScpIDogMHhlYWNmO1xudmFyIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKCdyZWFjdC5mb3J3YXJkX3JlZicpIDogMHhlYWQwO1xudmFyIFJFQUNUX1RJTUVPVVRfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LnRpbWVvdXQnKSA6IDB4ZWFkMTtcblxuZnVuY3Rpb24gaXNWYWxpZEVsZW1lbnRUeXBlKHR5cGUpIHtcbiAgcmV0dXJuIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyB8fCB0eXBlb2YgdHlwZSA9PT0gJ2Z1bmN0aW9uJyB8fFxuICAvLyBOb3RlOiBpdHMgdHlwZW9mIG1pZ2h0IGJlIG90aGVyIHRoYW4gJ3N5bWJvbCcgb3IgJ251bWJlcicgaWYgaXQncyBhIHBvbHlmaWxsLlxuICB0eXBlID09PSBSRUFDVF9GUkFHTUVOVF9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX0FTWU5DX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9QUk9GSUxFUl9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NUUklDVF9NT0RFX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfVElNRU9VVF9UWVBFIHx8IHR5cGVvZiB0eXBlID09PSAnb2JqZWN0JyAmJiB0eXBlICE9PSBudWxsICYmICh0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9QUk9WSURFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0NPTlRFWFRfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFKTtcbn1cblxuZnVuY3Rpb24gdHlwZU9mKG9iamVjdCkge1xuICBpZiAodHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgb2JqZWN0ICE9PSBudWxsKSB7XG4gICAgdmFyICQkdHlwZW9mID0gb2JqZWN0LiQkdHlwZW9mO1xuXG4gICAgc3dpdGNoICgkJHR5cGVvZikge1xuICAgICAgY2FzZSBSRUFDVF9FTEVNRU5UX1RZUEU6XG4gICAgICAgIHZhciB0eXBlID0gb2JqZWN0LnR5cGU7XG5cbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgY2FzZSBSRUFDVF9BU1lOQ19NT0RFX1RZUEU6XG4gICAgICAgICAgY2FzZSBSRUFDVF9GUkFHTUVOVF9UWVBFOlxuICAgICAgICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgICAgICBjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdmFyICQkdHlwZW9mVHlwZSA9IHR5cGUgJiYgdHlwZS4kJHR5cGVvZjtcblxuICAgICAgICAgICAgc3dpdGNoICgkJHR5cGVvZlR5cGUpIHtcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9DT05URVhUX1RZUEU6XG4gICAgICAgICAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcbiAgICAgICAgICAgICAgY2FzZSBSRUFDVF9QUk9WSURFUl9UWVBFOlxuICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZlR5cGU7XG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxuICAgICAgICByZXR1cm4gJCR0eXBlb2Y7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxudmFyIEFzeW5jTW9kZSA9IFJFQUNUX0FTWU5DX01PREVfVFlQRTtcbnZhciBDb250ZXh0Q29uc3VtZXIgPSBSRUFDVF9DT05URVhUX1RZUEU7XG52YXIgQ29udGV4dFByb3ZpZGVyID0gUkVBQ1RfUFJPVklERVJfVFlQRTtcbnZhciBFbGVtZW50ID0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xudmFyIEZvcndhcmRSZWYgPSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xudmFyIEZyYWdtZW50ID0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbnZhciBQcm9maWxlciA9IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG52YXIgUG9ydGFsID0gUkVBQ1RfUE9SVEFMX1RZUEU7XG52YXIgU3RyaWN0TW9kZSA9IFJFQUNUX1NUUklDVF9NT0RFX1RZUEU7XG5cbmZ1bmN0aW9uIGlzQXN5bmNNb2RlKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0FTWU5DX01PREVfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dENvbnN1bWVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0NPTlRFWFRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzQ29udGV4dFByb3ZpZGVyKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST1ZJREVSX1RZUEU7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiBvYmplY3QgIT09IG51bGwgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG59XG5mdW5jdGlvbiBpc0ZvcndhcmRSZWYob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzRnJhZ21lbnQob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfRlJBR01FTlRfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzUHJvZmlsZXIob2JqZWN0KSB7XG4gIHJldHVybiB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfUFJPRklMRVJfVFlQRTtcbn1cbmZ1bmN0aW9uIGlzUG9ydGFsKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BPUlRBTF9UWVBFO1xufVxuZnVuY3Rpb24gaXNTdHJpY3RNb2RlKG9iamVjdCkge1xuICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1NUUklDVF9NT0RFX1RZUEU7XG59XG5cbmV4cG9ydHMudHlwZU9mID0gdHlwZU9mO1xuZXhwb3J0cy5Bc3luY01vZGUgPSBBc3luY01vZGU7XG5leHBvcnRzLkNvbnRleHRDb25zdW1lciA9IENvbnRleHRDb25zdW1lcjtcbmV4cG9ydHMuQ29udGV4dFByb3ZpZGVyID0gQ29udGV4dFByb3ZpZGVyO1xuZXhwb3J0cy5FbGVtZW50ID0gRWxlbWVudDtcbmV4cG9ydHMuRm9yd2FyZFJlZiA9IEZvcndhcmRSZWY7XG5leHBvcnRzLkZyYWdtZW50ID0gRnJhZ21lbnQ7XG5leHBvcnRzLlByb2ZpbGVyID0gUHJvZmlsZXI7XG5leHBvcnRzLlBvcnRhbCA9IFBvcnRhbDtcbmV4cG9ydHMuU3RyaWN0TW9kZSA9IFN0cmljdE1vZGU7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZSA9IGlzVmFsaWRFbGVtZW50VHlwZTtcbmV4cG9ydHMuaXNBc3luY01vZGUgPSBpc0FzeW5jTW9kZTtcbmV4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXIgPSBpc0NvbnRleHRDb25zdW1lcjtcbmV4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXIgPSBpc0NvbnRleHRQcm92aWRlcjtcbmV4cG9ydHMuaXNFbGVtZW50ID0gaXNFbGVtZW50O1xuZXhwb3J0cy5pc0ZvcndhcmRSZWYgPSBpc0ZvcndhcmRSZWY7XG5leHBvcnRzLmlzRnJhZ21lbnQgPSBpc0ZyYWdtZW50O1xuZXhwb3J0cy5pc1Byb2ZpbGVyID0gaXNQcm9maWxlcjtcbmV4cG9ydHMuaXNQb3J0YWwgPSBpc1BvcnRhbDtcbmV4cG9ydHMuaXNTdHJpY3RNb2RlID0gaXNTdHJpY3RNb2RlO1xuICB9KSgpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/index.js":
/*!*********************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/index.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxhQUVDO0FBQ0Q7QUFDQSIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2ZiZDdlNjc3LTE0ZTUtNGJjNS1hYWUwLTliYTM1NGUwZmNmOS9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js":
/*!***********************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Usage\n */\n// import util from '../../../../../ruucm-util/';\n// import { log } from '../../../../../ruucm-util/';\n\nvar environment = {\n  production: false\n};\nvar log = exports.log = function log(name, data) {\n  if (data === void 0) {\n    data = null;\n  }\n  if (!environment.production) {\n    if (data) console.log(name + ' ->', data);else console.log(name);\n  }\n};\nvar objectValue = exports.objectValue = function objectValue(func, defaultValue) {\n  try {\n    return func();\n  } catch (err) {\n    return defaultValue;\n  }\n};\nvar ArrayToObject = exports.ArrayToObject = function ArrayToObject(arr) {\n  var rv = {};\n  for (var i = 0; i < arr.length; ++i) {\n    rv[arr[i]] = true;\n  }return rv;\n};\nvar ObjectToArray = exports.ObjectToArray = function ObjectToArray(obj) {\n  var result = Object.values(obj);\n  return result;\n};\n\nvar commaPipe = exports.commaPipe = function commaPipe(number) {\n  if (number != null) return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexports.default = {\n  log: log,\n  objectValue: objectValue,\n  ArrayToObject: ArrayToObject,\n  ObjectToArray: ObjectToArray\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9ydXVjbS11dGlsL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07O0FBRWpCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdCQUFnQjtBQUNqQztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUVBQWlFLEVBQUU7QUFDbkU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uLy4uLy4uL0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9ydXVjbS11dGlsL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuLyoqXG4gKiBVc2FnZVxuICovXG4vLyBpbXBvcnQgdXRpbCBmcm9tICcuLi8uLi8uLi8uLi8uLi9ydXVjbS11dGlsLyc7XG4vLyBpbXBvcnQgeyBsb2cgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9ydXVjbS11dGlsLyc7XG5cbnZhciBlbnZpcm9ubWVudCA9IHtcbiAgcHJvZHVjdGlvbjogZmFsc2Vcbn07XG52YXIgbG9nID0gZXhwb3J0cy5sb2cgPSBmdW5jdGlvbiBsb2cobmFtZSwgZGF0YSkge1xuICBpZiAoZGF0YSA9PT0gdm9pZCAwKSB7XG4gICAgZGF0YSA9IG51bGw7XG4gIH1cbiAgaWYgKCFlbnZpcm9ubWVudC5wcm9kdWN0aW9uKSB7XG4gICAgaWYgKGRhdGEpIGNvbnNvbGUubG9nKG5hbWUgKyAnIC0+JywgZGF0YSk7ZWxzZSBjb25zb2xlLmxvZyhuYW1lKTtcbiAgfVxufTtcbnZhciBvYmplY3RWYWx1ZSA9IGV4cG9ydHMub2JqZWN0VmFsdWUgPSBmdW5jdGlvbiBvYmplY3RWYWx1ZShmdW5jLCBkZWZhdWx0VmFsdWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZnVuYygpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9XG59O1xudmFyIEFycmF5VG9PYmplY3QgPSBleHBvcnRzLkFycmF5VG9PYmplY3QgPSBmdW5jdGlvbiBBcnJheVRvT2JqZWN0KGFycikge1xuICB2YXIgcnYgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyArK2kpIHtcbiAgICBydlthcnJbaV1dID0gdHJ1ZTtcbiAgfXJldHVybiBydjtcbn07XG52YXIgT2JqZWN0VG9BcnJheSA9IGV4cG9ydHMuT2JqZWN0VG9BcnJheSA9IGZ1bmN0aW9uIE9iamVjdFRvQXJyYXkob2JqKSB7XG4gIHZhciByZXN1bHQgPSBPYmplY3QudmFsdWVzKG9iaik7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG52YXIgY29tbWFQaXBlID0gZXhwb3J0cy5jb21tYVBpcGUgPSBmdW5jdGlvbiBjb21tYVBpcGUobnVtYmVyKSB7XG4gIGlmIChudW1iZXIgIT0gbnVsbCkgcmV0dXJuIG51bWJlci50b1N0cmluZygpLnJlcGxhY2UoL1xcQig/PShcXGR7M30pKyg/IVxcZCkpL2csICcsJyk7XG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gIGxvZzogbG9nLFxuICBvYmplY3RWYWx1ZTogb2JqZWN0VmFsdWUsXG4gIEFycmF5VG9PYmplY3Q6IEFycmF5VG9PYmplY3QsXG4gIE9iamVjdFRvQXJyYXk6IE9iamVjdFRvQXJyYXlcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js":
/*!***********************************************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: default, css, keyframes, injectGlobal, isStyledComponent, consolidateStreamedStyles, ThemeProvider, withTheme, ServerStyleSheet, StyleSheetManager, __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process, module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyframes\", function() { return keyframes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"injectGlobal\", function() { return injectGlobal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isStyledComponent\", function() { return isStyledComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"consolidateStreamedStyles\", function() { return consolidateStreamedStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ThemeProvider\", function() { return ThemeProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withTheme\", function() { return withTheme; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServerStyleSheet\", function() { return ServerStyleSheet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleSheetManager\", function() { return StyleSheetManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS\", function() { return __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS; });\n/* harmony import */ var fbjs_lib_hyphenateStyleName__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/fbjs/lib/hyphenateStyleName.js\");\n/* harmony import */ var fbjs_lib_hyphenateStyleName__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fbjs_lib_hyphenateStyleName__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! stylis */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis/stylis.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(stylis__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! stylis-rule-sheet */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis-rule-sheet/index.js\");\n/* harmony import */ var stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! hoist-non-react-statics */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-is */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/react-is/index.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n// \nvar isPlainObject = (function (x) {\n  return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x.constructor === Object;\n});\n\n// \n\n\n/**\n * Parse errors.md and turn it into a simple hash of code: message\n */\nvar ERRORS =  true ? {\n  \"1\": \"Cannot create styled-component for component: %s.\\n\\n\",\n  \"2\": \"Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\\n\\n* Are you trying to reuse it across renders?\\n* Are you accidentally calling collectStyles twice?\\n\\n\",\n  \"3\": \"Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\\n\\n\",\n  \"4\": \"The `StyleSheetManager` expects a valid target or sheet prop!\\n\\n* Does this error occur on the client and is your target falsy?\\n* Does this error occur on the server and is the sheet falsy?\\n\\n\",\n  \"5\": \"The clone method cannot be used on the client!\\n\\n* Are you running in a client-like environment on the server?\\n* Are you trying to run SSR on the client?\\n\\n\",\n  \"6\": \"Trying to insert a new style tag, but the given Node is unmounted!\\n\\n* Are you using a custom target that isn't mounted?\\n* Does your document not have a valid head element?\\n* Have you accidentally removed a style tag manually?\\n\\n\",\n  \"7\": \"ThemeProvider: Please return an object from your \\\"theme\\\" prop function, e.g.\\n\\n```js\\ntheme={() => ({})}\\n```\\n\\n\",\n  \"8\": \"ThemeProvider: Please make your \\\"theme\\\" prop an object.\\n\\n\",\n  \"9\": \"Missing document `<head>`\\n\\n\",\n  \"10\": \"Cannot find sheet for given tag\\n\\n\",\n  \"11\": \"A plain React class (%s) has been interpolated into styles, probably as a component selector (https://www.styled-components.com/docs/advanced#referring-to-other-components). Only styled-component classes can be targeted in this fashion.\"\n} : undefined;\n\n/**\n * super basic version of sprintf\n */\nfunction format() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var a = args[0];\n  var b = [];\n  var c = void 0;\n\n  for (c = 1; c < args.length; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(function (d) {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\n\nvar StyledComponentsError = function (_Error) {\n  inherits(StyledComponentsError, _Error);\n\n  function StyledComponentsError(code) {\n    classCallCheck(this, StyledComponentsError);\n\n    for (var _len2 = arguments.length, interpolations = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      interpolations[_key2 - 1] = arguments[_key2];\n    }\n\n    if (false) { var _this; } else {\n      var _this = possibleConstructorReturn(this, _Error.call(this, format.apply(undefined, [ERRORS[code]].concat(interpolations))));\n    }\n    return possibleConstructorReturn(_this);\n  }\n\n  return StyledComponentsError;\n}(Error);\n\n// \n\nvar objToCss = function objToCss(obj, prevKey) {\n  var css = Object.keys(obj).filter(function (key) {\n    var chunk = obj[key];\n    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';\n  }).map(function (key) {\n    if (isPlainObject(obj[key])) return objToCss(obj[key], key);\n    return fbjs_lib_hyphenateStyleName__WEBPACK_IMPORTED_MODULE_0___default()(key) + ': ' + obj[key] + ';';\n  }).join(' ');\n  return prevKey ? prevKey + ' {\\n  ' + css + '\\n}' : css;\n};\n\nvar flatten = function flatten(chunks, executionContext) {\n  return chunks.reduce(function (ruleSet, chunk) {\n    /* Remove falsey values */\n    if (chunk === undefined || chunk === null || chunk === false || chunk === '') {\n      return ruleSet;\n    }\n\n    /* Flatten ruleSet */\n    if (Array.isArray(chunk)) {\n      ruleSet.push.apply(ruleSet, flatten(chunk, executionContext));\n      return ruleSet;\n    }\n\n    /* Handle other components */\n    if (chunk.hasOwnProperty('styledComponentId')) {\n      // $FlowFixMe not sure how to make this pass\n      ruleSet.push('.' + chunk.styledComponentId);\n      return ruleSet;\n    }\n\n    /* Either execute or defer the function */\n    if (typeof chunk === 'function') {\n      if (executionContext) {\n        var nextChunk = chunk(executionContext);\n        /* Throw if a React Element was given styles */\n        if (react__WEBPACK_IMPORTED_MODULE_1___default.a.isValidElement(nextChunk)) {\n          var elementName = chunk.displayName || chunk.name;\n          throw new StyledComponentsError(11, elementName);\n        }\n        ruleSet.push.apply(ruleSet, flatten([nextChunk], executionContext));\n      } else ruleSet.push(chunk);\n\n      return ruleSet;\n    }\n\n    /* Handle objects */\n    ruleSet.push(\n    // $FlowFixMe have to add %checks somehow to isPlainObject\n    isPlainObject(chunk) ? objToCss(chunk) : chunk.toString());\n\n    return ruleSet;\n  }, []);\n};\n\n// \n\nvar COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\n\n// NOTE: This stylis instance is only used to split rules from SSR'd style tags\nvar stylisSplitter = new stylis__WEBPACK_IMPORTED_MODULE_2___default.a({\n  global: false,\n  cascade: true,\n  keyframe: false,\n  prefix: false,\n  compress: false,\n  semicolon: true\n});\n\nvar stylis = new stylis__WEBPACK_IMPORTED_MODULE_2___default.a({\n  global: false,\n  cascade: true,\n  keyframe: false,\n  prefix: true,\n  compress: false,\n  semicolon: false // NOTE: This means \"autocomplete missing semicolons\"\n});\n\n// Wrap `insertRulePlugin to build a list of rules,\n// and then make our own plugin to return the rules. This\n// makes it easier to hook into the existing SSR architecture\n\nvar parsingRules = [];\n// eslint-disable-next-line consistent-return\nvar returnRulesPlugin = function returnRulesPlugin(context) {\n  if (context === -2) {\n    var parsedRules = parsingRules;\n    parsingRules = [];\n    return parsedRules;\n  }\n};\n\nvar parseRulesPlugin = stylis_rule_sheet__WEBPACK_IMPORTED_MODULE_3___default()(function (rule) {\n  parsingRules.push(rule);\n});\n\nstylis.use([parseRulesPlugin, returnRulesPlugin]);\nstylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);\n\nvar stringifyRules = function stringifyRules(rules, selector, prefix) {\n  var flatCSS = rules.join('').replace(COMMENT_REGEX, ''); // replace JS comments\n\n  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;\n\n  return stylis(prefix || !selector ? '' : selector, cssStr);\n};\n\nvar splitByRules = function splitByRules(css) {\n  return stylisSplitter('', css);\n};\n\n// \n\nfunction isStyledComponent(target) /* : %checks */{\n  return (\n    // $FlowFixMe TODO: flow for styledComponentId\n    typeof target === 'function' && typeof target.styledComponentId === 'string'\n  );\n}\n\n// \n\n/* This function is DEPRECATED and will be removed on the next major version release.\n * It was needed to rehydrate all style blocks prepended to chunks before React\n * tries to rehydrate its HTML stream. Since the master StyleSheet will now detect\n * the use of streamed style tags and will perform the rehydration earlier when needed\n * this function will not be needed anymore */\nfunction consolidateStreamedStyles() {\n  if (true) {\n    // eslint-disable-next-line no-console\n    console.warn('styled-components automatically does streaming SSR rehydration now.\\n' + 'Calling consolidateStreamedStyles manually is no longer necessary and a noop now.\\n' + '- Please remove the consolidateStreamedStyles call from your client.');\n  }\n}\n\n// \n/* eslint-disable no-bitwise */\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nvar charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nvar getAlphabeticChar = function getAlphabeticChar(code) {\n  return String.fromCharCode(code + (code > 25 ? 39 : 97));\n};\n\n/* input a number, usually a hash and convert it to base-52 */\nvar generateAlphabeticName = function generateAlphabeticName(code) {\n  var name = '';\n  var x = void 0;\n\n  /* get a char and divide by alphabet-length */\n  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return getAlphabeticChar(x % charsLength) + name;\n};\n\n// \n\nvar interleave = (function (strings, interpolations) {\n  var result = [strings[0]];\n\n  for (var i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n});\n\n// \nvar EMPTY_ARRAY = Object.freeze([]);\nvar EMPTY_OBJECT = Object.freeze({});\n\n// \n\nvar css = (function (styles) {\n  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    interpolations[_key - 1] = arguments[_key];\n  }\n\n  if (typeof styles === 'function' || isPlainObject(styles)) {\n    // $FlowFixMe\n    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));\n  }\n\n  // $FlowFixMe\n  return flatten(interleave(styles, interpolations));\n});\n\n// \n\n\nvar SC_ATTR = typeof process !== 'undefined' && process.env.SC_ATTR || 'data-styled-components';\nvar SC_STREAM_ATTR = 'data-styled-streamed';\nvar CONTEXT_KEY = '__styled-components-stylesheet__';\n\nvar IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nvar DISABLE_SPEEDY = \"development\" !== 'production';\n\n// \nvar SC_COMPONENT_ID = /^[^\\S\\n]*?\\/\\* sc-component-id:\\s*(\\S+)\\s+\\*\\//gm;\n\nvar extractComps = (function (maybeCSS) {\n  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone\n  var existingComponents = [];\n  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {\n    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });\n    return match;\n  });\n  return existingComponents.map(function (_ref, i) {\n    var componentId = _ref.componentId,\n        matchIndex = _ref.matchIndex;\n\n    var nextComp = existingComponents[i + 1];\n    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);\n    return { componentId: componentId, cssFromDOM: cssFromDOM };\n  });\n});\n\n// \n/* eslint-disable camelcase, no-undef */\n\nvar getNonce = (function () {\n  return  true ? __webpack_require__.nc : undefined;\n});\n\n// \n// Helper to call a given function, only once\nvar once = (function (cb) {\n  var called = false;\n\n  return function () {\n    if (!called) {\n      called = true;\n      cb();\n    }\n  };\n});\n\n// \n/* These are helpers for the StyleTags to keep track of the injected\n * rule names for each (component) ID that they're keeping track of.\n * They're crucial for detecting whether a name has already been\n * injected.\n * (This excludes rehydrated names) */\n\n/* adds a new ID:name pairing to a names dictionary */\nvar addNameForId = function addNameForId(names, id, name) {\n  if (name) {\n    // eslint-disable-next-line no-param-reassign\n    var namesForId = names[id] || (names[id] = Object.create(null));\n    namesForId[name] = true;\n  }\n};\n\n/* resets an ID entirely by overwriting it in the dictionary */\nvar resetIdNames = function resetIdNames(names, id) {\n  // eslint-disable-next-line no-param-reassign\n  names[id] = Object.create(null);\n};\n\n/* factory for a names dictionary checking the existance of an ID:name pairing */\nvar hasNameForId = function hasNameForId(names) {\n  return function (id, name) {\n    return names[id] !== undefined && names[id][name];\n  };\n};\n\n/* stringifies names for the html/element output */\nvar stringifyNames = function stringifyNames(names) {\n  var str = '';\n  // eslint-disable-next-line guard-for-in\n  for (var id in names) {\n    str += Object.keys(names[id]).join(' ') + ' ';\n  }\n  return str.trim();\n};\n\n/* clones the nested names dictionary */\nvar cloneNames = function cloneNames(names) {\n  var clone = Object.create(null);\n  // eslint-disable-next-line guard-for-in\n  for (var id in names) {\n    clone[id] = _extends({}, names[id]);\n  }\n  return clone;\n};\n\n// \n\n/* These are helpers that deal with the insertRule (aka speedy) API\n * They are used in the StyleTags and specifically the speedy tag\n */\n\n/* retrieve a sheet for a given style tag */\nvar sheetForTag = function sheetForTag(tag) {\n  // $FlowFixMe\n  if (tag.sheet) return tag.sheet;\n\n  /* Firefox quirk requires us to step through all stylesheets to find one owned by the given tag */\n  var size = document.styleSheets.length;\n  for (var i = 0; i < size; i += 1) {\n    var sheet = document.styleSheets[i];\n    // $FlowFixMe\n    if (sheet.ownerNode === tag) return sheet;\n  }\n\n  /* we should always be able to find a tag */\n  throw new StyledComponentsError(10);\n};\n\n/* insert a rule safely and return whether it was actually injected */\nvar safeInsertRule = function safeInsertRule(sheet, cssRule, index) {\n  /* abort early if cssRule string is falsy */\n  if (!cssRule) return false;\n\n  var maxIndex = sheet.cssRules.length;\n\n  try {\n    /* use insertRule and cap passed index with maxIndex (no of cssRules) */\n    sheet.insertRule(cssRule, index <= maxIndex ? index : maxIndex);\n  } catch (err) {\n    /* any error indicates an invalid rule */\n    return false;\n  }\n\n  return true;\n};\n\n/* deletes `size` rules starting from `removalIndex` */\nvar deleteRules = function deleteRules(sheet, removalIndex, size) {\n  var lowerBound = removalIndex - size;\n  for (var i = removalIndex; i > lowerBound; i -= 1) {\n    sheet.deleteRule(i);\n  }\n};\n\n// \n\n/* this marker separates component styles and is important for rehydration */\nvar makeTextMarker = function makeTextMarker(id) {\n  return '\\n/* sc-component-id: ' + id + ' */\\n';\n};\n\n/* add up all numbers in array up until and including the index */\nvar addUpUntilIndex = function addUpUntilIndex(sizes, index) {\n  var totalUpToIndex = 0;\n  for (var i = 0; i <= index; i += 1) {\n    totalUpToIndex += sizes[i];\n  }\n\n  return totalUpToIndex;\n};\n\n/* create a new style tag after lastEl */\nvar makeStyleTag = function makeStyleTag(target, tagEl, insertBefore) {\n  var el = document.createElement('style');\n  el.setAttribute(SC_ATTR, '');\n\n  var nonce = getNonce();\n  if (nonce) {\n    el.setAttribute('nonce', nonce);\n  }\n\n  /* Work around insertRule quirk in EdgeHTML */\n  el.appendChild(document.createTextNode(''));\n\n  if (target && !tagEl) {\n    /* Append to target when no previous element was passed */\n    target.appendChild(el);\n  } else {\n    if (!tagEl || !target || !tagEl.parentNode) {\n      throw new StyledComponentsError(6);\n    }\n\n    /* Insert new style tag after the previous one */\n    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);\n  }\n\n  return el;\n};\n\n/* takes a css factory function and outputs an html styled tag factory */\nvar wrapAsHtmlTag = function wrapAsHtmlTag(css, names) {\n  return function (additionalAttrs) {\n    var nonce = getNonce();\n    var attrs = [nonce && 'nonce=\"' + nonce + '\"', SC_ATTR + '=\"' + stringifyNames(names) + '\"', additionalAttrs];\n\n    var htmlAttr = attrs.filter(Boolean).join(' ');\n    return '<style ' + htmlAttr + '>' + css() + '</style>';\n  };\n};\n\n/* takes a css factory function and outputs an element factory */\nvar wrapAsElement = function wrapAsElement(css, names) {\n  return function () {\n    var _props;\n\n    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props);\n\n    var nonce = getNonce();\n    if (nonce) {\n      // $FlowFixMe\n      props.nonce = nonce;\n    }\n\n    // eslint-disable-next-line react/no-danger\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement('style', _extends({}, props, { dangerouslySetInnerHTML: { __html: css() } }));\n  };\n};\n\nvar getIdsFromMarkersFactory = function getIdsFromMarkersFactory(markers) {\n  return function () {\n    return Object.keys(markers);\n  };\n};\n\n/* speedy tags utilise insertRule */\nvar makeSpeedyTag = function makeSpeedyTag(el, getImportRuleTag) {\n  var names = Object.create(null);\n  var markers = Object.create(null);\n  var sizes = [];\n\n  var extractImport = getImportRuleTag !== undefined;\n  /* indicates whther getImportRuleTag was called */\n  var usedImportRuleTag = false;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    markers[id] = sizes.length;\n    sizes.push(0);\n    resetIdNames(names, id);\n\n    return markers[id];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    var sheet = sheetForTag(el);\n    var insertIndex = addUpUntilIndex(sizes, marker);\n\n    var injectedRules = 0;\n    var importRules = [];\n    var cssRulesSize = cssRules.length;\n\n    for (var i = 0; i < cssRulesSize; i += 1) {\n      var cssRule = cssRules[i];\n      var mayHaveImport = extractImport; /* @import rules are reordered to appear first */\n      if (mayHaveImport && cssRule.indexOf('@import') !== -1) {\n        importRules.push(cssRule);\n      } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {\n        mayHaveImport = false;\n        injectedRules += 1;\n      }\n    }\n\n    if (extractImport && importRules.length > 0) {\n      usedImportRuleTag = true;\n      // $FlowFixMe\n      getImportRuleTag().insertRules(id + '-import', importRules);\n    }\n\n    sizes[marker] += injectedRules; /* add up no of injected rules */\n    addNameForId(names, id, name);\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n\n    var size = sizes[marker];\n    var sheet = sheetForTag(el);\n    var removalIndex = addUpUntilIndex(sizes, marker);\n    deleteRules(sheet, removalIndex, size);\n    sizes[marker] = 0;\n    resetIdNames(names, id);\n\n    if (extractImport && usedImportRuleTag) {\n      // $FlowFixMe\n      getImportRuleTag().removeRules(id + '-import');\n    }\n  };\n\n  var css = function css() {\n    var _sheetForTag = sheetForTag(el),\n        cssRules = _sheetForTag.cssRules;\n\n    var str = '';\n\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      str += makeTextMarker(id);\n      var marker = markers[id];\n      var end = addUpUntilIndex(sizes, marker);\n      var size = sizes[marker];\n      for (var i = end - size; i < end; i += 1) {\n        var rule = cssRules[i];\n        if (rule !== undefined) {\n          str += rule.cssText;\n        }\n      }\n    }\n\n    return str;\n  };\n\n  return {\n    styleTag: el,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    css: css,\n    toHTML: wrapAsHtmlTag(css, names),\n    toElement: wrapAsElement(css, names),\n    clone: function clone() {\n      throw new StyledComponentsError(5);\n    }\n  };\n};\n\nvar makeTextNode = function makeTextNode(id) {\n  return document.createTextNode(makeTextMarker(id));\n};\n\nvar makeBrowserTag = function makeBrowserTag(el, getImportRuleTag) {\n  var names = Object.create(null);\n  var markers = Object.create(null);\n\n  var extractImport = getImportRuleTag !== undefined;\n\n  /* indicates whther getImportRuleTag was called */\n  var usedImportRuleTag = false;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    markers[id] = makeTextNode(id);\n    el.appendChild(markers[id]);\n    names[id] = Object.create(null);\n\n    return markers[id];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    var importRules = [];\n    var cssRulesSize = cssRules.length;\n\n    for (var i = 0; i < cssRulesSize; i += 1) {\n      var rule = cssRules[i];\n      var mayHaveImport = extractImport;\n      if (mayHaveImport && rule.indexOf('@import') !== -1) {\n        importRules.push(rule);\n      } else {\n        mayHaveImport = false;\n        var separator = i === cssRulesSize - 1 ? '' : ' ';\n        marker.appendData('' + rule + separator);\n      }\n    }\n\n    addNameForId(names, id, name);\n\n    if (extractImport && importRules.length > 0) {\n      usedImportRuleTag = true;\n      // $FlowFixMe\n      getImportRuleTag().insertRules(id + '-import', importRules);\n    }\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n\n    /* create new empty text node and replace the current one */\n    var newMarker = makeTextNode(id);\n    el.replaceChild(newMarker, marker);\n    markers[id] = newMarker;\n    resetIdNames(names, id);\n\n    if (extractImport && usedImportRuleTag) {\n      // $FlowFixMe\n      getImportRuleTag().removeRules(id + '-import');\n    }\n  };\n\n  var css = function css() {\n    var str = '';\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      str += markers[id].data;\n    }\n    return str;\n  };\n\n  return {\n    clone: function clone() {\n      throw new StyledComponentsError(5);\n    },\n\n    css: css,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    styleTag: el,\n    toElement: wrapAsElement(css, names),\n    toHTML: wrapAsHtmlTag(css, names)\n  };\n};\n\nvar makeServerTagInternal = function makeServerTagInternal(namesArg, markersArg) {\n  var names = namesArg === undefined ? Object.create(null) : namesArg;\n  var markers = markersArg === undefined ? Object.create(null) : markersArg;\n\n  var insertMarker = function insertMarker(id) {\n    var prev = markers[id];\n    if (prev !== undefined) {\n      return prev;\n    }\n\n    return markers[id] = [''];\n  };\n\n  var insertRules = function insertRules(id, cssRules, name) {\n    var marker = insertMarker(id);\n    marker[0] += cssRules.join(' ');\n    addNameForId(names, id, name);\n  };\n\n  var removeRules = function removeRules(id) {\n    var marker = markers[id];\n    if (marker === undefined) return;\n    marker[0] = '';\n    resetIdNames(names, id);\n  };\n\n  var css = function css() {\n    var str = '';\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      var cssForId = markers[id][0];\n      if (cssForId) {\n        str += makeTextMarker(id) + cssForId;\n      }\n    }\n    return str;\n  };\n\n  var clone = function clone() {\n    var namesClone = cloneNames(names);\n    var markersClone = Object.create(null);\n\n    // eslint-disable-next-line guard-for-in\n    for (var id in markers) {\n      markersClone[id] = [markers[id][0]];\n    }\n\n    return makeServerTagInternal(namesClone, markersClone);\n  };\n\n  var tag = {\n    clone: clone,\n    css: css,\n    getIds: getIdsFromMarkersFactory(markers),\n    hasNameForId: hasNameForId(names),\n    insertMarker: insertMarker,\n    insertRules: insertRules,\n    removeRules: removeRules,\n    styleTag: null,\n    toElement: wrapAsElement(css, names),\n    toHTML: wrapAsHtmlTag(css, names)\n  };\n\n  return tag;\n};\n\nvar makeServerTag = function makeServerTag() {\n  return makeServerTagInternal();\n};\n\nvar makeTag = function makeTag(target, tagEl, forceServer, insertBefore, getImportRuleTag) {\n  if (IS_BROWSER && !forceServer) {\n    var el = makeStyleTag(target, tagEl, insertBefore);\n\n    if (DISABLE_SPEEDY) {\n      return makeBrowserTag(el, getImportRuleTag);\n    } else {\n      return makeSpeedyTag(el, getImportRuleTag);\n    }\n  }\n\n  return makeServerTag();\n};\n\n/* wraps a given tag so that rehydration is performed once when necessary */\nvar makeRehydrationTag = function makeRehydrationTag(tag, els, extracted, immediateRehydration) {\n  /* rehydration function that adds all rules to the new tag */\n  var rehydrate = once(function () {\n    /* add all extracted components to the new tag */\n    for (var i = 0, len = extracted.length; i < len; i += 1) {\n      var _extracted$i = extracted[i],\n          componentId = _extracted$i.componentId,\n          cssFromDOM = _extracted$i.cssFromDOM;\n\n      var cssRules = splitByRules(cssFromDOM);\n      tag.insertRules(componentId, cssRules);\n    }\n\n    /* remove old HTMLStyleElements, since they have been rehydrated */\n    for (var _i = 0, _len = els.length; _i < _len; _i += 1) {\n      var el = els[_i];\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    }\n  });\n\n  if (immediateRehydration) rehydrate();\n\n  return _extends({}, tag, {\n    /* add rehydration hook to insertion methods */\n    insertMarker: function insertMarker(id) {\n      rehydrate();\n      return tag.insertMarker(id);\n    },\n    insertRules: function insertRules(id, cssRules, name) {\n      rehydrate();\n      return tag.insertRules(id, cssRules, name);\n    }\n  });\n};\n\n// \n\nvar SPLIT_REGEX = /\\s+/;\n\n/* determine the maximum number of components before tags are sharded */\nvar MAX_SIZE = void 0;\nif (IS_BROWSER) {\n  /* in speedy mode we can keep a lot more rules in a sheet before a slowdown can be expected */\n  MAX_SIZE = DISABLE_SPEEDY ? 40 : 1000;\n} else {\n  /* for servers we do not need to shard at all */\n  MAX_SIZE = -1;\n}\n\nvar sheetRunningId = 0;\nvar master = void 0;\n\nvar StyleSheet = function () {\n  /* a map from ids to tags */\n  /* deferred rules for a given id */\n  /* this is used for not reinjecting rules via hasNameForId() */\n  /* when rules for an id are removed using remove() we have to ignore rehydratedNames for it */\n  /* a list of tags belonging to this StyleSheet */\n  /* a tag for import rules */\n  /* current capacity until a new tag must be created */\n  /* children (aka clones) of this StyleSheet inheriting all and future injections */\n\n  function StyleSheet() {\n    var _this = this;\n\n    var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IS_BROWSER ? document.head : null;\n    var forceServer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    classCallCheck(this, StyleSheet);\n\n    this.getImportRuleTag = function () {\n      var importRuleTag = _this.importRuleTag;\n\n      if (importRuleTag !== undefined) {\n        return importRuleTag;\n      }\n\n      var firstTag = _this.tags[0];\n      var insertBefore = true;\n\n      return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);\n    };\n\n    sheetRunningId += 1;\n    this.id = sheetRunningId;\n    this.sealed = false;\n    this.forceServer = forceServer;\n    this.target = forceServer ? null : target;\n    this.tagMap = {};\n    this.deferred = {};\n    this.rehydratedNames = {};\n    this.ignoreRehydratedNames = {};\n    this.tags = [];\n    this.capacity = 1;\n    this.clones = [];\n  }\n\n  /* rehydrate all SSR'd style tags */\n\n\n  StyleSheet.prototype.rehydrate = function rehydrate() {\n    if (!IS_BROWSER || this.forceServer) {\n      return this;\n    }\n\n    var els = [];\n    var extracted = [];\n    var isStreamed = false;\n\n    /* retrieve all of our SSR style elements from the DOM */\n    var nodes = document.querySelectorAll('style[' + SC_ATTR + ']');\n    var nodesSize = nodes.length;\n\n    /* abort rehydration if no previous style tags were found */\n    if (nodesSize === 0) {\n      return this;\n    }\n\n    for (var i = 0; i < nodesSize; i += 1) {\n      // $FlowFixMe: We can trust that all elements in this query are style elements\n      var el = nodes[i];\n\n      /* check if style tag is a streamed tag */\n      if (!isStreamed) isStreamed = !!el.getAttribute(SC_STREAM_ATTR);\n\n      /* retrieve all component names */\n      var elNames = (el.getAttribute(SC_ATTR) || '').trim().split(SPLIT_REGEX);\n      var elNamesSize = elNames.length;\n      for (var j = 0; j < elNamesSize; j += 1) {\n        var name = elNames[j];\n        /* add rehydrated name to sheet to avoid readding styles */\n        this.rehydratedNames[name] = true;\n      }\n\n      /* extract all components and their CSS */\n      extracted.push.apply(extracted, extractComps(el.textContent));\n\n      /* store original HTMLStyleElement */\n      els.push(el);\n    }\n\n    /* abort rehydration if nothing was extracted */\n    var extractedSize = extracted.length;\n    if (extractedSize === 0) {\n      return this;\n    }\n\n    /* create a tag to be used for rehydration */\n    var tag = this.makeTag(null);\n    var rehydrationTag = makeRehydrationTag(tag, els, extracted, isStreamed);\n\n    /* reset capacity and adjust MAX_SIZE by the initial size of the rehydration */\n    this.capacity = Math.max(1, MAX_SIZE - extractedSize);\n    this.tags.push(rehydrationTag);\n\n    /* retrieve all component ids */\n    for (var _j = 0; _j < extractedSize; _j += 1) {\n      this.tagMap[extracted[_j].componentId] = rehydrationTag;\n    }\n\n    return this;\n  };\n\n  /* retrieve a \"master\" instance of StyleSheet which is typically used when no other is available\n   * The master StyleSheet is targeted by injectGlobal, keyframes, and components outside of any\n    * StyleSheetManager's context */\n\n\n  /* reset the internal \"master\" instance */\n  StyleSheet.reset = function reset() {\n    var forceServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    master = new StyleSheet(undefined, forceServer).rehydrate();\n  };\n\n  /* adds \"children\" to the StyleSheet that inherit all of the parents' rules\n   * while their own rules do not affect the parent */\n\n\n  StyleSheet.prototype.clone = function clone() {\n    var sheet = new StyleSheet(this.target, this.forceServer);\n    /* add to clone array */\n    this.clones.push(sheet);\n\n    /* clone all tags */\n    sheet.tags = this.tags.map(function (tag) {\n      var ids = tag.getIds();\n      var newTag = tag.clone();\n\n      /* reconstruct tagMap */\n      for (var i = 0; i < ids.length; i += 1) {\n        sheet.tagMap[ids[i]] = newTag;\n      }\n\n      return newTag;\n    });\n\n    /* clone other maps */\n    sheet.rehydratedNames = _extends({}, this.rehydratedNames);\n    sheet.deferred = _extends({}, this.deferred);\n\n    return sheet;\n  };\n\n  /* force StyleSheet to create a new tag on the next injection */\n\n\n  StyleSheet.prototype.sealAllTags = function sealAllTags() {\n    this.capacity = 1;\n    this.sealed = true;\n  };\n\n  StyleSheet.prototype.makeTag = function makeTag$$1(tag) {\n    var lastEl = tag ? tag.styleTag : null;\n    var insertBefore = false;\n\n    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);\n  };\n\n  /* get a tag for a given componentId, assign the componentId to one, or shard */\n  StyleSheet.prototype.getTagForId = function getTagForId(id) {\n    /* simply return a tag, when the componentId was already assigned one */\n    var prev = this.tagMap[id];\n    if (prev !== undefined && !this.sealed) {\n      return prev;\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    /* shard (create a new tag) if the tag is exhausted (See MAX_SIZE) */\n    this.capacity -= 1;\n    if (this.capacity === 0) {\n      this.capacity = MAX_SIZE;\n      this.sealed = false;\n      tag = this.makeTag(tag);\n      this.tags.push(tag);\n    }\n\n    return this.tagMap[id] = tag;\n  };\n\n  /* mainly for injectGlobal to check for its id */\n\n\n  StyleSheet.prototype.hasId = function hasId(id) {\n    return this.tagMap[id] !== undefined;\n  };\n\n  /* caching layer checking id+name to already have a corresponding tag and injected rules */\n\n\n  StyleSheet.prototype.hasNameForId = function hasNameForId(id, name) {\n    /* exception for rehydrated names which are checked separately */\n    if (this.ignoreRehydratedNames[id] === undefined && this.rehydratedNames[name]) {\n      return true;\n    }\n\n    var tag = this.tagMap[id];\n    return tag !== undefined && tag.hasNameForId(id, name);\n  };\n\n  /* registers a componentId and registers it on its tag */\n\n\n  StyleSheet.prototype.deferredInject = function deferredInject(id, cssRules) {\n    /* don't inject when the id is already registered */\n    if (this.tagMap[id] !== undefined) return;\n\n    var clones = this.clones;\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].deferredInject(id, cssRules);\n    }\n\n    this.getTagForId(id).insertMarker(id);\n    this.deferred[id] = cssRules;\n  };\n\n  /* injects rules for a given id with a name that will need to be cached */\n\n\n  StyleSheet.prototype.inject = function inject(id, cssRules, name) {\n    var clones = this.clones;\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].inject(id, cssRules, name);\n    }\n\n    var tag = this.getTagForId(id);\n\n    /* add deferred rules for component */\n    if (this.deferred[id] !== undefined) {\n      // Combine passed cssRules with previously deferred CSS rules\n      // NOTE: We cannot mutate the deferred array itself as all clones\n      // do the same (see clones[i].inject)\n      var rules = this.deferred[id].concat(cssRules);\n      tag.insertRules(id, rules, name);\n      this.deferred[id] = undefined;\n    } else {\n      tag.insertRules(id, cssRules, name);\n    }\n  };\n\n  /* removes all rules for a given id, which doesn't remove its marker but resets it */\n\n\n  StyleSheet.prototype.remove = function remove(id) {\n    var tag = this.tagMap[id];\n    if (tag === undefined) return;\n\n    var clones = this.clones;\n\n    for (var i = 0; i < clones.length; i += 1) {\n      clones[i].remove(id);\n    }\n\n    /* remove all rules from the tag */\n    tag.removeRules(id);\n    /* ignore possible rehydrated names */\n    this.ignoreRehydratedNames[id] = true;\n    /* delete possible deferred rules */\n    this.deferred[id] = undefined;\n  };\n\n  StyleSheet.prototype.toHTML = function toHTML() {\n    return this.tags.map(function (tag) {\n      return tag.toHTML();\n    }).join('');\n  };\n\n  StyleSheet.prototype.toReactElements = function toReactElements() {\n    var id = this.id;\n\n\n    return this.tags.map(function (tag, i) {\n      var key = 'sc-' + id + '-' + i;\n      return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"cloneElement\"])(tag.toElement(), { key: key });\n    });\n  };\n\n  createClass(StyleSheet, null, [{\n    key: 'master',\n    get: function get$$1() {\n      return master || (master = new StyleSheet().rehydrate());\n    }\n\n    /* NOTE: This is just for backwards-compatibility with jest-styled-components */\n\n  }, {\n    key: 'instance',\n    get: function get$$1() {\n      return StyleSheet.master;\n    }\n  }]);\n  return StyleSheet;\n}();\n\nvar _StyleSheetManager$ch;\n\nvar StyleSheetManager = function (_Component) {\n  inherits(StyleSheetManager, _Component);\n\n  function StyleSheetManager() {\n    classCallCheck(this, StyleSheetManager);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  StyleSheetManager.prototype.getChildContext = function getChildContext() {\n    var _ref;\n\n    return _ref = {}, _ref[CONTEXT_KEY] = this.sheetInstance, _ref;\n  };\n\n  StyleSheetManager.prototype.componentWillMount = function componentWillMount() {\n    if (this.props.sheet) {\n      this.sheetInstance = this.props.sheet;\n    } else if (this.props.target) {\n      this.sheetInstance = new StyleSheet(this.props.target);\n    } else {\n      throw new StyledComponentsError(4);\n    }\n  };\n\n  StyleSheetManager.prototype.render = function render() {\n    /* eslint-disable react/prop-types */\n    // Flow v0.43.1 will report an error accessing the `children` property,\n    // but v0.47.0 will not. It is necessary to use a type cast instead of\n    // a \"fixme\" comment to satisfy both Flow versions.\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.only(this.props.children);\n  };\n\n  return StyleSheetManager;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nStyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[CONTEXT_KEY] = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(StyleSheet), prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(ServerStyleSheet)]).isRequired, _StyleSheetManager$ch);\n true ? StyleSheetManager.propTypes = {\n  sheet: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(StyleSheet), prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(ServerStyleSheet)]),\n  target: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.shape({\n    appendChild: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func.isRequired\n  })\n} : undefined;\n\n// \n\nvar ServerStyleSheet = function () {\n  function ServerStyleSheet() {\n    classCallCheck(this, ServerStyleSheet);\n\n    /* The master sheet might be reset, so keep a reference here */\n    this.masterSheet = StyleSheet.master;\n    this.instance = this.masterSheet.clone();\n    this.closed = false;\n  }\n\n  ServerStyleSheet.prototype.complete = function complete() {\n    if (!this.closed) {\n      /* Remove closed StyleSheets from the master sheet */\n      var index = this.masterSheet.clones.indexOf(this.instance);\n      this.masterSheet.clones.splice(index, 1);\n      this.closed = true;\n    }\n  };\n\n  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {\n    if (this.closed) {\n      throw new StyledComponentsError(2);\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(\n      StyleSheetManager,\n      { sheet: this.instance },\n      children\n    );\n  };\n\n  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {\n    this.complete();\n    return this.instance.toHTML();\n  };\n\n  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {\n    this.complete();\n    return this.instance.toReactElements();\n  };\n\n  ServerStyleSheet.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {\n    var _this = this;\n\n    {\n      throw new StyledComponentsError(3);\n    }\n\n    /* the tag index keeps track of which tags have already been emitted */\n    var instance = this.instance;\n\n    var instanceTagIndex = 0;\n\n    var streamAttr = SC_STREAM_ATTR + '=\"true\"';\n\n    var transformer = new stream.Transform({\n      transform: function appendStyleChunks(chunk, /* encoding */_, callback) {\n        var tags = instance.tags;\n\n        var html = '';\n\n        /* retrieve html for each new style tag */\n        for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {\n          var tag = tags[instanceTagIndex];\n          html += tag.toHTML(streamAttr);\n        }\n\n        /* force our StyleSheets to emit entirely new tags */\n        instance.sealAllTags();\n\n        /* prepend style html to chunk */\n        this.push(html + chunk);\n        callback();\n      }\n    });\n\n    readableStream.on('end', function () {\n      return _this.complete();\n    });\n    readableStream.on('error', function (err) {\n      _this.complete();\n\n      // forward the error to the transform stream\n      transformer.emit('error', err);\n    });\n\n    return readableStream.pipe(transformer);\n  };\n\n  return ServerStyleSheet;\n}();\n\n// \n\nvar LIMIT = 200;\n\nvar createWarnTooManyClasses = (function (displayName) {\n  var generatedClasses = {};\n  var warningSeen = false;\n\n  return function (className) {\n    if (!warningSeen) {\n      generatedClasses[className] = true;\n      if (Object.keys(generatedClasses).length >= LIMIT) {\n        // Unable to find latestRule in test environment.\n        /* eslint-disable no-console, prefer-template */\n        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \\n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\\n' + 'Example:\\n' + '  const Component = styled.div.attrs({\\n' + '    style: ({ background }) => ({\\n' + '      background,\\n' + '    }),\\n' + '  })`width: 100%;`\\n\\n' + '  <Component />');\n        warningSeen = true;\n        generatedClasses = {};\n      }\n    }\n  };\n});\n\n// \n\nvar determineTheme = (function (props, fallbackTheme, defaultProps) {\n  // Props should take precedence over ThemeProvider, which should take precedence over\n  // defaultProps, but React automatically puts defaultProps on props.\n\n  /* eslint-disable react/prop-types */\n  var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;\n  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;\n  /* eslint-enable */\n\n  return theme;\n});\n\n// \nvar escapeRegex = /[[\\].#*$><+~=|^:(),\"'`-]+/g;\nvar dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nfunction escape(str) {\n  return str\n  // Replace all possible CSS selectors\n  .replace(escapeRegex, '-')\n\n  // Remove extraneous hyphens at the start and end\n  .replace(dashesAtEnds, '');\n}\n\n// \n\nfunction getComponentName(target) {\n  return target.displayName || target.name || 'Component';\n}\n\n// \n\nfunction isTag(target) /* : %checks */{\n  return typeof target === 'string';\n}\n\n// \n\nfunction generateDisplayName(target) {\n  return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';\n}\n\n// \n/* eslint-disable max-len */\n/**\n * Trying to avoid the unknown-prop errors on styled components by filtering by\n * React's attribute whitelist.\n *\n * To regenerate this regex:\n *\n * 1. `npm i -g regexgen` (https://github.com/devongovett/regexgen)\n * 2. Run `regexgen` with the list of space-separated words below as input\n * 3. Surround the emitted regex with this: `/^(GENERATED_REGEX)$/` -- this will ensure a full string match\n *    and no false positives from partials\n * */\n/*\nchildren dangerouslySetInnerHTML key ref autoFocus defaultValue valueLink defaultChecked checkedLink innerHTML suppressContentEditableWarning onFocusIn onFocusOut className onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown onKeyPress onKeyUp onFocus onBlur onChange onInput onInvalid onSubmit onReset onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onAnimationStart onAnimationEnd onAnimationIteration onTransitionEnd onCopyCapture onCutCapture onPasteCapture onCompositionEndCapture onCompositionStartCapture onCompositionUpdateCapture onKeyDownCapture onKeyPressCapture onKeyUpCapture onFocusCapture onBlurCapture onChangeCapture onInputCapture onSubmitCapture onResetCapture onClickCapture onContextMenuCapture onDoubleClickCapture onDragCapture onDragEndCapture onDragEnterCapture onDragExitCapture onDragLeaveCapture onDragOverCapture onDragStartCapture onDropCapture onMouseDownCapture onMouseEnterCapture onMouseLeaveCapture onMouseMoveCapture onMouseOutCapture onMouseOverCapture onMouseUpCapture onSelectCapture onTouchCancelCapture onTouchEndCapture onTouchMoveCapture onTouchStartCapture onScrollCapture onWheelCapture onAbortCapture onCanPlayCapture onCanPlayThroughCapture onDurationChangeCapture onEmptiedCapture onEncryptedCapture onEndedCapture onErrorCapture onLoadedDataCapture onLoadedMetadataCapture onLoadStartCapture onPauseCapture onPlayCapture onPlayingCapture onProgressCapture onRateChangeCapture onSeekedCapture onSeekingCapture onStalledCapture onSuspendCapture onTimeUpdateCapture onVolumeChangeCapture onWaitingCapture onLoadCapture onAnimationStartCapture onAnimationEndCapture onAnimationIterationCapture onTransitionEndCapture accept acceptCharset accessKey action allowFullScreen allowTransparency alt as async autoComplete autoPlay capture cellPadding cellSpacing charSet challenge checked cite classID className cols colSpan content contentEditable contextMenu controlsList controls coords crossOrigin data dateTime default defer dir disabled download draggable encType form formAction formEncType formMethod formNoValidate formTarget frameBorder headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media mediaGroup method min minLength multiple muted name nonce noValidate open optimum pattern placeholder playsInline poster preload profile radioGroup readOnly referrerPolicy rel required reversed role rows rowSpan sandbox scope scoped scrolling seamless selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step style summary tabIndex target title type useMap value width wmode wrap about datatype inlist prefix property resource typeof vocab autoCapitalize autoCorrect autoSave color itemProp itemScope itemType itemID itemRef results security unselectable accentHeight accumulate additive alignmentBaseline allowReorder alphabetic amplitude arabicForm ascent attributeName attributeType autoReverse azimuth baseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight clip clipPath clipRule clipPathUnits colorInterpolation colorInterpolationFilters colorProfile colorRendering contentScriptType contentStyleType cursor cx cy d decelerate descent diffuseConstant direction display divisor dominantBaseline dur dx dy edgeMode elevation enableBackground end exponent externalResourcesRequired fill fillOpacity fillRule filter filterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy g1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef gradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic imageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor limitingConeAngle local markerEnd markerMid markerStart markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical mode numOctaves offset opacity operator order orient orientation origin overflow overlinePosition overlineThickness paintOrder panose1 pathLength patternContentUnits patternTransform patternUnits pointerEvents points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY renderingIntent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shapeRendering slope spacing specularConstant specularExponent speed spreadMethod startOffset stdDeviation stemh stemv stitchTiles stopColor stopOpacity strikethroughPosition strikethroughThickness string stroke strokeDasharray strokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity strokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor textDecoration textRendering textLength to transform u1 u2 underlinePosition underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic vHanging vIdeographic vMathematical values vectorEffect version vertAdvY vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing writingMode x xHeight x1 x2 xChannelSelector xlinkActuate xlinkArcrole xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlns xmlnsXlink xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan onPointerDown onPointerMove onPointerUp onPointerCancel onGotPointerCapture onLostPointerCapture onPointerEnter onPointerLeave onPointerOver onPointerOut class for autofocus\n*/\n/* eslint-enable max-len */\n\nvar ATTRIBUTE_REGEX = /^((?:s(?:uppressContentEditableWarn|croll|pac)|(?:shape|image|text)Render|(?:letter|word)Spac|vHang|hang)ing|(?:on(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:Animation|Touch|Load|Drag)Start|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|Lo(?:stPointer|ad)|TimeUpdate|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|GotPointer|MouseDown|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|KeyPress|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|P(?:rogress|laying)|DragEnd|Key(?:Down|Up)|(?:MouseU|Dro)p|(?:Wait|Seek)ing|Scroll|Focus|Paste|Abort|Drag|Play|Blur)Captur|alignmentBaselin|(?:limitingConeAng|xlink(?:(?:Arcr|R)o|Tit)|s(?:urfaceSca|ty|ca)|unselectab|baseProfi|fontSty|(?:focus|dragg)ab|multip|profi|tit)l|d(?:ominantBaselin|efaultValu)|onPointerLeav|a(?:uto(?:Capitaliz|Revers|Sav)|dditiv)|(?:(?:formNoValid|xlinkActu|noValid|accumul|rot)a|autoComple|decelera)t|(?:(?:attribute|item)T|datat)yp|onPointerMov|(?:attribute|glyph)Nam|playsInlin|(?:writing|input|edge)Mod|(?:formE|e)ncTyp|(?:amplitu|mo)d|(?:xlinkTy|itemSco|keyTy|slo)p|(?:xmlSpa|non)c|fillRul|(?:dateTi|na)m|r(?:esourc|ol)|xmlBas|wmod)e|(?:glyphOrientationHorizont|loc)al|(?:externalResourcesRequir|select|revers|mut)ed|c(?:o(?:lorInterpolationFilter|ord)s|o(?:lor(?:Interpolation)?|nt(?:rols|ent))|(?:ontentS(?:cript|tyle)Typ|o(?:ntentEditab|lorProfi)l|l(?:assNam|ipRul)|a(?:lcMod|ptur)|it)e|olorRendering|l(?:ipPathUnits|assID)|(?:ontrolsLis|apHeigh)t|h(?:eckedLink|a(?:llenge|rSet)|ildren|ecked)|ell(?:Spac|Padd)ing|o(?:ntextMenu|ls)|(?:rossOrigi|olSpa)n|l(?:ip(?:Path)?|ass)|ursor|[xy])|glyphOrientationVertical|d(?:angerouslySetInnerHTML|efaultChecked|ownload|isabled|isplay|[xy])|(?:s(?:trikethroughThickn|eaml)es|(?:und|ov)erlineThicknes|r(?:equiredExtension|adiu)|(?:requiredFeatur|tableValu|stitchTil|numOctav|filterR)e|key(?:(?:Splin|Tim)e|Param)|auto[Ff]ocu|header|bia)s|(?:(?:st(?:rikethroughPosi|dDevia)|(?:und|ov)erlinePosi|(?:textDecor|elev)a|orienta)tio|(?:strokeLinejo|orig)i|on(?:PointerDow|FocusI)|formActio|zoomAndPa|directio|(?:vers|act)io|rowSpa|begi|ico)n|o(?:n(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:Animation|Touch|Load|Drag)Start|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|TimeUpdate|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|MouseDown|P(?:rogress|laying)|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|KeyPress|DragEnd|Key(?:Down|Up)|(?:Wait|Seek)ing|(?:MouseU|Dro)p|Scroll|Paste|Focus|Abort|Drag|Play|Load|Blur)|rient)|p(?:reserveA(?:spectRatio|lpha)|ointsAt[X-Z]|anose1)|(?:patternContent|ma(?:sk(?:Content)?|rker)|primitive|gradient|pattern|filter)Units|(?:(?:allowTranspar|baseFrequ)enc|re(?:ferrerPolic|adOnl)|(?:(?:st(?:roke|op)O|floodO|fillO|o)pac|integr|secur)it|visibilit|fontFamil|accessKe|propert|summar)y|(?:gradientT|patternT|t)ransform|(?:[xy]ChannelSelect|lightingCol|textAnch|floodCol|stopCol|operat|htmlF)or|(?:strokeMiterlimi|(?:specularConsta|repeatCou|fontVaria)n|(?:(?:specularE|e)xpon|renderingInt|asc)en|d(?:iffuseConsta|esce)n|(?:fontSizeAdju|lengthAdju|manife)s|baselineShif|onPointerOu|vectorEffec|(?:(?:mar(?:ker|gin)|x)H|accentH|fontW)eigh|markerStar|a(?:utoCorrec|bou)|onFocusOu|intercep|restar|forma|inlis|heigh|lis)t|(?:(?:st(?:rokeDasho|artO)|o)ffs|acceptChars|formTarg|viewTarg|srcS)et|k(?:ernel(?:UnitLength|Matrix)|[1-4])|(?:(?:enableBackgrou|markerE)n|s(?:p(?:readMetho|ee)|ee)|formMetho|(?:markerM|onInval)i|preloa|metho|kin)d|strokeDasharray|(?:onPointerCanc|lab)el|(?:allowFullScre|hidd)en|systemLanguage|(?:(?:o(?:nPointer(?:Ent|Ov)|rd)|allowReord|placehold|frameBord|paintOrd|post)e|repeatDu|d(?:efe|u))r|v(?:Mathematical|ert(?:Origin[XY]|AdvY)|alues|ocab)|(?:pointerEve|keyPoi)nts|(?:strokeLineca|onPointerU|itemPro|useMa|wra|loo)p|h(?:oriz(?:Origin|Adv)X|ttpEquiv)|(?:vI|i)deographic|unicodeRange|mathematical|vAlphabetic|u(?:nicodeBidi|[12])|(?:fontStretc|hig)h|(?:(?:mar(?:ker|gin)W|strokeW)id|azimu)th|(?:xmlnsXl|valueL)ink|mediaGroup|spellCheck|(?:text|m(?:in|ax))Length|(?:unitsPerE|optimu|fro)m|r(?:adioGroup|e(?:sults|f[XY]|l)|ows|[xy])|a(?:rabicForm|l(?:phabetic|t)|sync)|pathLength|innerHTML|xlinkShow|(?:xlinkHr|glyphR)ef|(?:tabInde|(?:sand|b)bo|viewBo)x|(?:(?:href|xml|src)La|kerni)ng|autoPlay|o(?:verflow|pen)|f(?:o(?:ntSize|rm?)|il(?:ter|l))|r(?:e(?:quired|sult|f))?|divisor|p(?:attern|oints)|unicode|d(?:efault|ata|ir)?|i(?:temRef|n2|s)|t(?:arget[XY]|o)|srcDoc|s(?:coped|te(?:m[hv]|p)|pan)|(?:width|size)s|prefix|typeof|itemID|s(?:t(?:roke|art)|hape|cope|rc)|t(?:arget|ype)|(?:stri|la)ng|a(?:ccept|s)|m(?:edia|a(?:sk|x)|in)|x(?:mlns)?|width|value|size|href|k(?:ey)?|end|low|by|i[dn]|y[12]|g[12]|x[12]|f[xy]|[yz])$/;\n\n/* From DOMProperty */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nvar ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nvar isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(x|data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n\nvar validAttr = (function (name) {\n  return ATTRIBUTE_REGEX.test(name) || isCustomAttribute(name.toLowerCase());\n});\n\n// \n\nfunction hasInInheritanceChain(child, parent) {\n  var target = child;\n\n  while (target) {\n    target = Object.getPrototypeOf(target);\n\n    if (target && target === parent) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// \n/**\n * Creates a broadcast that can be listened to, i.e. simple event emitter\n *\n * @see https://github.com/ReactTraining/react-broadcast\n */\n\nvar createBroadcast = function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 0;\n  var state = initialState;\n\n  function publish(nextState) {\n    state = nextState;\n\n    // eslint-disable-next-line guard-for-in, no-restricted-syntax\n    for (var key in listeners) {\n      var listener = listeners[key];\n      if (listener === undefined) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      listener(state);\n    }\n  }\n\n  function subscribe(listener) {\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    listener(state);\n    return currentId;\n  }\n\n  function unsubscribe(unsubID) {\n    listeners[unsubID] = undefined;\n  }\n\n  return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };\n};\n\nvar _contextShape, _ThemeProvider$contex;\n\n// NOTE: DO NOT CHANGE, changing this is a semver major change!\nvar CHANNEL = '__styled-components__';\nvar CHANNEL_NEXT = CHANNEL + 'next__';\n\nvar CONTEXT_CHANNEL_SHAPE = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.shape({\n  getTheme: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n  subscribe: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func,\n  unsubscribe: prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func\n});\n\nvar contextShape = (_contextShape = {}, _contextShape[CHANNEL] = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.func, _contextShape[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _contextShape);\n\nvar warnChannelDeprecated = void 0;\nif (true) {\n  warnChannelDeprecated = once(function () {\n    // eslint-disable-next-line no-console\n    console.warn('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');\n  });\n}\n\nvar isFunction = function isFunction(test) {\n  return typeof test === 'function';\n};\n\n/**\n * Provide a theme to an entire react component tree via context and event listeners (have to do\n * both context and event emitter as pure components block context updates)\n */\n\nvar ThemeProvider = function (_Component) {\n  inherits(ThemeProvider, _Component);\n\n  function ThemeProvider() {\n    classCallCheck(this, ThemeProvider);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this));\n\n    _this.unsubscribeToOuterId = -1;\n\n    _this.getTheme = _this.getTheme.bind(_this);\n    return _this;\n  }\n\n  ThemeProvider.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme\n    // with the outer theme\n    var outerContext = this.context[CHANNEL_NEXT];\n    if (outerContext !== undefined) {\n      this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {\n        _this2.outerTheme = theme;\n\n        if (_this2.broadcast !== undefined) {\n          _this2.publish(_this2.props.theme);\n        }\n      });\n    }\n\n    this.broadcast = createBroadcast(this.getTheme());\n  };\n\n  ThemeProvider.prototype.getChildContext = function getChildContext() {\n    var _this3 = this,\n        _babelHelpers$extends;\n\n    return _extends({}, this.context, (_babelHelpers$extends = {}, _babelHelpers$extends[CHANNEL_NEXT] = {\n      getTheme: this.getTheme,\n      subscribe: this.broadcast.subscribe,\n      unsubscribe: this.broadcast.unsubscribe\n    }, _babelHelpers$extends[CHANNEL] = function (subscriber) {\n      if (true) {\n        warnChannelDeprecated();\n      }\n\n      // Patch the old `subscribe` provide via `CHANNEL` for older clients.\n      var unsubscribeId = _this3.broadcast.subscribe(subscriber);\n      return function () {\n        return _this3.broadcast.unsubscribe(unsubscribeId);\n      };\n    }, _babelHelpers$extends));\n  };\n\n  ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.theme !== nextProps.theme) {\n      this.publish(nextProps.theme);\n    }\n  };\n\n  ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.unsubscribeToOuterId !== -1) {\n      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);\n    }\n  };\n\n  // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation\n\n\n  ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {\n    var theme = passedTheme || this.props.theme;\n\n    if (isFunction(theme)) {\n      var mergedTheme = theme(this.outerTheme);\n\n      if (\"development\" !== 'production' && (mergedTheme === null || Array.isArray(mergedTheme) || (typeof mergedTheme === 'undefined' ? 'undefined' : _typeof(mergedTheme)) !== 'object')) {\n        throw new StyledComponentsError(7);\n      }\n\n      return mergedTheme;\n    }\n\n    if (theme === null || Array.isArray(theme) || (typeof theme === 'undefined' ? 'undefined' : _typeof(theme)) !== 'object') {\n      throw new StyledComponentsError(8);\n    }\n\n    return _extends({}, this.outerTheme, theme);\n  };\n\n  ThemeProvider.prototype.publish = function publish(theme) {\n    this.broadcast.publish(this.getTheme(theme));\n  };\n\n  ThemeProvider.prototype.render = function render() {\n    if (!this.props.children) {\n      return null;\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.only(this.props.children);\n  };\n\n  return ThemeProvider;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nThemeProvider.childContextTypes = contextShape;\nThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);\n\nvar _babelHelpers$extends;\n\n// HACK for generating all static styles without needing to allocate\n// an empty execution context every single time...\nvar STATIC_EXECUTION_CONTEXT = {};\n\nvar modifiedContextShape = _extends({}, contextShape, (_babelHelpers$extends = {}, _babelHelpers$extends[CONTEXT_KEY] = prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(StyleSheet), prop_types__WEBPACK_IMPORTED_MODULE_4___default.a.instanceOf(ServerStyleSheet)]), _babelHelpers$extends));\n\nvar identifiers = {};\n\n/* We depend on components having unique IDs */\nvar generateId = function generateId(ComponentStyle, _displayName, parentComponentId) {\n  var displayName = typeof _displayName !== 'string' ? 'sc' : escape(_displayName);\n\n  /**\n   * This ensures uniqueness if two components happen to share\n   * the same displayName.\n   */\n  var nr = (identifiers[displayName] || 0) + 1;\n  identifiers[displayName] = nr;\n\n  var componentId = displayName + '-' + ComponentStyle.generateName(displayName + nr);\n\n  return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;\n};\n\nvar warnExtendDeprecated = function warnExtendDeprecated() {};\nif (true) {\n  warnExtendDeprecated = once(function () {\n    // eslint-disable-next-line no-console\n    console.warn('Warning: The \"extend\" API will be removed in the upcoming v4.0 release. Use styled(StyledComponent) instead. You can find more information here: https://github.com/styled-components/styled-components/issues/1546');\n  });\n}\n\n// $FlowFixMe\n\nvar BaseStyledComponent = function (_Component) {\n  inherits(BaseStyledComponent, _Component);\n\n  function BaseStyledComponent() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, BaseStyledComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {\n      theme: null,\n      generatedClassName: ''\n    }, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {\n    if (this.unsubscribeId !== -1) {\n      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);\n    }\n  };\n\n  BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {\n    var attrs = this.constructor.attrs;\n\n    var context = _extends({}, props, { theme: theme });\n    if (attrs === undefined) {\n      return context;\n    }\n\n    this.attrs = Object.keys(attrs).reduce(function (acc, key) {\n      var attr = attrs[key];\n\n      // eslint-disable-next-line no-param-reassign\n      acc[key] = typeof attr === 'function' && !hasInInheritanceChain(attr, react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]) ? attr(context) : attr;\n      return acc;\n    }, {});\n\n    return _extends({}, context, this.attrs);\n  };\n\n  BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {\n    var _constructor = this.constructor,\n        attrs = _constructor.attrs,\n        componentStyle = _constructor.componentStyle,\n        warnTooManyClasses = _constructor.warnTooManyClasses;\n\n    var styleSheet = this.context[CONTEXT_KEY] || StyleSheet.master;\n\n    // statically styled-components don't need to build an execution context object,\n    // and shouldn't be increasing the number of class names\n    if (componentStyle.isStatic && attrs === undefined) {\n      return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);\n    } else {\n      var executionContext = this.buildExecutionContext(theme, props);\n      var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);\n\n      if (\"development\" !== 'production' && warnTooManyClasses !== undefined) {\n        warnTooManyClasses(className);\n      }\n\n      return className;\n    }\n  };\n\n  BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var componentStyle = this.constructor.componentStyle;\n\n    var styledContext = this.context[CHANNEL_NEXT];\n\n    // If this is a statically-styled component, we don't need to the theme\n    // to generate or build styles.\n    if (componentStyle.isStatic) {\n      var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);\n      this.setState({ generatedClassName: generatedClassName });\n      // If there is a theme in the context, subscribe to the event emitter. This\n      // is necessary due to pure components blocking context updates, this circumvents\n      // that by updating when an event is emitted\n    } else if (styledContext !== undefined) {\n      var subscribe = styledContext.subscribe;\n\n      this.unsubscribeId = subscribe(function (nextTheme) {\n        // This will be called once immediately\n        var theme = determineTheme(_this2.props, nextTheme, _this2.constructor.defaultProps);\n\n        var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);\n\n        _this2.setState({ theme: theme, generatedClassName: generatedClassName });\n      });\n    } else {\n      // eslint-disable-next-line react/prop-types\n      var theme = this.props.theme || EMPTY_OBJECT;\n      var _generatedClassName = this.generateAndInjectStyles(theme, this.props);\n      this.setState({ theme: theme, generatedClassName: _generatedClassName });\n    }\n  };\n\n  BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var _this3 = this;\n\n    // If this is a statically-styled component, we don't need to listen to\n    // props changes to update styles\n    var componentStyle = this.constructor.componentStyle;\n\n    if (componentStyle.isStatic) {\n      return;\n    }\n\n    this.setState(function (prevState) {\n      var theme = determineTheme(nextProps, prevState.theme, _this3.constructor.defaultProps);\n      var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);\n\n      return { theme: theme, generatedClassName: generatedClassName };\n    });\n  };\n\n  BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unsubscribeFromContext();\n  };\n\n  BaseStyledComponent.prototype.render = function render() {\n    // eslint-disable-next-line react/prop-types\n    var innerRef = this.props.innerRef;\n    var generatedClassName = this.state.generatedClassName;\n    var _constructor2 = this.constructor,\n        styledComponentId = _constructor2.styledComponentId,\n        target = _constructor2.target;\n\n\n    var isTargetTag = isTag(target);\n\n    var className = [\n    // eslint-disable-next-line react/prop-types\n    this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(' ');\n\n    var baseProps = _extends({}, this.attrs, {\n      className: className\n    });\n\n    if (isStyledComponent(target)) {\n      baseProps.innerRef = innerRef;\n    } else {\n      baseProps.ref = innerRef;\n    }\n\n    var propsForElement = baseProps;\n    var key = void 0;\n\n    for (key in this.props) {\n      // Don't pass through non HTML tags through to HTML elements\n      // always omit innerRef\n      if (key !== 'innerRef' && key !== 'className' && (!isTargetTag || validAttr(key))) {\n        propsForElement[key] = key === 'style' && key in this.attrs ? _extends({}, this.attrs[key], this.props[key]) : this.props[key];\n      }\n    }\n\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(target, propsForElement);\n  };\n\n  return BaseStyledComponent;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]);\n\nvar _StyledComponent = (function (ComponentStyle, constructWithOptions) {\n  var createStyledComponent = function createStyledComponent(target, options, rules) {\n    var _options$isClass = options.isClass,\n        isClass = _options$isClass === undefined ? !isTag(target) : _options$isClass,\n        _options$displayName = options.displayName,\n        displayName = _options$displayName === undefined ? generateDisplayName(target) : _options$displayName,\n        _options$componentId = options.componentId,\n        componentId = _options$componentId === undefined ? generateId(ComponentStyle, options.displayName, options.parentComponentId) : _options$componentId,\n        _options$ParentCompon = options.ParentComponent,\n        ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,\n        extendingRules = options.rules,\n        attrs = options.attrs;\n\n\n    var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + '-' + options.componentId : options.componentId || componentId;\n\n    var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), attrs, styledComponentId);\n\n    var StyledComponent = function (_ParentComponent) {\n      inherits(StyledComponent, _ParentComponent);\n\n      function StyledComponent() {\n        classCallCheck(this, StyledComponent);\n        return possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));\n      }\n\n      StyledComponent.withComponent = function withComponent(tag) {\n        var previousComponentId = options.componentId,\n            optionsToCopy = objectWithoutProperties(options, ['componentId']);\n\n\n        var newComponentId = previousComponentId && previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));\n\n        var newOptions = _extends({}, optionsToCopy, {\n          componentId: newComponentId,\n          ParentComponent: StyledComponent\n        });\n\n        return createStyledComponent(tag, newOptions, rules);\n      };\n\n      createClass(StyledComponent, null, [{\n        key: 'extend',\n        get: function get$$1() {\n          var rulesFromOptions = options.rules,\n              parentComponentId = options.componentId,\n              optionsToCopy = objectWithoutProperties(options, ['rules', 'componentId']);\n\n\n          var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);\n\n          var newOptions = _extends({}, optionsToCopy, {\n            rules: newRules,\n            parentComponentId: parentComponentId,\n            ParentComponent: StyledComponent\n          });\n\n          warnExtendDeprecated();\n\n          return constructWithOptions(createStyledComponent, target, newOptions);\n        }\n      }]);\n      return StyledComponent;\n    }(ParentComponent);\n\n    StyledComponent.attrs = attrs;\n    StyledComponent.componentStyle = componentStyle;\n    StyledComponent.contextTypes = modifiedContextShape;\n    StyledComponent.displayName = displayName;\n    StyledComponent.styledComponentId = styledComponentId;\n    StyledComponent.target = target;\n\n\n    if (true) {\n      StyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName);\n    }\n\n    if (isClass) {\n      hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5___default()(StyledComponent, target, {\n        // all SC-specific things should not be hoisted\n        attrs: true,\n        componentStyle: true,\n        displayName: true,\n        extend: true,\n        styledComponentId: true,\n        target: true,\n        warnTooManyClasses: true,\n        withComponent: true\n      });\n    }\n\n    return StyledComponent;\n  };\n\n  return createStyledComponent;\n});\n\n// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash(str) {\n  var l = str.length | 0,\n      h = l | 0,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n\n  return h >>> 0;\n}\n\n// \n\nvar areStylesCacheable = IS_BROWSER;\n\nvar isStaticRules = function isStaticRules(rules, attrs) {\n  for (var i = 0, len = rules.length; i < len; i += 1) {\n    var rule = rules[i];\n\n    // recursive case\n    if (Array.isArray(rule) && !isStaticRules(rule)) {\n      return false;\n    } else if (typeof rule === 'function' && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  if (attrs !== undefined) {\n    // eslint-disable-next-line guard-for-in, no-restricted-syntax\n    for (var key in attrs) {\n      if (typeof attrs[key] === 'function') {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar isHMREnabled = typeof module !== 'undefined' && module.hot && \"development\" !== 'production';\n\n/*\n ComponentStyle is all the CSS-specific stuff, not\n the React-specific stuff.\n */\nvar _ComponentStyle = (function (nameGenerator, flatten, stringifyRules) {\n  /* combines hashStr (murmurhash) and nameGenerator for convenience */\n  var generateRuleHash = function generateRuleHash(str) {\n    return nameGenerator(murmurhash(str));\n  };\n\n  var ComponentStyle = function () {\n    function ComponentStyle(rules, attrs, componentId) {\n      classCallCheck(this, ComponentStyle);\n\n      this.rules = rules;\n      this.isStatic = !isHMREnabled && isStaticRules(rules, attrs);\n      this.componentId = componentId;\n\n      if (!StyleSheet.master.hasId(componentId)) {\n        var placeholder =  true ? ['.' + componentId + ' {}'] : undefined;\n\n        StyleSheet.master.deferredInject(componentId, placeholder);\n      }\n    }\n\n    /*\n     * Flattens a rule set into valid CSS\n     * Hashes it, wraps the whole chunk in a .hash1234 {}\n     * Returns the hash to be injected on render()\n     * */\n\n\n    ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {\n      var isStatic = this.isStatic,\n          componentId = this.componentId,\n          lastClassName = this.lastClassName;\n\n      if (areStylesCacheable && isStatic && lastClassName !== undefined && styleSheet.hasNameForId(componentId, lastClassName)) {\n        return lastClassName;\n      }\n\n      var flatCSS = flatten(this.rules, executionContext);\n      var name = generateRuleHash(this.componentId + flatCSS.join(''));\n\n      if (!styleSheet.hasNameForId(componentId, name)) {\n        styleSheet.inject(this.componentId, stringifyRules(flatCSS, '.' + name), name);\n      }\n\n      this.lastClassName = name;\n      return name;\n    };\n\n    ComponentStyle.generateName = function generateName(str) {\n      return generateRuleHash(str);\n    };\n\n    return ComponentStyle;\n  }();\n\n  return ComponentStyle;\n});\n\n// \n// Thanks to ReactDOMFactories for this handy list!\n\nvar domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',\n\n// SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\n// \n\nvar _styled = (function (styledComponent, constructWithOptions) {\n  var styled = function styled(tag) {\n    return constructWithOptions(styledComponent, tag);\n  };\n\n  // Shorthands for all valid HTML Elements\n  domElements.forEach(function (domElement) {\n    styled[domElement] = styled(domElement);\n  });\n\n  return styled;\n});\n\n// \n\nvar replaceWhitespace = function replaceWhitespace(str) {\n  return str.replace(/\\s|\\\\n/g, '');\n};\n\nvar _keyframes = (function (nameGenerator, stringifyRules, css) {\n  return function () {\n    var styleSheet = StyleSheet.master;\n    var rules = css.apply(undefined, arguments);\n    var name = nameGenerator(murmurhash(replaceWhitespace(JSON.stringify(rules))));\n    var id = 'sc-keyframes-' + name;\n\n    if (!styleSheet.hasNameForId(id, name)) {\n      styleSheet.inject(id, stringifyRules(rules, name, '@keyframes'), name);\n    }\n\n    return name;\n  };\n});\n\n// \n\nvar _injectGlobal = (function (stringifyRules, css) {\n  var injectGlobal = function injectGlobal() {\n    var styleSheet = StyleSheet.master;\n    var rules = css.apply(undefined, arguments);\n    var hash = murmurhash(JSON.stringify(rules));\n    var id = 'sc-global-' + hash;\n\n    if (!styleSheet.hasId(id)) {\n      styleSheet.inject(id, stringifyRules(rules));\n    }\n  };\n\n  return injectGlobal;\n});\n\n// \n\nvar _constructWithOptions = (function (css) {\n  var constructWithOptions = function constructWithOptions(componentConstructor, tag) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;\n\n    if (!Object(react_is__WEBPACK_IMPORTED_MODULE_6__[\"isValidElementType\"])(tag)) {\n      throw new StyledComponentsError(1, String(tag));\n    }\n\n    /* This is callable directly as a template function */\n    // $FlowFixMe: Not typed to avoid destructuring arguments\n    var templateFunction = function templateFunction() {\n      return componentConstructor(tag, options, css.apply(undefined, arguments));\n    };\n\n    /* If config methods are called, wrap up a new template function and merge options */\n    templateFunction.withConfig = function (config) {\n      return constructWithOptions(componentConstructor, tag, _extends({}, options, config));\n    };\n    templateFunction.attrs = function (attrs) {\n      return constructWithOptions(componentConstructor, tag, _extends({}, options, {\n        attrs: _extends({}, options.attrs || EMPTY_OBJECT, attrs)\n      }));\n    };\n\n    return templateFunction;\n  };\n\n  return constructWithOptions;\n});\n\n// \n\nvar withTheme = (function (Component$$1) {\n  var isStatelessFunctionalComponent = typeof Component$$1 === 'function' &&\n  // $FlowFixMe TODO: flow for prototype\n  !(Component$$1.prototype && 'isReactComponent' in Component$$1.prototype);\n\n  // NOTE: We can't pass a ref to a stateless functional component\n  var shouldSetInnerRef = isStyledComponent(Component$$1) || isStatelessFunctionalComponent;\n\n  var WithTheme = function (_React$Component) {\n    inherits(WithTheme, _React$Component);\n\n    function WithTheme() {\n      var _temp, _this, _ret;\n\n      classCallCheck(this, WithTheme);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = EMPTY_OBJECT, _this.unsubscribeId = -1, _temp), possibleConstructorReturn(_this, _ret);\n    }\n\n    // NOTE: This is so that isStyledComponent passes for the innerRef unwrapping\n\n\n    WithTheme.prototype.componentWillMount = function componentWillMount() {\n      var _this2 = this;\n\n      var defaultProps = this.constructor.defaultProps;\n\n      var styledContext = this.context[CHANNEL_NEXT];\n      var themeProp = determineTheme(this.props, undefined, defaultProps);\n      if (styledContext === undefined && themeProp === undefined && \"development\" !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');\n      } else if (styledContext === undefined && themeProp !== undefined) {\n        this.setState({ theme: themeProp });\n      } else {\n        var subscribe = styledContext.subscribe;\n\n        this.unsubscribeId = subscribe(function (nextTheme) {\n          var theme = determineTheme(_this2.props, nextTheme, defaultProps);\n          _this2.setState({ theme: theme });\n        });\n      }\n    };\n\n    WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var defaultProps = this.constructor.defaultProps;\n\n      this.setState(function (oldState) {\n        var theme = determineTheme(nextProps, oldState.theme, defaultProps);\n\n        return { theme: theme };\n      });\n    };\n\n    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.unsubscribeId !== -1) {\n        this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeId);\n      }\n    };\n\n    WithTheme.prototype.render = function render() {\n      var props = _extends({\n        theme: this.state.theme\n      }, this.props);\n\n      if (!shouldSetInnerRef) {\n        props.ref = props.innerRef;\n        delete props.innerRef;\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(Component$$1, props);\n    };\n\n    return WithTheme;\n  }(react__WEBPACK_IMPORTED_MODULE_1___default.a.Component);\n\n  WithTheme.contextTypes = contextShape;\n  WithTheme.displayName = 'WithTheme(' + getComponentName(Component$$1) + ')';\n  WithTheme.styledComponentId = 'withTheme';\n\n\n  return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5___default()(WithTheme, Component$$1);\n});\n\n// \n\n/* eslint-disable */\nvar __DO_NOT_USE_OR_YOU_WILL_BE_HAUNTED_BY_SPOOKY_GHOSTS = {\n  StyleSheet: StyleSheet\n};\n\n// \n\n/* Warning if you've imported this file on React Native */\nif (\"development\" !== 'production' && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n  // eslint-disable-next-line no-console\n  console.warn(\"It looks like you've imported 'styled-components' on React Native.\\n\" + \"Perhaps you're looking to import 'styled-components/native'?\\n\" + 'Read more about this at https://www.styled-components.com/docs/basics#react-native');\n}\n\n/* Warning if there are several instances of styled-components */\nif (\"development\" !== 'production' && \"development\" !== 'test' && typeof window !== 'undefined' && typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Node.js') === -1 && navigator.userAgent.indexOf('jsdom') === -1) {\n  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;\n\n  if (window['__styled-components-init__'] === 1) {\n    // eslint-disable-next-line no-console\n    console.warn(\"It looks like there are several instances of 'styled-components' initialized in this application. \" + 'This may cause dynamic styles not rendering properly, errors happening during rehydration process ' + 'and makes your application bigger without a good reason.\\n\\n' + 'See https://s-c.sh/2BAXzed for more info.');\n  }\n\n  window['__styled-components-init__'] += 1;\n}\n\n/* Instantiate singletons */\nvar ComponentStyle = _ComponentStyle(generateAlphabeticName, flatten, stringifyRules);\nvar constructWithOptions = _constructWithOptions(css);\nvar StyledComponent = _StyledComponent(ComponentStyle, constructWithOptions);\n\n/* Instantiate exported singletons */\nvar keyframes = _keyframes(generateAlphabeticName, stringifyRules, css);\nvar injectGlobal = _injectGlobal(stringifyRules, css);\nvar styled = _styled(StyledComponent, constructWithOptions);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (styled);\n\n//# sourceMappingURL=styled-components.browser.esm.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/process/browser.js */ \"../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/process/browser.js\"), __webpack_require__(/*! ./../../../../../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/webpack/buildin/harmony-module.js */ \"../../../../../../Applications/Framer X Beta.app/Contents/Resources/Server/node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis-rule-sheet/index.js":
/*!******************************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis-rule-sheet/index.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (factory) {\n\t true ? (module['exports'] = factory()) :\n\t\tundefined\n}(function () {\n\n\t'use strict'\n\n\treturn function (insertRule) {\n\t\tvar delimiter = '/*|*/'\n\t\tvar needle = delimiter+'}'\n\n\t\tfunction toSheet (block) {\n\t\t\tif (block)\n\t\t\t\ttry {\n\t\t\t\t\tinsertRule(block + '}')\n\t\t\t\t} catch (e) {}\n\t\t}\n\n\t\treturn function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t\t\tswitch (context) {\n\t\t\t\t// property\n\t\t\t\tcase 1:\n\t\t\t\t\t// @import\n\t\t\t\t\tif (depth === 0 && content.charCodeAt(0) === 64)\n\t\t\t\t\t\treturn insertRule(content+';'), ''\n\t\t\t\t\tbreak\n\t\t\t\t// selector\n\t\t\t\tcase 2:\n\t\t\t\t\tif (ns === 0)\n\t\t\t\t\t\treturn content + delimiter\n\t\t\t\t\tbreak\n\t\t\t\t// at-rule\n\t\t\t\tcase 3:\n\t\t\t\t\tswitch (ns) {\n\t\t\t\t\t\t// @font-face, @page\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\tcase 112:\n\t\t\t\t\t\t\treturn insertRule(selectors[0]+content), ''\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn content + (at === 0 ? delimiter : '')\n\t\t\t\t\t}\n\t\t\t\tcase -2:\n\t\t\t\t\tcontent.split(needle).forEach(toSheet)\n\t\t\t}\n\t\t}\n\t}\n}))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL21hYy9MaWJyYXJ5L0NhY2hlcy9GcmFtZXIvcHJvamVjdHMvZmJkN2U2NzctMTRlNS00YmM1LWFhZTAtOWJhMzU0ZTBmY2Y5L25vZGVfbW9kdWxlcy9zdHlsaXMtcnVsZS1zaGVldC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsV0FDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQjs7QUFFM0I7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuLi8uLi8uLi9DYWNoZXMvRnJhbWVyL3Byb2plY3RzL2ZiZDdlNjc3LTE0ZTUtNGJjNS1hYWUwLTliYTM1NGUwZmNmOS9ub2RlX21vZHVsZXMvc3R5bGlzLXJ1bGUtc2hlZXQvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gKG1vZHVsZVsnZXhwb3J0cyddID0gZmFjdG9yeSgpKSA6XG5cdFx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddID8gZGVmaW5lKGZhY3RvcnkoKSkgOlxuXHRcdFx0KHdpbmRvd1snc3R5bGlzUnVsZVNoZWV0J10gPSBmYWN0b3J5KCkpXG59KGZ1bmN0aW9uICgpIHtcblxuXHQndXNlIHN0cmljdCdcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluc2VydFJ1bGUpIHtcblx0XHR2YXIgZGVsaW1pdGVyID0gJy8qfCovJ1xuXHRcdHZhciBuZWVkbGUgPSBkZWxpbWl0ZXIrJ30nXG5cblx0XHRmdW5jdGlvbiB0b1NoZWV0IChibG9jaykge1xuXHRcdFx0aWYgKGJsb2NrKVxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGluc2VydFJ1bGUoYmxvY2sgKyAnfScpXG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldCAoY29udGV4dCwgY29udGVudCwgc2VsZWN0b3JzLCBwYXJlbnRzLCBsaW5lLCBjb2x1bW4sIGxlbmd0aCwgbnMsIGRlcHRoLCBhdCkge1xuXHRcdFx0c3dpdGNoIChjb250ZXh0KSB7XG5cdFx0XHRcdC8vIHByb3BlcnR5XG5cdFx0XHRcdGNhc2UgMTpcblx0XHRcdFx0XHQvLyBAaW1wb3J0XG5cdFx0XHRcdFx0aWYgKGRlcHRoID09PSAwICYmIGNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gNjQpXG5cdFx0XHRcdFx0XHRyZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50Kyc7JyksICcnXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gc2VsZWN0b3Jcblx0XHRcdFx0Y2FzZSAyOlxuXHRcdFx0XHRcdGlmIChucyA9PT0gMClcblx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyXG5cdFx0XHRcdFx0YnJlYWtcblx0XHRcdFx0Ly8gYXQtcnVsZVxuXHRcdFx0XHRjYXNlIDM6XG5cdFx0XHRcdFx0c3dpdGNoIChucykge1xuXHRcdFx0XHRcdFx0Ly8gQGZvbnQtZmFjZSwgQHBhZ2Vcblx0XHRcdFx0XHRcdGNhc2UgMTAyOlxuXHRcdFx0XHRcdFx0Y2FzZSAxMTI6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbnNlcnRSdWxlKHNlbGVjdG9yc1swXStjb250ZW50KSwgJydcblx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRjYXNlIC0yOlxuXHRcdFx0XHRcdGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis-rule-sheet/index.js\n");

/***/ }),

/***/ "../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis/stylis.js":
/*!********************************************************************************************************************!*\
  !*** /Users/mac/Library/Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis/stylis.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n *          __        ___\n *    _____/ /___  __/ (_)____\n *   / ___/ __/ / / / / / ___/\n *  (__  ) /_/ /_/ / / (__  )\n * /____/\\__/\\__, /_/_/____/\n *          /____/\n *\n * light - weight css preprocessor @licence MIT\n */\n(function (factory) {/* eslint-disable */\n\t true ? (module['exports'] = factory(null)) :\n\t\tundefined\n}(/** @param {*=} options */function factory (options) {/* eslint-disable */\n\n\t'use strict'\n\n\t/**\n\t * Notes\n\t *\n\t * The ['<method name>'] pattern is used to support closure compiler\n\t * the jsdoc signatures are also used to the same effect\n\t *\n\t * ----\n\t *\n\t * int + int + int === n4 [faster]\n\t *\n\t * vs\n\t *\n\t * int === n1 && int === n2 && int === n3\n\t *\n\t * ----\n\t *\n\t * switch (int) { case ints...} [faster]\n\t *\n\t * vs\n\t *\n\t * if (int == 1 && int === 2 ...)\n\t *\n\t * ----\n\t *\n\t * The (first*n1 + second*n2 + third*n3) format used in the property parser\n\t * is a simple way to hash the sequence of characters\n\t * taking into account the index they occur in\n\t * since any number of 3 character sequences could produce duplicates.\n\t *\n\t * On the other hand sequences that are directly tied to the index of the character\n\t * resolve a far more accurate measure, it's also faster\n\t * to evaluate one condition in a switch statement\n\t * than three in an if statement regardless of the added math.\n\t *\n\t * This allows the vendor prefixer to be both small and fast.\n\t */\n\n\tvar nullptn = /^\\0+/g /* matches leading null characters */\n\tvar formatptn = /[\\0\\r\\f]/g /* matches new line, null and formfeed characters */\n\tvar colonptn = /: */g /* splits animation rules */\n\tvar cursorptn = /zoo|gra/ /* assert cursor varient */\n\tvar transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */\n\tvar animationptn = /,+\\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */\n\tvar propertiesptn = / +\\s*(?![^(]*[)])/g /* animation properties */\n\tvar elementptn = / *[\\0] */g /* selector elements */\n\tvar selectorptn = /,\\r+?/g /* splits selectors */\n\tvar andptn = /([\\t\\r\\n ])*\\f?&/g /* match & */\n\tvar escapeptn = /:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g /* matches :global(.*) */\n\tvar invalidptn = /\\W+/g /* removes invalid characters from keyframes */\n\tvar keyframeptn = /@(k\\w+)\\s*(\\S*)\\s*/ /* matches @keyframes $1 */\n\tvar plcholdrptn = /::(place)/g /* match ::placeholder varient */\n\tvar readonlyptn = /:(read-only)/g /* match :read-only varient */\n\tvar beforeptn = /\\s+(?=[{\\];=:>])/g /* matches \\s before ] ; = : */\n\tvar afterptn = /([[}=:>])\\s+/g /* matches \\s after characters [ } = : */\n\tvar tailptn = /(\\{[^{]+?);(?=\\})/g /* matches tail semi-colons ;} */\n\tvar whiteptn = /\\s{2,}/g /* matches repeating whitespace */\n\tvar pseudoptn = /([^\\(])(:+) */g /* pseudo element */\n\tvar writingptn = /[svh]\\w+-[tblr]{2}/ /* match writing mode property values */\n\tvar gradientptn = /([\\w-]+t\\()/g /* match *gradient property */\n\tvar supportsptn = /\\(\\s*(.*)\\s*\\)/g /* match supports (groups) */\n\tvar propertyptn = /([\\s\\S]*?);/g /* match properties leading semicolon */\n\tvar selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */\n\tvar pseudofmt = /[^]*?(:[rp][el]a[\\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */\n\tvar trimptn = /[ \\t]+$/ /* match tail whitspace */\n\tvar dimensionptn = /stretch|:\\s*\\w+\\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */\n\tvar imgsrcptn = /([^-])(image-set\\()/\n\n\t/* vendors */\n\tvar webkit = '-webkit-'\n\tvar moz = '-moz-'\n\tvar ms = '-ms-'\n\n\t/* character codes */\n\tvar SEMICOLON = 59 /* ; */\n\tvar CLOSEBRACES = 125 /* } */\n\tvar OPENBRACES = 123 /* { */\n\tvar OPENPARENTHESES = 40 /* ( */\n\tvar CLOSEPARENTHESES = 41 /* ) */\n\tvar OPENBRACKET = 91 /* [ */\n\tvar CLOSEBRACKET = 93 /* ] */\n\tvar NEWLINE = 10 /* \\n */\n\tvar CARRIAGE = 13 /* \\r */\n\tvar TAB = 9 /* \\t */\n\tvar AT = 64 /* @ */\n\tvar SPACE = 32 /*   */\n\tvar AND = 38 /* & */\n\tvar DASH = 45 /* - */\n\tvar UNDERSCORE = 95 /* _ */\n\tvar STAR = 42 /* * */\n\tvar COMMA = 44 /* , */\n\tvar COLON = 58 /* : */\n\tvar SINGLEQUOTE = 39 /* ' */\n\tvar DOUBLEQUOTE = 34 /* \" */\n\tvar FOWARDSLASH = 47 /* / */\n\tvar GREATERTHAN = 62 /* > */\n\tvar PLUS = 43 /* + */\n\tvar TILDE = 126 /* ~ */\n\tvar NULL = 0 /* \\0 */\n\tvar FORMFEED = 12 /* \\f */\n\tvar VERTICALTAB = 11 /* \\v */\n\n\t/* special identifiers */\n\tvar KEYFRAME = 107 /* k */\n\tvar MEDIA = 109 /* m */\n\tvar SUPPORTS = 115 /* s */\n\tvar PLACEHOLDER = 112 /* p */\n\tvar READONLY = 111 /* o */\n\tvar IMPORT = 105 /* <at>i */\n\tvar CHARSET = 99 /* <at>c */\n\tvar DOCUMENT = 100 /* <at>d */\n\tvar PAGE = 112 /* <at>p */\n\n\tvar column = 1 /* current column */\n\tvar line = 1 /* current line numebr */\n\tvar pattern = 0 /* :pattern */\n\n\tvar cascade = 1 /* #id h1 h2 vs h1#id h2#id  */\n\tvar prefix = 1 /* vendor prefix */\n\tvar escape = 1 /* escape :global() pattern */\n\tvar compress = 0 /* compress output */\n\tvar semicolon = 0 /* no/semicolon option */\n\tvar preserve = 0 /* preserve empty selectors */\n\n\t/* empty reference */\n\tvar array = []\n\n\t/* plugins */\n\tvar plugins = []\n\tvar plugged = 0\n\tvar should = null\n\n\t/* plugin context */\n\tvar POSTS = -2\n\tvar PREPS = -1\n\tvar UNKWN = 0\n\tvar PROPS = 1\n\tvar BLCKS = 2\n\tvar ATRUL = 3\n\n\t/* plugin newline context */\n\tvar unkwn = 0\n\n\t/* keyframe animation */\n\tvar keyed = 1\n\tvar key = ''\n\n\t/* selector namespace */\n\tvar nscopealt = ''\n\tvar nscope = ''\n\n\t/**\n\t * Compile\n\t *\n\t * @param {Array<string>} parent\n\t * @param {Array<string>} current\n\t * @param {string} body\n\t * @param {number} id\n\t * @param {number} depth\n\t * @return {string}\n\t */\n\tfunction compile (parent, current, body, id, depth) {\n\t\tvar bracket = 0 /* brackets [] */\n\t\tvar comment = 0 /* comments /* // or /* */\n\t\tvar parentheses = 0 /* functions () */\n\t\tvar quote = 0 /* quotes '', \"\" */\n\n\t\tvar first = 0 /* first character code */\n\t\tvar second = 0 /* second character code */\n\t\tvar code = 0 /* current character code */\n\t\tvar tail = 0 /* previous character code */\n\t\tvar trail = 0 /* character before previous code */\n\t\tvar peak = 0 /* previous non-whitespace code */\n\n\t\tvar counter = 0 /* count sequence termination */\n\t\tvar context = 0 /* track current context */\n\t\tvar atrule = 0 /* track @at-rule context */\n\t\tvar pseudo = 0 /* track pseudo token index */\n\t\tvar caret = 0 /* current character index */\n\t\tvar format = 0 /* control character formating context */\n\t\tvar insert = 0 /* auto semicolon insertion */\n\t\tvar invert = 0 /* inverted selector pattern */\n\t\tvar length = 0 /* generic length address */\n\t\tvar eof = body.length /* end of file(length) */\n\t\tvar eol = eof - 1 /* end of file(characters) */\n\n\t\tvar char = '' /* current character */\n\t\tvar chars = '' /* current buffer of characters */\n\t\tvar child = '' /* next buffer of characters */\n\t\tvar out = '' /* compiled body */\n\t\tvar children = '' /* compiled children */\n\t\tvar flat = '' /* compiled leafs */\n\t\tvar selector /* generic selector address */\n\t\tvar result /* generic address */\n\n\t\t// ...build body\n\t\twhile (caret < eof) {\n\t\t\tcode = body.charCodeAt(caret)\n\n\t\t\t// eof varient\n\t\t\tif (caret === eol) {\n\t\t\t\t// last character + noop context, add synthetic padding for noop context to terminate\n\t\t\t\tif (comment + quote + parentheses + bracket !== 0) {\n\t\t\t\t\tif (comment !== 0) {\n\t\t\t\t\t\tcode = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH\n\t\t\t\t\t}\n\n\t\t\t\t\tquote = parentheses = bracket = 0\n\t\t\t\t\teof++\n\t\t\t\t\teol++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t// eof varient\n\t\t\t\tif (caret === eol) {\n\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chars.trim().length > 0) {\n\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchars += body.charAt(caret)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode = SEMICOLON\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// auto semicolon insertion\n\t\t\t\tif (insert === 1) {\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t// false flags\n\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\tcase OPENPARENTHESES:\n\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// valid\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\tfirst = code\n\t\t\t\t\t\t\tcaret--\n\t\t\t\t\t\t\tcode = SEMICOLON\n\n\t\t\t\t\t\t\twhile (length < eof) {\n\t\t\t\t\t\t\t\tswitch (body.charCodeAt(length++)) {\n\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// token varient\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\tchars = chars.trim()\n\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\tcounter = 1\n\t\t\t\t\t\tlength = ++caret\n\n\t\t\t\t\t\twhile (caret < eof) {\n\t\t\t\t\t\t\tswitch (code = body.charCodeAt(caret)) {\n\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\tcounter++\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\t\tcounter--\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\tswitch (second = body.charCodeAt(caret + 1)) {\n\t\t\t\t\t\t\t\t\t\t// /*, //\n\t\t\t\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\t\t\tcaret = delimited(second, caret, eol, body)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"[\" === 91 & \"]\" === 93 hence forth 91 + 1 + 1 === 93\n\t\t\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"(\" === 40 & \")\" === 41 hence forth 40 + 1 === 41\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// quote tail delimiter is identical to the head delimiter hence noop,\n\t\t\t\t\t\t\t\t// fallthrough clauses have been shited to the correct tail delimiter\n\t\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\t\t\twhile (caret++ < eol) {\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(caret) === code) {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcaret++\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchild = body.substring(length, caret)\n\n\t\t\t\t\t\tif (first === NULL) {\n\t\t\t\t\t\t\tfirst = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t// @at-rule\n\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\tcase SUPPORTS:\n\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\tselector = current\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tselector = array\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild = compile(current, selector, child, second, depth+1)\n\t\t\t\t\t\t\t\tlength = child.length\n\n\t\t\t\t\t\t\t\t// preserve empty @at-rule\n\t\t\t\t\t\t\t\tif (preserve > 0 && length === 0) {\n\t\t\t\t\t\t\t\t\tlength = chars.length\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// execute plugins, @at-rule context\n\t\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\t\tselector = select(array, chars, invert)\n\t\t\t\t\t\t\t\t\tresult = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)\n\t\t\t\t\t\t\t\t\tchars = selector.join('')\n\n\t\t\t\t\t\t\t\t\tif (result !== void 0) {\n\t\t\t\t\t\t\t\t\t\tif ((length = (child = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\t\tsecond = 0\n\t\t\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (length > 0) {\n\t\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\t\tcase SUPPORTS: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(supportsptn, supports)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase KEYFRAME: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\n\t\t\t\t\t\t\t\t\t\t\tif (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + webkit + child + '@' + child\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + child\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + child\n\n\t\t\t\t\t\t\t\t\t\t\tif (id === PAGE) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = (out += child, '')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// selector\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchild = compile(current, select(current, chars, invert), child, id, depth+1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchildren += child\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tatrule = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\tchars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()\n\n\t\t\t\t\t\tif ((length = chars.length) > 1) {\n\t\t\t\t\t\t\t// monkey-patch missing colon\n\t\t\t\t\t\t\tif (pseudo === 0) {\n\t\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\n\t\t\t\t\t\t\t\t// first character is a letter or dash, buffer has a space character\n\t\t\t\t\t\t\t\tif ((first === DASH || first > 96 && first < 123)) {\n\t\t\t\t\t\t\t\t\tlength = (chars = chars.replace(' ', ':')).length\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// execute plugins, property context\n\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\tif ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {\n\t\t\t\t\t\t\t\t\tif ((length = (chars = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\tchars = '\\0\\0'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\t\tif (second === IMPORT || second === CHARSET) {\n\t\t\t\t\t\t\t\t\t\tflat += chars + body.charAt(caret)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\tif (chars.charCodeAt(length-1) === COLON) {\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tout += property(chars, first, second, chars.charCodeAt(2))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// parse characters\n\t\t\tswitch (code) {\n\t\t\t\tcase CARRIAGE:\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t// auto insert semicolon\n\t\t\t\t\tif (comment + quote + parentheses + bracket + semicolon === 0) {\n\t\t\t\t\t\t// valid non-whitespace characters that\n\t\t\t\t\t\t// may precede a newline\n\t\t\t\t\t\tswitch (peak) {\n\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\tcase AT:\n\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\tcase FOWARDSLASH:\n\t\t\t\t\t\t\tcase DASH:\n\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t// current buffer has a colon\n\t\t\t\t\t\t\t\tif (pseudo > 0) {\n\t\t\t\t\t\t\t\t\tinsert = 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// terminate line comment\n\t\t\t\t\tif (comment === FOWARDSLASH) {\n\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {\n\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\tchars += '\\0'\n\t\t\t\t\t}\n\n\t\t\t\t\t// execute plugins, newline context\n\t\t\t\t\tif (plugged * unkwn > 0) {\n\t\t\t\t\t\tproxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)\n\t\t\t\t\t}\n\n\t\t\t\t\t// next line, reset column position\n\t\t\t\t\tcolumn = 1\n\t\t\t\t\tline++\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SEMICOLON:\n\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t\t\tcolumn++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\t// increment column position\n\t\t\t\t\tcolumn++\n\n\t\t\t\t\t// current character\n\t\t\t\t\tchar = body.charAt(caret)\n\n\t\t\t\t\t// remove comments, escape functions, strings, attributes and prepare selectors\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tif (quote + bracket + comment === 0) {\n\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tif (code !== SPACE) {\n\t\t\t\t\t\t\t\t\t\t\tchar = ' '\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// escape breaking control characters\n\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\tchar = '\\\\0'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase FORMFEED: {\n\t\t\t\t\t\t\tchar = '\\\\f'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase VERTICALTAB: {\n\t\t\t\t\t\t\tchar = '\\\\v'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// &\n\t\t\t\t\t\tcase AND: {\n\t\t\t\t\t\t\t// inverted selector pattern i.e html &\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0 && cascade > 0) {\n\t\t\t\t\t\t\t\tinvert = 1\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar = '\\f' + char\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ::p<l>aceholder, l\n\t\t\t\t\t\t// :read-on<l>y, l\n\t\t\t\t\t\tcase 108: {\n\t\t\t\t\t\t\tif (quote + comment + bracket + pattern === 0 && pseudo > 0) {\n\t\t\t\t\t\t\t\tswitch (caret - pseudo) {\n\t\t\t\t\t\t\t\t\t// ::placeholder\n\t\t\t\t\t\t\t\t\tcase 2: {\n\t\t\t\t\t\t\t\t\t\tif (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = tail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// :read-only\n\t\t\t\t\t\t\t\t\tcase 8: {\n\t\t\t\t\t\t\t\t\t\tif (trail === READONLY) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = trail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// :<pattern>\n\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tpseudo = caret\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// selectors\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket === 0) {\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar += '\\r'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// quotes\n\t\t\t\t\t\tcase DOUBLEQUOTE: {\n\t\t\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t\t\tquote = quote === code ? 0 : (quote === 0 ? code : quote)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t\t\tquote = quote === code ? 0 : (quote === 0 ? code : quote)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// attributes\n\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase CLOSEBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// functions\n\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tparentheses--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\tswitch (tail*2 + trail*3) {\n\t\t\t\t\t\t\t\t\t\t// :matches\n\t\t\t\t\t\t\t\t\t\tcase 533: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// :global, :not, :nth-child etc...\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tcounter = 0\n\t\t\t\t\t\t\t\t\t\t\tcontext = 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tparentheses++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket + pseudo + atrule === 0) {\n\t\t\t\t\t\t\t\tatrule = 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// block/line comments\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\tif (quote + bracket + parentheses > 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch (comment) {\n\t\t\t\t\t\t\t\t// initialize line/block comment context\n\t\t\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t\t\t\tswitch (code*2 + body.charCodeAt(caret+1)*3) {\n\t\t\t\t\t\t\t\t\t\t// //\n\t\t\t\t\t\t\t\t\t\tcase 235: {\n\t\t\t\t\t\t\t\t\t\t\tcomment = FOWARDSLASH\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// /*\n\t\t\t\t\t\t\t\t\t\tcase 220: {\n\t\t\t\t\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\t\t\t\t\tcomment = STAR\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// end block comment context\n\t\t\t\t\t\t\t\tcase STAR: {\n\t\t\t\t\t\t\t\t\tif (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {\n\t\t\t\t\t\t\t\t\t\t// /*<!> ... */, !\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(length+2) === 33) {\n\t\t\t\t\t\t\t\t\t\t\tout += body.substring(length, caret+1)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// ignore comment blocks\n\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t// aggressive isolation mode, divide each individual selector\n\t\t\t\t\t\t// including selectors in :not function but excluding selectors in :global function\n\t\t\t\t\t\tif (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {\n\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t// outside of an isolated context i.e nth-child(<...>)\n\t\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = char + '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = '\\0' + char + (code === COMMA ? '' : '\\0')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// within an isolated context, sleep untill it's terminated\n\t\t\t\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\t// :globa<l>(\n\t\t\t\t\t\t\t\t\t\t\t\tif (pseudo + 7 === caret && tail === 108) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = ++counter\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\tif ((context = --counter) === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\tcase NULL:\n\t\t\t\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\t\tcase FORMFEED:\n\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t// ignore in isolated contexts\n\t\t\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// concat buffer of characters\n\t\t\t\t\t\tchars += char\n\n\t\t\t\t\t\t// previous non-whitespace character code\n\t\t\t\t\t\tif (code !== SPACE && code !== TAB) {\n\t\t\t\t\t\t\tpeak = code\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// tail character codes\n\t\t\ttrail = tail\n\t\t\ttail = code\n\n\t\t\t// visit every character\n\t\t\tcaret++\n\t\t}\n\n\t\tlength = out.length\n\n\t\t// preserve empty selector\n \t\tif (preserve > 0) {\n \t\t\tif (length === 0 && children.length === 0 && (current[0].length === 0) === false) {\n \t\t\t\tif (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {\n\t\t\t\t\tlength = current.join(',').length + 2\n \t\t\t\t}\n \t\t\t}\n\t\t}\n\n\t\tif (length > 0) {\n\t\t\t// cascade isolation mode?\n\t\t\tselector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current\n\n\t\t\t// execute plugins, block context\n\t\t\tif (plugged > 0) {\n\t\t\t\tresult = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)\n\n\t\t\t\tif (result !== void 0 && (out = result).length === 0) {\n\t\t\t\t\treturn flat + out + children\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout = selector.join(',') + '{' + out + '}'\n\n\t\t\tif (prefix*pattern !== 0) {\n\t\t\t\tif (prefix === 2 && !vendor(out, 2))\n\t\t\t\t\tpattern = 0\n\n\t\t\t\tswitch (pattern) {\n\t\t\t\t\t// ::read-only\n\t\t\t\t\tcase READONLY: {\n\t\t\t\t\t\tout = out.replace(readonlyptn, ':'+moz+'$1')+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// ::placeholder\n\t\t\t\t\tcase PLACEHOLDER: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + webkit + 'input-$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + moz + '$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, ':' + ms + 'input-$1') + out\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpattern = 0\n\t\t\t}\n\t\t}\n\n\t\treturn flat + out + children\n\t}\n\n\t/**\n\t * Select\n\t *\n\t * @param {Array<string>} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @return {Array<string>}\n\t */\n\tfunction select (parent, current, invert) {\n\t\tvar selectors = current.trim().split(selectorptn)\n\t\tvar out = selectors\n\n\t\tvar length = selectors.length\n\t\tvar l = parent.length\n\n\t\tswitch (l) {\n\t\t\t// 0-1 parent selectors\n\t\t\tcase 0:\n\t\t\tcase 1: {\n\t\t\t\tfor (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {\n\t\t\t\t\tout[i] = scope(selector, out[i], invert, l).trim()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// >2 parent selectors, nested\n\t\t\tdefault: {\n\t\t\t\tfor (var i = 0, j = 0, out = []; i < length; ++i) {\n\t\t\t\t\tfor (var k = 0; k < l; ++k) {\n\t\t\t\t\t\tout[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Scope\n\t *\n\t * @param {string} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @param {number} level\n\t * @return {string}\n\t */\n\tfunction scope (parent, current, invert, level) {\n\t\tvar selector = current\n\t\tvar code = selector.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (selector = selector.trim()).charCodeAt(0)\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// &\n\t\t\tcase AND: {\n\t\t\t\tswitch (cascade + level) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tif (parent.trim().length === 0) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// :\n\t\t\tcase COLON: {\n\t\t\t\tswitch (selector.charCodeAt(1)) {\n\t\t\t\t\t// g in :global\n\t\t\t\t\tcase 103: {\n\t\t\t\t\t\tif (escape > 0 && cascade > 0) {\n\t\t\t\t\t\t\treturn selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// :hover\n\t\t\t\t\t\treturn parent.trim() + selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// html &\n\t\t\t\tif (invert*cascade > 0 && selector.indexOf('\\f') > 0) {\n\t\t\t\t\treturn selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn parent + selector\n\t}\n\n\t/**\n\t * Property\n\t *\n\t * @param {string} input\n\t * @param {number} first\n\t * @param {number} second\n\t * @param {number} third\n\t * @return {string}\n\t */\n\tfunction property (input, first, second, third) {\n\t\tvar index = 0\n\t\tvar out = input + ';'\n\t\tvar hash = (first*2) + (second*3) + (third*4)\n\t\tvar cache\n\n\t\t// animation: a, n, i characters\n\t\tif (hash === 944) {\n\t\t\treturn animation(out)\n\t\t} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {\n\t\t\treturn out\n\t\t}\n\n\t\t// vendor prefix\n\t\tswitch (hash) {\n\t\t\t// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x\n\t\t\tcase 1015: {\n\t\t\t\t// text-shadow/text-align/text-transform, a\n\t\t\t\treturn out.charCodeAt(10) === 97 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// filter/fill f, i, l\n\t\t\tcase 951: {\n\t\t\t\t// filter, t\n\t\t\t\treturn out.charCodeAt(3) === 116 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// color/column, c, o, l\n\t\t\tcase 963: {\n\t\t\t\t// column, n\n\t\t\t\treturn out.charCodeAt(5) === 110 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// box-decoration-break, b, o, x\n\t\t\tcase 1009: {\n\t\t\t\tif (out.charCodeAt(4) !== 100) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mask, m, a, s\n\t\t\t// clip-path, c, l, i\n\t\t\tcase 969:\n\t\t\tcase 942: {\n\t\t\t\treturn webkit + out + out\n\t\t\t}\n\t\t\t// appearance: a, p, p\n\t\t\tcase 978: {\n\t\t\t\treturn webkit + out + moz + out + out\n\t\t\t}\n\t\t\t// hyphens: h, y, p\n\t\t\t// user-select: u, s, e\n\t\t\tcase 1019:\n\t\t\tcase 983: {\n\t\t\t\treturn webkit + out + moz + out + ms + out + out\n\t\t\t}\n\t\t\t// background/backface-visibility, b, a, c\n\t\t\tcase 883: {\n\t\t\t\t// backface-visibility, -\n\t\t\t\tif (out.charCodeAt(8) === DASH) {\n\t\t\t\t\treturn webkit + out + out\n\t\t\t\t}\n\n\t\t\t\t// image-set(...)\n\t\t\t\tif (out.indexOf('image-set(', 11) > 0) {\n\t\t\t\t\treturn out.replace(imgsrcptn, '$1'+webkit+'$2') + out\n\t\t\t\t}\n\n\t\t\t\treturn out\n\t\t\t}\n\t\t\t// flex: f, l, e\n\t\t\tcase 932: {\n\t\t\t\tif (out.charCodeAt(4) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(5)) {\n\t\t\t\t\t\t// flex-grow, g\n\t\t\t\t\t\tcase 103: {\n\t\t\t\t\t\t\treturn webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-shrink, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('shrink', 'negative') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-basis, b\n\t\t\t\t\t\tcase 98: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('basis', 'preferred-size') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + out + out\n\t\t\t}\n\t\t\t// order: o, r, d\n\t\t\tcase 964: {\n\t\t\t\treturn webkit + out + ms + 'flex' + '-' + out + out\n\t\t\t}\n\t\t\t// justify-items/justify-content, j, u, s\n\t\t\tcase 1023: {\n\t\t\t\t// justify-content, c\n\t\t\t\tif (out.charCodeAt(8) !== 99) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tcache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')\n\t\t\t\treturn webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out\n\t\t\t}\n\t\t\t// cursor, c, u, r\n\t\t\tcase 1005: {\n\t\t\t\treturn cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out\n\t\t\t}\n\t\t\t// writing-mode, w, r, i\n\t\t\tcase 1000: {\n\t\t\t\tcache = out.substring(13).trim()\n\t\t\t\tindex = cache.indexOf('-') + 1\n\n\t\t\t\tswitch (cache.charCodeAt(0)+cache.charCodeAt(index)) {\n\t\t\t\t\t// vertical-lr\n\t\t\t\t\tcase 226: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// vertical-rl\n\t\t\t\t\tcase 232: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb-rl')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// horizontal-tb\n\t\t\t\t\tcase 220: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'lr')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + cache + out\n\t\t\t}\n\t\t\t// position: sticky\n\t\t\tcase 1017: {\n\t\t\t\tif (out.indexOf('sticky', 9) === -1) {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t}\n\t\t\t// display(flex/inline-flex/inline-box): d, i, s\n\t\t\tcase 975: {\n\t\t\t\tindex = (out = input).length - 10\n\t\t\t\tcache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()\n\n\t\t\t\tswitch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {\n\t\t\t\t\t// inline-\n\t\t\t\t\tcase 203: {\n\t\t\t\t\t\t// inline-box\n\t\t\t\t\t\tif (cache.charCodeAt(8) < 111) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// inline-box/sticky\n\t\t\t\t\tcase 115: {\n\t\t\t\t\t\tout = out.replace(cache, webkit+cache)+';'+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// inline-flex\n\t\t\t\t\t// flex\n\t\t\t\t\tcase 207:\n\t\t\t\t\tcase 102: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+\n\t\t\t\t\t\t\tout.replace(cache, webkit+cache)+';'+\n\t\t\t\t\t\t\tout.replace(cache, ms+cache+'box')+';'+\n\t\t\t\t\t\t\tout\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out + ';'\n\t\t\t}\n\t\t\t// align-items, align-center, align-self: a, l, i, -\n\t\t\tcase 938: {\n\t\t\t\tif (out.charCodeAt(5) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(6)) {\n\t\t\t\t\t\t// align-items, i\n\t\t\t\t\t\tcase 105: {\n\t\t\t\t\t\t\tcache = out.replace('-items', '')\n\t\t\t\t\t\t\treturn webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-self, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-content\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// min/max\n\t\t\tcase 973:\n\t\t\tcase 989: {\n\t\t\t\t// min-/max- height/width/block-size/inline-size\n\t\t\t\tif (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// height/width: min-content / width: max-content\n\t\t\tcase 931:\n\t\t\tcase 953: {\n\t\t\t\tif (dimensionptn.test(input) === true) {\n\t\t\t\t\t// stretch\n\t\t\t\t\tif ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)\n\t\t\t\t\t\treturn property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')\n\t\t\t\t\telse\n\t\t\t\t\t\treturn out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// transform, transition: t, r, a\n\t\t\tcase 962: {\n\t\t\t\tout = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out\n\n\t\t\t\t// transitions\n\t\t\t\tif (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {\n\t\t\t\t\treturn out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Vendor\n\t *\n\t * @param {string} content\n\t * @param {number} context\n\t * @return {boolean}\n\t */\n\tfunction vendor (content, context) {\n\t\tvar index = content.indexOf(context === 1 ? ':' : '{')\n\t\tvar key = content.substring(0, context !== 3 ? index : 10)\n\t\tvar value = content.substring(index + 1, content.length - 1)\n\n\t\treturn should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)\n\t}\n\n\t/**\n\t * Supports\n\t *\n\t * @param {string} match\n\t * @param {string} group\n\t * @return {string}\n\t */\n\tfunction supports (match, group) {\n\t\tvar out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))\n\n\t\treturn out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'\n\t}\n\n\t/**\n\t * Animation\n\t *\n\t * @param {string} input\n\t * @return {string}\n\t */\n\tfunction animation (input) {\n\t\tvar length = input.length\n\t\tvar index = input.indexOf(':', 9) + 1\n\t\tvar declare = input.substring(0, index).trim()\n\t\tvar out = input.substring(index, length-1).trim()\n\n\t\tswitch (input.charCodeAt(9)*keyed) {\n\t\t\tcase 0: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// animation-*, -\n\t\t\tcase DASH: {\n\t\t\t\t// animation-name, n\n\t\t\t\tif (input.charCodeAt(10) !== 110) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// animation/animation-name\n\t\t\tdefault: {\n\t\t\t\t// split in case of multiple animations\n\t\t\t\tvar list = out.split((out = '', animationptn))\n\n\t\t\t\tfor (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {\n\t\t\t\t\tvar value = list[i]\n\t\t\t\t\tvar items = value.split(propertiesptn)\n\n\t\t\t\t\twhile (value = items[index]) {\n\t\t\t\t\t\tvar peak = value.charCodeAt(0)\n\n\t\t\t\t\t\tif (keyed === 1 && (\n\t\t\t\t\t\t\t// letters\n\t\t\t\t\t\t\t(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||\n\t\t\t\t\t\t\t// dash but not in sequence i.e --\n\t\t\t\t\t\t\t(peak === DASH && value.charCodeAt(1) !== DASH)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t// not a number/function\n\t\t\t\t\t\t\tswitch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {\n\t\t\t\t\t\t\t\tcase 1: {\n\t\t\t\t\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\t\t\t\t\t// not a valid reserved keyword\n\t\t\t\t\t\t\t\t\t\tcase 'infinite': case 'alternate': case 'backwards': case 'running':\n\t\t\t\t\t\t\t\t\t\tcase 'normal': case 'forwards': case 'both': case 'none': case 'linear':\n\t\t\t\t\t\t\t\t\t\tcase 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':\n\t\t\t\t\t\t\t\t\t\tcase 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':\n\t\t\t\t\t\t\t\t\t\tcase 'initial': case 'unset': case 'step-start': case 'step-end': {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tvalue += key\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[index++] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tout += (i === 0 ? '' : ',') + items.join(' ')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tout = declare + out + ';'\n\n\t\tif (prefix === 1 || (prefix === 2 && vendor(out, 1)))\n\t\t\treturn webkit + out + out\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Isolate\n\t *\n\t * @param {Array<string>} current\n\t */\n\tfunction isolate (current) {\n\t\tfor (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {\n\t\t\t// split individual elements in a selector i.e h1 h2 === [h1, h2]\n\t\t\tvar elements = current[i].split(elementptn)\n\t\t\tvar out = ''\n\n\t\t\tfor (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {\n\t\t\t\t// empty element\n\t\t\t\tif ((size = (element = elements[j]).length) === 0 && l > 1) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\ttail = out.charCodeAt(out.length-1)\n\t\t\t\tcode = element.charCodeAt(0)\n\t\t\t\tpadding = ''\n\n\t\t\t\tif (j !== 0) {\n\t\t\t\t\t// determine if we need padding\n\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\tcase OPENPARENTHESES:  {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tpadding = ' '\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase AND: {\n\t\t\t\t\t\telement = padding + nscopealt\n\t\t\t\t\t}\n\t\t\t\t\tcase TILDE:\n\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\tcase PLUS:\n\t\t\t\t\tcase SPACE:\n\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\tswitch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {\n\t\t\t\t\t\t\t// :global\n\t\t\t\t\t\t\tcase 530: {\n\t\t\t\t\t\t\t\tif (escape > 0) {\n\t\t\t\t\t\t\t\t\telement = padding + element.substring(8, size - 1)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// :hover, :nth-child(), ...\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tif (j < 1 || elements[j-1].length < 1) {\n\t\t\t\t\t\t\t\t\telement = padding + nscopealt + element\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\tpadding = ''\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (size > 1 && element.indexOf(':') > 0) {\n\t\t\t\t\t\t\telement = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tout += element\n\t\t\t}\n\n\t\t\tselector[i] = out.replace(formatptn, '').trim()\n\t\t}\n\n\t\treturn selector\n\t}\n\n\t/**\n\t * Proxy\n\t *\n\t * @param {number} context\n\t * @param {string} content\n\t * @param {Array<string>} selectors\n\t * @param {Array<string>} parents\n\t * @param {number} line\n\t * @param {number} column\n\t * @param {number} length\n\t * @param {number} id\n\t * @param {number} depth\n\t * @param {number} at\n\t * @return {(string|void|*)}\n\t */\n\tfunction proxy (context, content, selectors, parents, line, column, length, id, depth, at) {\n\t\tfor (var i = 0, out = content, next; i < plugged; ++i) {\n\t\t\tswitch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {\n\t\t\t\tcase void 0:\n\t\t\t\tcase false:\n\t\t\t\tcase true:\n\t\t\t\tcase null: {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tout = next\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tswitch (out) {\n\t\t\tcase void 0:\n\t\t\tcase false:\n\t\t\tcase true:\n\t\t\tcase null:\n\t\t\tcase content: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn out\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} code\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction delimited (code, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\t// /*\n\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\tif (code === STAR) {\n\t\t\t\t\t\tif (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {\n\t\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// //\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\tif (code === FOWARDSLASH) {\n\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {number} find\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction match (type, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\tcase type: {\n\t\t\t\t\treturn i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * Minify\n\t *\n\t * @param {(string|*)} output\n\t * @return {string}\n\t */\n\tfunction minify (output) {\n\t\treturn output\n\t\t\t.replace(formatptn, '')\n\t\t\t.replace(beforeptn, '')\n\t\t\t.replace(afterptn, '$1')\n\t\t\t.replace(tailptn, '$1')\n\t\t\t.replace(whiteptn, ' ')\n\t}\n\n\t/**\n\t * Use\n\t *\n\t * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin\n\t */\n\tfunction use (plugin) {\n\t\tswitch (plugin) {\n\t\t\tcase void 0:\n\t\t\tcase null: {\n\t\t\t\tplugged = plugins.length = 0\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tswitch (plugin.constructor) {\n\t\t\t\t\tcase Array: {\n\t\t\t\t\t\tfor (var i = 0, length = plugin.length; i < length; ++i) {\n\t\t\t\t\t\t\tuse(plugin[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase Function: {\n\t\t\t\t\t\tplugins[plugged++] = plugin\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase Boolean: {\n\t\t\t\t\t\tunkwn = !!plugin|0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n \t\t}\n\n \t\treturn use\n\t}\n\n\t/**\n\t * Set\n\t *\n\t * @param {*} options\n\t */\n\tfunction set (options) {\n\t\tfor (var name in options) {\n\t\t\tvar value = options[name]\n\t\t\tswitch (name) {\n\t\t\t\tcase 'keyframe': keyed = value|0; break\n\t\t\t\tcase 'global': escape = value|0; break\n\t\t\t\tcase 'cascade': cascade = value|0; break\n\t\t\t\tcase 'compress': compress = value|0; break\n\t\t\t\tcase 'semicolon': semicolon = value|0; break\n\t\t\t\tcase 'preserve': preserve = value|0; break\n\t\t\t\tcase 'prefix':\n\t\t\t\t\tshould = null\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tprefix = 0\n\t\t\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\t\t\tprefix = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = 2\n\t\t\t\t\t\tshould = value\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn set\n\t}\n\n\t/**\n\t * Stylis\n\t *\n\t * @param {string} selector\n\t * @param {string} input\n\t * @return {*}\n\t */\n\tfunction stylis (selector, input) {\n\t\tif (this !== void 0 && this.constructor === stylis) {\n\t\t\treturn factory(selector)\n\t\t}\n\n\t\t// setup\n\t\tvar ns = selector\n\t\tvar code = ns.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (ns = ns.trim()).charCodeAt(0)\n\t\t}\n\n\t\t// keyframe/animation namespace\n\t\tif (keyed > 0) {\n\t\t\tkey = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')\n\t\t}\n\n\t\t// reset, used to assert if a plugin is moneky-patching the return value\n\t\tcode = 1\n\n\t\t// cascade/isolate\n\t\tif (cascade === 1) {\n\t\t\tnscope = ns\n\t\t} else {\n\t\t\tnscopealt = ns\n\t\t}\n\n\t\tvar selectors = [nscope]\n\t\tvar result\n\n\t\t// execute plugins, pre-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)\n\n\t\t\tif (result !== void 0 && typeof result === 'string') {\n\t\t\t\tinput = result\n\t\t\t}\n\t\t}\n\n\t\t// build\n\t\tvar output = compile(array, selectors, input, 0, 0)\n\n\t\t// execute plugins, post-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)\n\n\t\t\t// bypass minification\n\t\t\tif (result !== void 0 && typeof(output = result) !== 'string') {\n\t\t\t\tcode = 0\n\t\t\t}\n\t\t}\n\n\t\t// reset\n\t\tkey = ''\n\t\tnscope = ''\n\t\tnscopealt = ''\n\t\tpattern = 0\n\t\tline = 1\n\t\tcolumn = 1\n\n\t\treturn compress*code === 0 ? output : minify(output)\n\t}\n\n\tstylis['use'] = use\n\tstylis['set'] = set\n\n\tif (options !== void 0) {\n\t\tset(options)\n\t}\n\n\treturn stylis\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/stylis/stylis.js\n");

/***/ }),

/***/ "./code sync recursive \\.(t|j)s(x?)|\\.css$":
/*!***************************************!*\
  !*** ./code sync \.(t|j)s(x?)|\.css$ ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./Animate.tsx\": \"./code/Animate.tsx\",\n\t\"./App.ts\": \"./code/App.ts\",\n\t\"./AppTest.ts\": \"./code/AppTest.ts\",\n\t\"./Examples.ts\": \"./code/Examples.ts\",\n\t\"./Header.tsx\": \"./code/Header.tsx\",\n\t\"./Item.tsx\": \"./code/Item.tsx\",\n\t\"./ItemDetail.tsx\": \"./code/ItemDetail.tsx\",\n\t\"./Trigger.tsx\": \"./code/Trigger.tsx\",\n\t\"./actionBtn.tsx\": \"./code/actionBtn.tsx\",\n\t\"./canvas.tsx\": \"./code/canvas.tsx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlIHN5bmMgXFwuKHR8ailzKHgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcLih0fGopcyh4Pyl8XFwuY3NzJC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9BbmltYXRlLnRzeFwiOiBcIi4vY29kZS9BbmltYXRlLnRzeFwiLFxuXHRcIi4vQXBwLnRzXCI6IFwiLi9jb2RlL0FwcC50c1wiLFxuXHRcIi4vQXBwVGVzdC50c1wiOiBcIi4vY29kZS9BcHBUZXN0LnRzXCIsXG5cdFwiLi9FeGFtcGxlcy50c1wiOiBcIi4vY29kZS9FeGFtcGxlcy50c1wiLFxuXHRcIi4vSGVhZGVyLnRzeFwiOiBcIi4vY29kZS9IZWFkZXIudHN4XCIsXG5cdFwiLi9JdGVtLnRzeFwiOiBcIi4vY29kZS9JdGVtLnRzeFwiLFxuXHRcIi4vSXRlbURldGFpbC50c3hcIjogXCIuL2NvZGUvSXRlbURldGFpbC50c3hcIixcblx0XCIuL1RyaWdnZXIudHN4XCI6IFwiLi9jb2RlL1RyaWdnZXIudHN4XCIsXG5cdFwiLi9hY3Rpb25CdG4udHN4XCI6IFwiLi9jb2RlL2FjdGlvbkJ0bi50c3hcIixcblx0XCIuL2NhbnZhcy50c3hcIjogXCIuL2NvZGUvY2FudmFzLnRzeFwiXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xuXHRyZXR1cm4gbW9kdWxlO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHR2YXIgaWQgPSBtYXBbcmVxXTtcblx0aWYoIShpZCArIDEpKSB7IC8vIGNoZWNrIGZvciBudW1iZXIgb3Igc3RyaW5nXG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoJ0Nhbm5vdCBmaW5kIG1vZHVsZSBcIicgKyByZXEgKyAnXCIuJyk7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIGlkO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IFwiLi9jb2RlIHN5bmMgcmVjdXJzaXZlIFxcXFwuKHR8ailzKHg/KXxcXFxcLmNzcyRcIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./code sync recursive \\.(t|j)s(x?)|\\.css$\n");

/***/ }),

/***/ "./code/Animate.tsx":
/*!**************************!*\
  !*** ./code/Animate.tsx ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst styled_components_1 = __webpack_require__(/*! styled-components */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\");\nconst AnimateFrame = styled_components_1.default(framer_1.Frame) `\n  position: absolute;\n  top: 0;\n  z-index: -1;\n  width: 100% !important;\n  height: 100% !important;\n\n  color: sandybrown;\n  background: rgba(244, 164, 96, 0.6) !important;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n`;\nclass Animate extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.switch = framer_1.PropertyStore({ left: 0, scale: 1 }, true);\n    }\n    componentWillReceiveProps(nextProps) {\n        window[\"__checkBudget__\"]();\n        if (nextProps.playing !== this.props.playing) {\n            const springOptions = {\n                tension: this.props.tension,\n                friction: this.props.friction,\n            };\n            const left = this.props.left;\n            const scale = this.props.scale;\n            framer_1.animate.spring(this.switch, { left, scale }, springOptions);\n        }\n    }\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(AnimateFrame, { onTap: this.props.onTap, scale: this.switch.scale, left: this.switch.left }, this.props.text));\n    }\n}\n// Set default properties\nAnimate.defaultProps = {\n    text: 'Animate',\n    left: 100,\n    scale: 2.6,\n    tension: 500,\n    friction: 100,\n    children: null,\n};\n// Items shown in property panel\nAnimate.propertyControls = {\n    text: { type: framer_1.ControlType.String, title: 'Text' },\n    left: { type: framer_1.ControlType.Number, title: 'Left' },\n    scale: { type: framer_1.ControlType.Number, title: 'Scale' },\n    tension: { type: framer_1.ControlType.Number, title: 'Tension' },\n    friction: { type: framer_1.ControlType.Number, title: 'Friction' },\n    children: { type: framer_1.ControlType.Children, title: 'Children' },\n};\nexports.Animate = Animate;\nexports.__info__ = [{ name: \"Animate\", children: true, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FuaW1hdGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxvQkFBb0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsY0FBYztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCw0RUFBNEU7QUFDL0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFtRDtBQUM5RCxXQUFXLG1EQUFtRDtBQUM5RCxZQUFZLG9EQUFvRDtBQUNoRSxjQUFjLHNEQUFzRDtBQUNwRSxlQUFlLHVEQUF1RDtBQUN0RSxlQUFlLHlEQUF5RDtBQUN4RTtBQUNBO0FBQ0EscUJBQXFCLHFEQUFxRCIsImZpbGUiOiIuL2NvZGUvQW5pbWF0ZS50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3Qgc3R5bGVkX2NvbXBvbmVudHNfMSA9IHJlcXVpcmUoXCJzdHlsZWQtY29tcG9uZW50c1wiKTtcbmNvbnN0IEFuaW1hdGVGcmFtZSA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdChmcmFtZXJfMS5GcmFtZSkgYFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgei1pbmRleDogLTE7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuXG4gIGNvbG9yOiBzYW5keWJyb3duO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI0NCwgMTY0LCA5NiwgMC42KSAhaW1wb3J0YW50O1xuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcbmNsYXNzIEFuaW1hdGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnN3aXRjaCA9IGZyYW1lcl8xLlByb3BlcnR5U3RvcmUoeyBsZWZ0OiAwLCBzY2FsZTogMSB9LCB0cnVlKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIGlmIChuZXh0UHJvcHMucGxheWluZyAhPT0gdGhpcy5wcm9wcy5wbGF5aW5nKSB7XG4gICAgICAgICAgICBjb25zdCBzcHJpbmdPcHRpb25zID0ge1xuICAgICAgICAgICAgICAgIHRlbnNpb246IHRoaXMucHJvcHMudGVuc2lvbixcbiAgICAgICAgICAgICAgICBmcmljdGlvbjogdGhpcy5wcm9wcy5mcmljdGlvbixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBsZWZ0ID0gdGhpcy5wcm9wcy5sZWZ0O1xuICAgICAgICAgICAgY29uc3Qgc2NhbGUgPSB0aGlzLnByb3BzLnNjYWxlO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcodGhpcy5zd2l0Y2gsIHsgbGVmdCwgc2NhbGUgfSwgc3ByaW5nT3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEFuaW1hdGVGcmFtZSwgeyBvblRhcDogdGhpcy5wcm9wcy5vblRhcCwgc2NhbGU6IHRoaXMuc3dpdGNoLnNjYWxlLCBsZWZ0OiB0aGlzLnN3aXRjaC5sZWZ0IH0sIHRoaXMucHJvcHMudGV4dCkpO1xuICAgIH1cbn1cbi8vIFNldCBkZWZhdWx0IHByb3BlcnRpZXNcbkFuaW1hdGUuZGVmYXVsdFByb3BzID0ge1xuICAgIHRleHQ6ICdBbmltYXRlJyxcbiAgICBsZWZ0OiAxMDAsXG4gICAgc2NhbGU6IDIuNixcbiAgICB0ZW5zaW9uOiA1MDAsXG4gICAgZnJpY3Rpb246IDEwMCxcbiAgICBjaGlsZHJlbjogbnVsbCxcbn07XG4vLyBJdGVtcyBzaG93biBpbiBwcm9wZXJ0eSBwYW5lbFxuQW5pbWF0ZS5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRleHQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogJ1RleHQnIH0sXG4gICAgbGVmdDogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsIHRpdGxlOiAnTGVmdCcgfSxcbiAgICBzY2FsZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsIHRpdGxlOiAnU2NhbGUnIH0sXG4gICAgdGVuc2lvbjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsIHRpdGxlOiAnVGVuc2lvbicgfSxcbiAgICBmcmljdGlvbjogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5OdW1iZXIsIHRpdGxlOiAnRnJpY3Rpb24nIH0sXG4gICAgY2hpbGRyZW46IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuQ2hpbGRyZW4sIHRpdGxlOiAnQ2hpbGRyZW4nIH0sXG59O1xuZXhwb3J0cy5BbmltYXRlID0gQW5pbWF0ZTtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIkFuaW1hdGVcIiwgY2hpbGRyZW46IHRydWUsIHR5cGU6IFwiY29tcG9uZW50XCIgfV07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./code/Animate.tsx\n");

/***/ }),

/***/ "./code/App.ts":
/*!*********************!*\
  !*** ./code/App.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst ruucm_util_1 = __webpack_require__(/*! ruucm-util */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js\");\nconst data = framer_1.Data({\n    cardFocus: false,\n    scale: framer_1.Animatable(1),\n    show: false,\n    text: 'yap',\n});\nexports.Scale = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        scale: data.scale,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            ruucm_util_1.log('scale!');\n            data.cardFocus = !data.cardFocus;\n            ruucm_util_1.log('data.cardFocus', data.cardFocus);\n            ruucm_util_1.log(data.cardFocus);\n        },\n    };\n};\nexports.actionBtn = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        text: data.text,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            data.text = 'ahahah';\n            data.show = !data.show;\n            ruucm_util_1.log('actionBtn onTap');\n        },\n    };\n};\nexports.Item = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        hey: 'aas',\n        show: data.show,\n    };\n};\nexports.__info__ = [{ name: \"Scale\", type: \"override\" }, { name: \"actionBtn\", type: \"override\" }, { name: \"Item\", type: \"override\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtDQUFrQyxHQUFHLHNDQUFzQyxHQUFHLGlDQUFpQyIsImZpbGUiOiIuL2NvZGUvQXBwLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jb25zdCBydXVjbV91dGlsXzEgPSByZXF1aXJlKFwicnV1Y20tdXRpbFwiKTtcbmNvbnN0IGRhdGEgPSBmcmFtZXJfMS5EYXRhKHtcbiAgICBjYXJkRm9jdXM6IGZhbHNlLFxuICAgIHNjYWxlOiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLFxuICAgIHNob3c6IGZhbHNlLFxuICAgIHRleHQ6ICd5YXAnLFxufSk7XG5leHBvcnRzLlNjYWxlID0gKCkgPT4ge1xuICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHNjYWxlOiBkYXRhLnNjYWxlLFxuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgcnV1Y21fdXRpbF8xLmxvZygnc2NhbGUhJyk7XG4gICAgICAgICAgICBkYXRhLmNhcmRGb2N1cyA9ICFkYXRhLmNhcmRGb2N1cztcbiAgICAgICAgICAgIHJ1dWNtX3V0aWxfMS5sb2coJ2RhdGEuY2FyZEZvY3VzJywgZGF0YS5jYXJkRm9jdXMpO1xuICAgICAgICAgICAgcnV1Y21fdXRpbF8xLmxvZyhkYXRhLmNhcmRGb2N1cyk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLmFjdGlvbkJ0biA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB0ZXh0OiBkYXRhLnRleHQsXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBkYXRhLnRleHQgPSAnYWhhaGFoJztcbiAgICAgICAgICAgIGRhdGEuc2hvdyA9ICFkYXRhLnNob3c7XG4gICAgICAgICAgICBydXVjbV91dGlsXzEubG9nKCdhY3Rpb25CdG4gb25UYXAnKTtcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbmV4cG9ydHMuSXRlbSA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBoZXk6ICdhYXMnLFxuICAgICAgICBzaG93OiBkYXRhLnNob3csXG4gICAgfTtcbn07XG5leHBvcnRzLl9faW5mb19fID0gW3sgbmFtZTogXCJTY2FsZVwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfSwgeyBuYW1lOiBcImFjdGlvbkJ0blwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfSwgeyBuYW1lOiBcIkl0ZW1cIiwgdHlwZTogXCJvdmVycmlkZVwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/App.ts\n");

/***/ }),

/***/ "./code/AppTest.ts":
/*!*************************!*\
  !*** ./code/AppTest.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst data = framer_1.Data({\n    toggle: true,\n    scale: framer_1.Animatable(1),\n    opacity: framer_1.Animatable(1),\n    rotation: framer_1.Animatable(0),\n    playing: false,\n});\nexports.Animate = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        playing: data.playing,\n    };\n};\nexports.Scale = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        scale: data.scale,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            data.scale.set(0.6);\n            framer_1.animate.spring(data.scale, 1);\n        },\n    };\n};\nexports.makeScale = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        onTap() {\n            window[\"__checkBudget__\"]();\n            data.playing = !data.playing;\n        },\n    };\n};\nexports.Rotate = props => {\n    window[\"__checkBudget__\"]();\n    data.rotation.set(props.rotation);\n    return {\n        rotation: data.rotation,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.spring(data.rotation, data.rotation.get() + 90, {\n                tension: 250,\n                friction: 20,\n            });\n        },\n    };\n};\nexports.Fade = props => {\n    window[\"__checkBudget__\"]();\n    data.opacity.set(props.opacity);\n    return {\n        opacity: data.opacity,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.linear(data.opacity, 0, 0.2);\n        },\n    };\n};\nexports.SwitchOutput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        opacity: data.opacity,\n        rotation: data.rotation,\n    };\n};\nexports.SwitchInput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        onTap() {\n            window[\"__checkBudget__\"]();\n            const toggle = data.toggle;\n            framer_1.animate.spring({ opacity: data.opacity, rotation: data.rotation }, {\n                opacity: toggle ? 0.5 : 1,\n                rotation: toggle ? 360 : 0,\n            }, { tension: 200, friction: 20 });\n            data.toggle = !toggle;\n        },\n    };\n};\nexports.__info__ = [{ name: \"Animate\", type: \"override\" }, { name: \"Scale\", type: \"override\" }, { name: \"makeScale\", type: \"override\" }, { name: \"Rotate\", type: \"override\" }, { name: \"Fade\", type: \"override\" }, { name: \"SwitchOutput\", type: \"override\" }, { name: \"SwitchInput\", type: \"override\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0FwcFRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsaURBQWlEO0FBQ3RGO0FBQ0E7QUFDQSxhQUFhLEdBQUcsNkJBQTZCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsb0NBQW9DLEdBQUcsa0NBQWtDLEdBQUcsc0NBQXNDLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcseUNBQXlDLEdBQUcsd0NBQXdDIiwiZmlsZSI6Ii4vY29kZS9BcHBUZXN0LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jb25zdCBkYXRhID0gZnJhbWVyXzEuRGF0YSh7XG4gICAgdG9nZ2xlOiB0cnVlLFxuICAgIHNjYWxlOiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLFxuICAgIG9wYWNpdHk6IGZyYW1lcl8xLkFuaW1hdGFibGUoMSksXG4gICAgcm90YXRpb246IGZyYW1lcl8xLkFuaW1hdGFibGUoMCksXG4gICAgcGxheWluZzogZmFsc2UsXG59KTtcbmV4cG9ydHMuQW5pbWF0ZSA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwbGF5aW5nOiBkYXRhLnBsYXlpbmcsXG4gICAgfTtcbn07XG5leHBvcnRzLlNjYWxlID0gKCkgPT4ge1xuICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHNjYWxlOiBkYXRhLnNjYWxlLFxuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgZGF0YS5zY2FsZS5zZXQoMC42KTtcbiAgICAgICAgICAgIGZyYW1lcl8xLmFuaW1hdGUuc3ByaW5nKGRhdGEuc2NhbGUsIDEpO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5tYWtlU2NhbGUgPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25UYXAoKSB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIGRhdGEucGxheWluZyA9ICFkYXRhLnBsYXlpbmc7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlJvdGF0ZSA9IHByb3BzID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICBkYXRhLnJvdGF0aW9uLnNldChwcm9wcy5yb3RhdGlvbik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcm90YXRpb246IGRhdGEucm90YXRpb24sXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyhkYXRhLnJvdGF0aW9uLCBkYXRhLnJvdGF0aW9uLmdldCgpICsgOTAsIHtcbiAgICAgICAgICAgICAgICB0ZW5zaW9uOiAyNTAsXG4gICAgICAgICAgICAgICAgZnJpY3Rpb246IDIwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLkZhZGUgPSBwcm9wcyA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgZGF0YS5vcGFjaXR5LnNldChwcm9wcy5vcGFjaXR5KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLmxpbmVhcihkYXRhLm9wYWNpdHksIDAsIDAuMik7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlN3aXRjaE91dHB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIHJvdGF0aW9uOiBkYXRhLnJvdGF0aW9uLFxuICAgIH07XG59O1xuZXhwb3J0cy5Td2l0Y2hJbnB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gZGF0YS50b2dnbGU7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyh7IG9wYWNpdHk6IGRhdGEub3BhY2l0eSwgcm90YXRpb246IGRhdGEucm90YXRpb24gfSwge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IHRvZ2dsZSA/IDAuNSA6IDEsXG4gICAgICAgICAgICAgICAgcm90YXRpb246IHRvZ2dsZSA/IDM2MCA6IDAsXG4gICAgICAgICAgICB9LCB7IHRlbnNpb246IDIwMCwgZnJpY3Rpb246IDIwIH0pO1xuICAgICAgICAgICAgZGF0YS50b2dnbGUgPSAhdG9nZ2xlO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiQW5pbWF0ZVwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfSwgeyBuYW1lOiBcIlNjYWxlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwibWFrZVNjYWxlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiUm90YXRlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiRmFkZVwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfSwgeyBuYW1lOiBcIlN3aXRjaE91dHB1dFwiLCB0eXBlOiBcIm92ZXJyaWRlXCIgfSwgeyBuYW1lOiBcIlN3aXRjaElucHV0XCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./code/AppTest.ts\n");

/***/ }),

/***/ "./code/Examples.ts":
/*!**************************!*\
  !*** ./code/Examples.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst data = framer_1.Data({ toggle: true, scale: framer_1.Animatable(1), opacity: framer_1.Animatable(1), rotation: framer_1.Animatable(0) });\nexports.Scale = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        scale: data.scale,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            data.scale.set(0.6);\n            framer_1.animate.spring(data.scale, 1);\n        },\n    };\n};\nexports.Rotate = props => {\n    window[\"__checkBudget__\"]();\n    data.rotation.set(props.rotation);\n    return {\n        rotation: data.rotation,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.spring(data.rotation, data.rotation.get() + 90, {\n                tension: 250,\n                friction: 20,\n            });\n        },\n    };\n};\nexports.Fade = props => {\n    window[\"__checkBudget__\"]();\n    data.opacity.set(props.opacity);\n    return {\n        opacity: data.opacity,\n        onTap() {\n            window[\"__checkBudget__\"]();\n            framer_1.animate.linear(data.opacity, 0, 0.2);\n        },\n    };\n};\nexports.SwitchOutput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        opacity: data.opacity,\n        rotation: data.rotation,\n    };\n};\nexports.SwitchInput = () => {\n    window[\"__checkBudget__\"]();\n    return {\n        onTap() {\n            window[\"__checkBudget__\"]();\n            const toggle = data.toggle;\n            framer_1.animate.spring({ opacity: data.opacity, rotation: data.rotation }, {\n                opacity: toggle ? 0.5 : 1,\n                rotation: toggle ? 360 : 0,\n            }, { tension: 200, friction: 20 });\n            data.toggle = !toggle;\n        },\n    };\n};\nexports.__info__ = [{ name: \"Scale\", type: \"override\" }, { name: \"Rotate\", type: \"override\" }, { name: \"Fade\", type: \"override\" }, { name: \"SwitchOutput\", type: \"override\" }, { name: \"SwitchInput\", type: \"override\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0V4YW1wbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQSw0QkFBNEIsaUhBQWlIO0FBQzdJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsaURBQWlEO0FBQ3RGO0FBQ0E7QUFDQSxhQUFhLEdBQUcsNkJBQTZCO0FBQzdDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQkFBcUIsa0NBQWtDLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcseUNBQXlDLEdBQUcsd0NBQXdDIiwiZmlsZSI6Ii4vY29kZS9FeGFtcGxlcy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgZGF0YSA9IGZyYW1lcl8xLkRhdGEoeyB0b2dnbGU6IHRydWUsIHNjYWxlOiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCBvcGFjaXR5OiBmcmFtZXJfMS5BbmltYXRhYmxlKDEpLCByb3RhdGlvbjogZnJhbWVyXzEuQW5pbWF0YWJsZSgwKSB9KTtcbmV4cG9ydHMuU2NhbGUgPSAoKSA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NhbGU6IGRhdGEuc2NhbGUsXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBkYXRhLnNjYWxlLnNldCgwLjYpO1xuICAgICAgICAgICAgZnJhbWVyXzEuYW5pbWF0ZS5zcHJpbmcoZGF0YS5zY2FsZSwgMSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlJvdGF0ZSA9IHByb3BzID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICBkYXRhLnJvdGF0aW9uLnNldChwcm9wcy5yb3RhdGlvbik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcm90YXRpb246IGRhdGEucm90YXRpb24sXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyhkYXRhLnJvdGF0aW9uLCBkYXRhLnJvdGF0aW9uLmdldCgpICsgOTAsIHtcbiAgICAgICAgICAgICAgICB0ZW5zaW9uOiAyNTAsXG4gICAgICAgICAgICAgICAgZnJpY3Rpb246IDIwLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLkZhZGUgPSBwcm9wcyA9PiB7XG4gICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgZGF0YS5vcGFjaXR5LnNldChwcm9wcy5vcGFjaXR5KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIG9uVGFwKCkge1xuICAgICAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLmxpbmVhcihkYXRhLm9wYWNpdHksIDAsIDAuMik7XG4gICAgICAgIH0sXG4gICAgfTtcbn07XG5leHBvcnRzLlN3aXRjaE91dHB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvcGFjaXR5OiBkYXRhLm9wYWNpdHksXG4gICAgICAgIHJvdGF0aW9uOiBkYXRhLnJvdGF0aW9uLFxuICAgIH07XG59O1xuZXhwb3J0cy5Td2l0Y2hJbnB1dCA9ICgpID0+IHtcbiAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblRhcCgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICAgICAgY29uc3QgdG9nZ2xlID0gZGF0YS50b2dnbGU7XG4gICAgICAgICAgICBmcmFtZXJfMS5hbmltYXRlLnNwcmluZyh7IG9wYWNpdHk6IGRhdGEub3BhY2l0eSwgcm90YXRpb246IGRhdGEucm90YXRpb24gfSwge1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IHRvZ2dsZSA/IDAuNSA6IDEsXG4gICAgICAgICAgICAgICAgcm90YXRpb246IHRvZ2dsZSA/IDM2MCA6IDAsXG4gICAgICAgICAgICB9LCB7IHRlbnNpb246IDIwMCwgZnJpY3Rpb246IDIwIH0pO1xuICAgICAgICAgICAgZGF0YS50b2dnbGUgPSAhdG9nZ2xlO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiU2NhbGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJSb3RhdGVcIiwgdHlwZTogXCJvdmVycmlkZVwiIH0sIHsgbmFtZTogXCJGYWRlXCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoT3V0cHV0XCIsIHR5cGU6IFwib3ZlcnJpZGVcIiB9LCB7IG5hbWU6IFwiU3dpdGNoSW5wdXRcIiwgdHlwZTogXCJvdmVycmlkZVwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/Examples.ts\n");

/***/ }),

/***/ "./code/Header.tsx":
/*!*************************!*\
  !*** ./code/Header.tsx ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst styled_components_1 = __webpack_require__(/*! styled-components */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\");\nconst Wrap = styled_components_1.default.div `\n  padding: 35px 16px 30px 16px;\n`;\nconst Label = styled_components_1.default.div `\n  color: #908f94;\n  font-size: 13px;\n  font-family: Helvetica;\n  margin-bottom: 5px;\n`;\nconst Title = styled_components_1.default.div `\n  font-size: 30px;\n  font-family: Helvetica;\n  font-weight: 900;\n`;\nclass Header extends React.Component {\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(Wrap, null,\n            React.createElement(Label, null, this.props.label),\n            React.createElement(Title, null, this.props.title)));\n    }\n}\n// Set default properties\nHeader.defaultProps = {\n    title: '',\n    label: '',\n};\n// Items shown in property panel\nHeader.propertyControls = {\n    title: { type: framer_1.ControlType.String, title: 'Title' },\n    label: { type: framer_1.ControlType.String, title: 'Label' },\n};\nexports.Header = Header;\nexports.__info__ = [{ name: \"Header\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0hlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBb0Q7QUFDaEUsWUFBWSxvREFBb0Q7QUFDaEU7QUFDQTtBQUNBLHFCQUFxQixxREFBcUQiLCJmaWxlIjoiLi9jb2RlL0hlYWRlci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3Qgc3R5bGVkX2NvbXBvbmVudHNfMSA9IHJlcXVpcmUoXCJzdHlsZWQtY29tcG9uZW50c1wiKTtcbmNvbnN0IFdyYXAgPSBzdHlsZWRfY29tcG9uZW50c18xLmRlZmF1bHQuZGl2IGBcbiAgcGFkZGluZzogMzVweCAxNnB4IDMwcHggMTZweDtcbmA7XG5jb25zdCBMYWJlbCA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdC5kaXYgYFxuICBjb2xvcjogIzkwOGY5NDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LWZhbWlseTogSGVsdmV0aWNhO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG5gO1xuY29uc3QgVGl0bGUgPSBzdHlsZWRfY29tcG9uZW50c18xLmRlZmF1bHQuZGl2IGBcbiAgZm9udC1zaXplOiAzMHB4O1xuICBmb250LWZhbWlseTogSGVsdmV0aWNhO1xuICBmb250LXdlaWdodDogOTAwO1xuYDtcbmNsYXNzIEhlYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXAsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExhYmVsLCBudWxsLCB0aGlzLnByb3BzLmxhYmVsKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGl0bGUsIG51bGwsIHRoaXMucHJvcHMudGl0bGUpKSk7XG4gICAgfVxufVxuLy8gU2V0IGRlZmF1bHQgcHJvcGVydGllc1xuSGVhZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0aXRsZTogJycsXG4gICAgbGFiZWw6ICcnLFxufTtcbi8vIEl0ZW1zIHNob3duIGluIHByb3BlcnR5IHBhbmVsXG5IZWFkZXIucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB0aXRsZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiAnVGl0bGUnIH0sXG4gICAgbGFiZWw6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogJ0xhYmVsJyB9LFxufTtcbmV4cG9ydHMuSGVhZGVyID0gSGVhZGVyO1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiSGVhZGVyXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./code/Header.tsx\n");

/***/ }),

/***/ "./code/Item.tsx":
/*!***********************!*\
  !*** ./code/Item.tsx ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst styled_components_1 = __webpack_require__(/*! styled-components */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\");\nconst ruucm_util_1 = __webpack_require__(/*! ruucm-util */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js\");\n// import { constants } from '../toolbox'\n// const { color, animation } = constants\n// const { fadeIn, fadeOut } = animation\nconst Wrap = styled_components_1.default.div `\n  position: relative;\n  ${props => props.isShowing &&\n    styled_components_1.css `\n      ${MainImg} {\n        border-radius: 0;\n      }\n    `};\n  ${props => props.focused &&\n    styled_components_1.css `\n      ${MainImg} {\n        height: 700px !important;\n      }\n    `};\n`;\nconst Label = styled_components_1.default.div `\n  font-family: Helvetica;\n  color: rgba(0, 0, 0, 0.35);\n  font-size: 13px;\n  font-weight: 900;\n  margin-bottom: 12px;\n`;\nconst Title = styled_components_1.default.div `\n  font-family: Helvetica;\n  color: white;\n  font-size: 25px;\n  font-weight: 900;\n`;\nconst StyledFrame = styled_components_1.default(framer_1.Frame) `\n  position: absolute;\n  top: 0;\n  z-index: -1;\n  width: 100% !important;\n`;\nconst MainImg = styled_components_1.default(framer_1.Frame) `\n  position: relative !important;\n  margin: 0 auto;\n  transform: none !important;\n  border-radius: 20px;\n  -moz-transition: border-radius 2s;\n  -o-transition: border-radius 2s;\n  -webkit-transition: border-radius 2s;\n  transition: border-radius 2s;\n\n  height: 400px !important;\n  padding: 25px;\n  ${props => props.src &&\n    styled_components_1.css `\n      background: center / cover no-repeat url(${props.src});\n    `};\n`;\nconst Desc = styled_components_1.default.div `\n  background: white;\n`;\nconst CloseButton = styled_components_1.default.button `\n  position: absolute;\n  right: 0;\n`;\nclass Item extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            show: false,\n        };\n        this.screenWidth = 375;\n        this.top = framer_1.Animatable(0);\n        this.left = framer_1.Animatable(0);\n        this.scale = framer_1.Animatable(1);\n        this.opacity = framer_1.Animatable(0);\n        this.width = framer_1.Animatable(this.screenWidth * 0.9);\n        // componentDidMount() {\n        //   log('window.screen', window.screen)\n        //   log('screen', screen)\n        //   log('screen.width * 0.9', screen.width * 0.9)\n        // }\n        this.shrink = () => __awaiter(this, void 0, void 0, function* () {\n            window[\"__checkBudget__\"]();\n            framer_1.animate(this.width, this.screenWidth * 0.76).finished;\n        });\n        this.showDetail = () => __awaiter(this, void 0, void 0, function* () {\n            window[\"__checkBudget__\"]();\n            framer_1.animate(this.top, -100).finished;\n            framer_1.animate(this.width, this.screenWidth * 1).finished;\n            this.setState({ show: true });\n            framer_1.animate(this.opacity, 1).finished;\n        });\n        this.closeDetail = () => __awaiter(this, void 0, void 0, function* () {\n            window[\"__checkBudget__\"]();\n            framer_1.animate(this.opacity, 0).finished;\n            this.setState({ show: false });\n            framer_1.animate(this.top, 0).finished;\n            framer_1.animate(this.width, this.screenWidth * 0.9).finished;\n        });\n    }\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(Wrap, { isShowing: this.props.show, onMouseUp: this.props.show ? void 0 : this.showDetail, onMouseDown: this.props.show ? void 0 : this.shrink },\n            ruucm_util_1.log('this.props(Item)', this.props),\n            this.props.show ? (React.createElement(CloseButton, { onClick: this.closeDetail }, \"close\")) : (''),\n            React.createElement(StyledFrame, { top: this.top, isShowing: this.props.show },\n                React.createElement(MainImg, { width: this.width, src: this.props.mainImg },\n                    React.createElement(Label, null, this.props.label),\n                    React.createElement(Title, { dangerouslySetInnerHTML: {\n                            __html: this.props.title,\n                        } })),\n                this.props.show ? (React.createElement(framer_1.Frame, { opacity: this.opacity },\n                    React.createElement(Desc, null, this.props.desc))) : (''))));\n    }\n}\n// Set default properties\nItem.defaultProps = {\n    title: '',\n    label: '',\n    mainImg: 'https://cdn.vox-cdn.com/uploads/chorus_image/image/55159829/12.0.jpg',\n    desc: '',\n};\n// Items shown in property panel\nItem.propertyControls = {\n    title: { type: framer_1.ControlType.String, title: 'Title' },\n    label: { type: framer_1.ControlType.String, title: 'Label' },\n    mainImg: { type: framer_1.ControlType.String, title: 'Main Image' },\n    desc: { type: framer_1.ControlType.String, title: 'Description' },\n};\nexports.Item = Item;\nexports.__info__ = [{ name: \"Item\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./code/Item.tsx\n");

/***/ }),

/***/ "./code/ItemDetail.tsx":
/*!*****************************!*\
  !*** ./code/ItemDetail.tsx ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst styled_components_1 = __webpack_require__(/*! styled-components */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\");\nconst StyledFrame = styled_components_1.default(framer_1.Frame) `\n  background: red;\n  width: 100% !important;\n`;\nconst Wrap = styled_components_1.default.div ``;\nconst Label = styled_components_1.default.div ``;\nconst Title = styled_components_1.default.div ``;\nconst MainImg = styled_components_1.default.img `\n  width: 100%;\n`;\nclass ItemDetail extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.left = framer_1.Animatable(0);\n        this.onClick = () => __awaiter(this, void 0, void 0, function* () {\n            window[\"__checkBudget__\"]();\n            yield framer_1.animate(this.left, 200).finished;\n            yield framer_1.animate(this.left, 0).finished;\n        });\n        this.componentDidMount = () => __awaiter(this, void 0, void 0, function* () {\n            window[\"__checkBudget__\"]();\n        });\n    }\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(StyledFrame, { left: this.left, onClick: this.onClick },\n            React.createElement(Wrap, null,\n                React.createElement(Label, null, this.props.label),\n                React.createElement(Title, { dangerouslySetInnerHTML: {\n                        __html: this.props.title,\n                    } }),\n                React.createElement(MainImg, { src: this.props.mainImg }))));\n    }\n}\n// Set default properties\nItemDetail.defaultProps = {\n    title: '',\n    label: '',\n    mainImg: 'https://cdn.vox-cdn.com/uploads/chorus_image/image/55159829/12.0.jpg',\n};\n// Items shown in property panel\nItemDetail.propertyControls = {\n    title: { type: framer_1.ControlType.String, title: 'Title' },\n    label: { type: framer_1.ControlType.String, title: 'Label' },\n    mainImg: { type: framer_1.ControlType.String, title: 'Main Image' },\n};\nexports.ItemDetail = ItemDetail;\nexports.__info__ = [{ name: \"ItemDetail\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL0l0ZW1EZXRhaWwudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxNQUFNLDZCQUE2QixFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ2pHLGtDQUFrQyxNQUFNLGlDQUFpQyxFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ3BHLCtCQUErQixpRUFBaUUsdUJBQXVCLEVBQUUsNEJBQTRCO0FBQ3JKO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELHlDQUF5QztBQUMzRjtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EscUJBQXFCLEVBQUU7QUFDdkIsOENBQThDLDBCQUEwQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQW9EO0FBQ2hFLFlBQVksb0RBQW9EO0FBQ2hFLGNBQWMseURBQXlEO0FBQ3ZFO0FBQ0E7QUFDQSxxQkFBcUIseURBQXlEIiwiZmlsZSI6Ii4vY29kZS9JdGVtRGV0YWlsLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IGZyYW1lcl8xID0gcmVxdWlyZShcImZyYW1lclwiKTtcbmNvbnN0IHN0eWxlZF9jb21wb25lbnRzXzEgPSByZXF1aXJlKFwic3R5bGVkLWNvbXBvbmVudHNcIik7XG5jb25zdCBTdHlsZWRGcmFtZSA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdChmcmFtZXJfMS5GcmFtZSkgYFxuICBiYWNrZ3JvdW5kOiByZWQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG5gO1xuY29uc3QgV3JhcCA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdC5kaXYgYGA7XG5jb25zdCBMYWJlbCA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdC5kaXYgYGA7XG5jb25zdCBUaXRsZSA9IHN0eWxlZF9jb21wb25lbnRzXzEuZGVmYXVsdC5kaXYgYGA7XG5jb25zdCBNYWluSW1nID0gc3R5bGVkX2NvbXBvbmVudHNfMS5kZWZhdWx0LmltZyBgXG4gIHdpZHRoOiAxMDAlO1xuYDtcbmNsYXNzIEl0ZW1EZXRhaWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmxlZnQgPSBmcmFtZXJfMS5BbmltYXRhYmxlKDApO1xuICAgICAgICB0aGlzLm9uQ2xpY2sgPSAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgICAgIHlpZWxkIGZyYW1lcl8xLmFuaW1hdGUodGhpcy5sZWZ0LCAyMDApLmZpbmlzaGVkO1xuICAgICAgICAgICAgeWllbGQgZnJhbWVyXzEuYW5pbWF0ZSh0aGlzLmxlZnQsIDApLmZpbmlzaGVkO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb21wb25lbnREaWRNb3VudCA9ICgpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcIl9fY2hlY2tCdWRnZXRfX1wiXSgpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFN0eWxlZEZyYW1lLCB7IGxlZnQ6IHRoaXMubGVmdCwgb25DbGljazogdGhpcy5vbkNsaWNrIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXAsIG51bGwsXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMYWJlbCwgbnVsbCwgdGhpcy5wcm9wcy5sYWJlbCksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChUaXRsZSwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19odG1sOiB0aGlzLnByb3BzLnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICB9IH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWFpbkltZywgeyBzcmM6IHRoaXMucHJvcHMubWFpbkltZyB9KSkpKTtcbiAgICB9XG59XG4vLyBTZXQgZGVmYXVsdCBwcm9wZXJ0aWVzXG5JdGVtRGV0YWlsLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0aXRsZTogJycsXG4gICAgbGFiZWw6ICcnLFxuICAgIG1haW5JbWc6ICdodHRwczovL2Nkbi52b3gtY2RuLmNvbS91cGxvYWRzL2Nob3J1c19pbWFnZS9pbWFnZS81NTE1OTgyOS8xMi4wLmpwZycsXG59O1xuLy8gSXRlbXMgc2hvd24gaW4gcHJvcGVydHkgcGFuZWxcbkl0ZW1EZXRhaWwucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB0aXRsZTogeyB0eXBlOiBmcmFtZXJfMS5Db250cm9sVHlwZS5TdHJpbmcsIHRpdGxlOiAnVGl0bGUnIH0sXG4gICAgbGFiZWw6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogJ0xhYmVsJyB9LFxuICAgIG1haW5JbWc6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogJ01haW4gSW1hZ2UnIH0sXG59O1xuZXhwb3J0cy5JdGVtRGV0YWlsID0gSXRlbURldGFpbDtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIkl0ZW1EZXRhaWxcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/ItemDetail.tsx\n");

/***/ }),

/***/ "./code/Trigger.tsx":
/*!**************************!*\
  !*** ./code/Trigger.tsx ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst styled_components_1 = __webpack_require__(/*! styled-components */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/styled-components/dist/styled-components.browser.esm.js\");\nconst TriggerFrame = styled_components_1.default(framer_1.Frame) `\n  position: absolute;\n  top: 0;\n  z-index: -1;\n  width: 100% !important;\n  height: 100% !important;\n\n  color: #75be8e;\n  background: rgba(117, 190, 142, 0.6) !important;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n`;\nclass Trigger extends React.Component {\n    render() {\n        window[\"__checkBudget__\"]();\n        return React.createElement(TriggerFrame, { onTap: this.props.onTap }, this.props.text);\n    }\n}\n// Set default properties\nTrigger.defaultProps = {\n    text: 'Trigger',\n};\n// Items shown in property panel\nTrigger.propertyControls = {\n    text: { type: framer_1.ControlType.String, title: 'Text' },\n};\nexports.Trigger = Trigger;\nexports.__info__ = [{ name: \"Trigger\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL1RyaWdnZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCwwQkFBMEI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbURBQW1EO0FBQzlEO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQXNEIiwiZmlsZSI6Ii4vY29kZS9UcmlnZ2VyLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jb25zdCBzdHlsZWRfY29tcG9uZW50c18xID0gcmVxdWlyZShcInN0eWxlZC1jb21wb25lbnRzXCIpO1xuY29uc3QgVHJpZ2dlckZyYW1lID0gc3R5bGVkX2NvbXBvbmVudHNfMS5kZWZhdWx0KGZyYW1lcl8xLkZyYW1lKSBgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAtMTtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG5cbiAgY29sb3I6ICM3NWJlOGU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTE3LCAxOTAsIDE0MiwgMC42KSAhaW1wb3J0YW50O1xuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuYDtcbmNsYXNzIFRyaWdnZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgd2luZG93W1wiX19jaGVja0J1ZGdldF9fXCJdKCk7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFRyaWdnZXJGcmFtZSwgeyBvblRhcDogdGhpcy5wcm9wcy5vblRhcCB9LCB0aGlzLnByb3BzLnRleHQpO1xuICAgIH1cbn1cbi8vIFNldCBkZWZhdWx0IHByb3BlcnRpZXNcblRyaWdnZXIuZGVmYXVsdFByb3BzID0ge1xuICAgIHRleHQ6ICdUcmlnZ2VyJyxcbn07XG4vLyBJdGVtcyBzaG93biBpbiBwcm9wZXJ0eSBwYW5lbFxuVHJpZ2dlci5wcm9wZXJ0eUNvbnRyb2xzID0ge1xuICAgIHRleHQ6IHsgdHlwZTogZnJhbWVyXzEuQ29udHJvbFR5cGUuU3RyaW5nLCB0aXRsZTogJ1RleHQnIH0sXG59O1xuZXhwb3J0cy5UcmlnZ2VyID0gVHJpZ2dlcjtcbmV4cG9ydHMuX19pbmZvX18gPSBbeyBuYW1lOiBcIlRyaWdnZXJcIiwgY2hpbGRyZW46IGZhbHNlLCB0eXBlOiBcImNvbXBvbmVudFwiIH1dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/Trigger.tsx\n");

/***/ }),

/***/ "./code/actionBtn.tsx":
/*!****************************!*\
  !*** ./code/actionBtn.tsx ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __webpack_require__(/*! react */ \"react\");\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst ruucm_util_1 = __webpack_require__(/*! ruucm-util */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/ruucm-util/index.js\");\nconst style = {\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    color: '#8855FF',\n    background: 'rgba(136, 85, 255, 0.1)',\n    overflow: 'hidden',\n};\nclass actionBtn extends React.Component {\n    render() {\n        window[\"__checkBudget__\"]();\n        return (React.createElement(framer_1.Frame, { style: style, onTap: this.props.onTap },\n            ruucm_util_1.log('this.props(actionBtn)', this.props),\n            this.props.text));\n    }\n}\n// Set default properties\nactionBtn.defaultProps = {\n    text: 'click me',\n};\n// Items shown in property panel\nactionBtn.propertyControls = {\n    text: { type: framer_1.ControlType.String, title: 'Text' },\n};\nexports.actionBtn = actionBtn;\nexports.__info__ = [{ name: \"actionBtn\", children: false, type: \"component\" }];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2FjdGlvbkJ0bi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCx3Q0FBd0M7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFtRDtBQUM5RDtBQUNBO0FBQ0EscUJBQXFCLHdEQUF3RCIsImZpbGUiOiIuL2NvZGUvYWN0aW9uQnRuLnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5jb25zdCBmcmFtZXJfMSA9IHJlcXVpcmUoXCJmcmFtZXJcIik7XG5jb25zdCBydXVjbV91dGlsXzEgPSByZXF1aXJlKFwicnV1Y20tdXRpbFwiKTtcbmNvbnN0IHN0eWxlID0ge1xuICAgIGhlaWdodDogJzEwMCUnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICBjb2xvcjogJyM4ODU1RkYnLFxuICAgIGJhY2tncm91bmQ6ICdyZ2JhKDEzNiwgODUsIDI1NSwgMC4xKScsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxufTtcbmNsYXNzIGFjdGlvbkJ0biBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICB3aW5kb3dbXCJfX2NoZWNrQnVkZ2V0X19cIl0oKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KGZyYW1lcl8xLkZyYW1lLCB7IHN0eWxlOiBzdHlsZSwgb25UYXA6IHRoaXMucHJvcHMub25UYXAgfSxcbiAgICAgICAgICAgIHJ1dWNtX3V0aWxfMS5sb2coJ3RoaXMucHJvcHMoYWN0aW9uQnRuKScsIHRoaXMucHJvcHMpLFxuICAgICAgICAgICAgdGhpcy5wcm9wcy50ZXh0KSk7XG4gICAgfVxufVxuLy8gU2V0IGRlZmF1bHQgcHJvcGVydGllc1xuYWN0aW9uQnRuLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0ZXh0OiAnY2xpY2sgbWUnLFxufTtcbi8vIEl0ZW1zIHNob3duIGluIHByb3BlcnR5IHBhbmVsXG5hY3Rpb25CdG4ucHJvcGVydHlDb250cm9scyA9IHtcbiAgICB0ZXh0OiB7IHR5cGU6IGZyYW1lcl8xLkNvbnRyb2xUeXBlLlN0cmluZywgdGl0bGU6ICdUZXh0JyB9LFxufTtcbmV4cG9ydHMuYWN0aW9uQnRuID0gYWN0aW9uQnRuO1xuZXhwb3J0cy5fX2luZm9fXyA9IFt7IG5hbWU6IFwiYWN0aW9uQnRuXCIsIGNoaWxkcmVuOiBmYWxzZSwgdHlwZTogXCJjb21wb25lbnRcIiB9XTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./code/actionBtn.tsx\n");

/***/ }),

/***/ "./code/canvas.tsx":
/*!*************************!*\
  !*** ./code/canvas.tsx ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// WARNING: this file is auto generated, any changes will be lost\nconst framer_1 = __webpack_require__(/*! framer */ \"framer\");\nconst canvas = framer_1.CanvasStore.shared({\"children\":[]});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb2RlL2NhbnZhcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0EsNkNBQTZDIiwiZmlsZSI6Ii4vY29kZS9jYW52YXMudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBXQVJOSU5HOiB0aGlzIGZpbGUgaXMgYXV0byBnZW5lcmF0ZWQsIGFueSBjaGFuZ2VzIHdpbGwgYmUgbG9zdFxuY29uc3QgZnJhbWVyXzEgPSByZXF1aXJlKFwiZnJhbWVyXCIpO1xuY29uc3QgY2FudmFzID0gZnJhbWVyXzEuQ2FudmFzU3RvcmUuc2hhcmVkKCk7IC8vIENBTlZBU19EQVRBO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./code/canvas.tsx\n");

/***/ }),

/***/ "./package.js":
/*!********************!*\
  !*** ./package.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// The template for the dynamic webpack entry. Be aware of the variables\n\nconst packageJson = __webpack_require__(/*! ./package.json */ \"./package.json\")\n\nconst package = {\n    packageJson,\n    sourceModules: {},\n    dependencies: {},\n}\n\n// This is a special webpack thing that watches the whole directory\n// https://github.com/webpack/docs/wiki/context\nconst ctx = __webpack_require__(\"./code sync recursive \\\\.(t|j)s(x?)|\\\\.css$\")\n\nctx.keys().forEach(key => {\n    package.sourceModules[key] = () => ctx(key)\n})\n\n// The packages are passed in through a template\nconst packages = {}\n\n                packages[\"@framer/framer.examples\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/framer.examples */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.examples/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"main\":\"build/index.js\",\"devDependencies\":{\"@types/react\":\"^16.0.31\",\"framer\":\"^0.7.5\"},\"peerDependencies\":{\"framer\":\"^0.7.5\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"name\":\"@framer/framer.examples\",\"author\":\"Framer\",\"version\":\"1.4.0\",\"license\":\"MIT\",\"framer\":{\"id\":\"d52e8201-9936-42d9-8208-5c36c6f0e1bc\",\"displayName\":\"Example Kit\"},\"keywords\":[\"interactive\",\"examples\",\"ios\",\"kit\",\"apple\",\"ui\"],\"design\":{\"root\":{\"__class\":\"RootNode\",\"children\":[{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0,\"centerAnchorY\":0,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":68,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.8748125937031485,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./Switch.tsx_Switch\",\"codeComponentProps\":{\"enabled\":true,\"placeholders\":null,\"tint\":\"#4BD964\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":31,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"PeFszPnaE\",\"intrinsicHeight\":31,\"intrinsicWidth\":51,\"invert\":0,\"invertEnabled\":0,\"left\":null,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"k2x92OZXY\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":51,\"widthType\":0},{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.0952023988005997,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":12,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.7637795275590551,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./SearchBar.tsx_SearchBar\",\"codeComponentProps\":{\"backgroundColor\":\"hsl(257, 53%, 49%)\",\"placeholder\":\"Search\",\"placeholders\":null,\"textColor\":\"black\",\"value\":\"\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":36,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"Nrw9MCYGV\",\"intrinsicHeight\":36,\"intrinsicWidth\":200,\"invert\":0,\"invertEnabled\":0,\"left\":16,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"JNRjm9mRa\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":16,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":343,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.07874015748031496,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./StatusBar.tsx_StatusBar\",\"codeComponentProps\":{\"appearance\":\"light\",\"batteryLevel\":100,\"carrier\":\"Framer\",\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":20,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"IpfJvzKAW\",\"intrinsicHeight\":20,\"intrinsicWidth\":160,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"JNRjm9mRa\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.40551181102362205,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./SegmentedControl.tsx_SegmentedControl\",\"codeComponentProps\":{\"currentSegment\":0,\"placeholders\":null,\"segment1\":\"A\",\"segment2\":\"B\",\"segment3\":\"C\",\"segment4\":\"\",\"textColor\":\"rgba(119, 85, 204, 1.00)\",\"tintColor\":\"#FFFFFF\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":27,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"j7juBFVC4\",\"intrinsicHeight\":27,\"intrinsicWidth\":343,\"invert\":0,\"invertEnabled\":0,\"left\":16,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"JNRjm9mRa\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":16,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":38,\"visible\":true,\"width\":343,\"widthType\":0}],\"clip\":false,\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"#7755CC\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":127,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"JNRjm9mRa\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"isTarget\":false,\"left\":0,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"k2x92OZXY\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":17,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5013333333333333,\"centerAnchorY\":0.95952023988006,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./PageControl.tsx_PageControl\",\"codeComponentProps\":{\"currentIndicatorColor\":\"black\",\"currentPage\":0,\"indicatorColor\":\"rgba(0,0,0,.32)\",\"numberOfPages\":3,\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":20,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"Hxen0FnHC\",\"intrinsicHeight\":20,\"intrinsicWidth\":100,\"invert\":0,\"invertEnabled\":0,\"left\":null,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"k2x92OZXY\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":100,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":130,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.7556221889055472,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./Slider.tsx_Slider\",\"codeComponentProps\":{\"placeholders\":null,\"tint\":\"#007AFF\",\"value\":31},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":66,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"J1haEr0wK\",\"intrinsicHeight\":44,\"intrinsicWidth\":120,\"invert\":0,\"invertEnabled\":0,\"left\":16,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"k2x92OZXY\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":16,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":343,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":263,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5013333333333333,\"centerAnchorY\":0.5757121439280359,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./ProgressIndicator.tsx_ProgressIndicator\",\"codeComponentProps\":{\"indicatorColor\":\"rgba(142,142,147,100)\",\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":40,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"SptNMVm63\",\"intrinsicHeight\":40,\"intrinsicWidth\":40,\"invert\":0,\"invertEnabled\":0,\"left\":null,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"k2x92OZXY\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":40,\"widthType\":0}],\"clip\":true,\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":\"apple-iphone-8-space-gray\",\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":667,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"k2x92OZXY\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"isTarget\":false,\"left\":919,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"xi07Ghds6\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":173,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0,\"centerAnchorY\":0,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.047976011994003,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./NavigationBar.tsx_NavigationBar\",\"codeComponentProps\":{\"appearance\":\"light\",\"backItemTitle\":\"Previous\",\"customBackground\":\"#09F\",\"placeholders\":null,\"rightItemTitle\":\"Edit\",\"showChevron\":true,\"textColor\":\"black\",\"tintColor\":\"#007AFF\",\"title\":\"Title\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":64,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"Ie2nmz6lK\",\"intrinsicHeight\":64,\"intrinsicWidth\":375,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"MSc4rc7L7\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.014992503748125937,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./StatusBar.tsx_StatusBar\",\"codeComponentProps\":{\"appearance\":\"dark\",\"batteryLevel\":19,\"carrier\":\"Framer\",\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":20,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"efdPxNojG\",\"intrinsicHeight\":20,\"intrinsicWidth\":200,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"MSc4rc7L7\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":0,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.967016491754123,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./Toolbar.tsx_Toolbar\",\"codeComponentProps\":{\"action1\":\"Action 1\",\"action2\":\"Action 2\",\"action3\":\"Action 3\",\"action4\":\"\",\"appearance\":\"light\",\"placeholders\":null,\"tintColor\":\"#007AFF\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":44,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"IWsaACG5S\",\"intrinsicHeight\":44,\"intrinsicWidth\":375,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"MSc4rc7L7\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.49866666666666665,\"centerAnchorY\":0.4992503748125937,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./AlertView.tsx_AlertView\",\"codeComponentProps\":{\"destructive\":false,\"destructiveColor\":\"#FF3B30\",\"message\":\"Your current location can not be determined at this time.\",\"placeholders\":null,\"primary\":\"OK\",\"secondary\":\"\",\"tintColor\":\"#007AFF\",\"title\":\"Current Location Not Available\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":140,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"V_NtP4Lil\",\"intrinsicHeight\":140,\"intrinsicWidth\":270,\"invert\":0,\"invertEnabled\":0,\"left\":52,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"MSc4rc7L7\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":53,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":270,\"widthType\":0}],\"clip\":true,\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":\"apple-iphone-8-space-gray\",\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":667,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"MSc4rc7L7\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"isTarget\":false,\"left\":1394,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"xi07Ghds6\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":173,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0,\"centerAnchorY\":0,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.08695652173913043,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./NavigationBarLarge.tsx_NavigationBarLarge\",\"codeComponentProps\":{\"appearance\":\"light\",\"backItemTitle\":\"Previous\",\"customBackground\":\"#09F\",\"placeholders\":null,\"rightItemTitle\":\"Edit\",\"showChevron\":true,\"textColor\":\"black\",\"tintColor\":\"#007AFF\",\"title\":\"Large Title\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":116,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"tI7Gq_W90\",\"intrinsicHeight\":116,\"intrinsicWidth\":375,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"ANGF2a7cj\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":0,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.5,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./ActionSheet.tsx_ActionSheet\",\"codeComponentProps\":{\"action1\":\"Action 1\",\"action2\":\"Action 2\",\"action3\":\"\",\"action4\":\"\",\"dimOverlay\":true,\"placeholders\":null,\"tintColor\":\"#007AFF\",\"title\":\"A short description of the actions goes here.\"},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":667,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"LC9yaQdBT\",\"intrinsicHeight\":375,\"intrinsicWidth\":375,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"ANGF2a7cj\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0},{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.014992503748125937,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./StatusBar.tsx_StatusBar\",\"codeComponentProps\":{\"appearance\":\"light\",\"batteryLevel\":100,\"carrier\":\"Framer\",\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":20,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"vZ1S6fgNm\",\"intrinsicHeight\":20,\"intrinsicWidth\":200,\"invert\":0,\"invertEnabled\":0,\"left\":0,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"ANGF2a7cj\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":0,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":0,\"visible\":true,\"width\":375,\"widthType\":0}],\"clip\":true,\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":\"apple-iphone-8-space-gray\",\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":667,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"ANGF2a7cj\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"isTarget\":false,\"left\":1869,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"xi07Ghds6\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":173,\"visible\":true,\"width\":375,\"widthType\":0}],\"id\":\"xi07Ghds6\",\"name\":null,\"originalid\":null,\"parentid\":null,\"startPoint\":null,\"visible\":false},\"version\":44}}\n                    return package\n                }\n\n                packages[\"@framer/koenbok.signature\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/koenbok.signature */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/koenbok.signature/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@types/react\":\"^16.0.31\",\"framer\":\"^0.7.5\"},\"peerDependencies\":{\"framer\":\"^0.7.5\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"7ea35cab-4d4a-4859-ab04-268ca5b74084\",\"displayName\":\"Signature\"},\"author\":\"Koen Bok\",\"name\":\"@framer/koenbok.signature\",\"version\":\"1.4.0\",\"design\":{\"root\":{\"__class\":\"RootNode\",\"children\":[{\"__class\":\"FrameNode\",\"aspectRatio\":null,\"blendingEnabled\":0,\"blendingMode\":\"normal\",\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0,\"centerAnchorY\":0,\"children\":[{\"__class\":\"CodeComponentNode\",\"aspectRatio\":null,\"blur\":12,\"blurEnabled\":0,\"blurType\":\"layer\",\"borderBottom\":1,\"borderColor\":\"#222\",\"borderEnabled\":0,\"borderLeft\":1,\"borderPerSide\":false,\"borderRight\":1,\"borderStyle\":\"solid\",\"borderTop\":1,\"borderWidth\":1,\"bottom\":null,\"boxShadows\":[],\"brightness\":100,\"brightnessEnabled\":0,\"centerAnchorX\":0.5,\"centerAnchorY\":0.4986301369863014,\"children\":[],\"clip\":true,\"codeComponentIdentifier\":\"./Signature.tsx_Signature\",\"codeComponentProps\":{\"background\":\"#fff\",\"color\":\"#000\",\"maxWidth\":2.5,\"minWidth\":0.5,\"placeholders\":null},\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"exportOptions\":[],\"fillColor\":\"rgba(255,255,255,1)\",\"fillEnabled\":false,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":200,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"qBjadCzDA\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"left\":null,\"locked\":false,\"name\":null,\"opacity\":1,\"originalid\":null,\"parentid\":\"cu6nKwnUp\",\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":null,\"visible\":true,\"width\":200,\"widthType\":0}],\"clip\":true,\"codeOverrideFile\":null,\"codeOverrideIdentifier\":null,\"codeOverrideName\":null,\"constraintsLocked\":false,\"contrast\":100,\"contrastEnabled\":0,\"deviceType\":null,\"exportIncludesBackground\":true,\"exportOptions\":[],\"fillColor\":\"white\",\"fillEnabled\":true,\"fillGradient\":{\"__class\":\"LinearGradient\",\"alpha\":1,\"angle\":0,\"end\":\"rgba(0,0,0,0)\",\"start\":\"black\"},\"fillImage\":null,\"fillImagePixelHeight\":null,\"fillImagePixelWidth\":null,\"fillImageResize\":\"fill\",\"fillType\":\"color\",\"grayscale\":0,\"grayScaleEnabled\":0,\"height\":365,\"heightType\":0,\"hueRotate\":0,\"hueRotateEnabled\":0,\"id\":\"cu6nKwnUp\",\"intrinsicHeight\":null,\"intrinsicWidth\":null,\"invert\":0,\"invertEnabled\":0,\"isExternalMaster\":null,\"isMaster\":false,\"isTarget\":false,\"left\":382,\"locked\":false,\"name\":null,\"navigationTarget\":null,\"navigationTransition\":\"push\",\"navigationTransitionDirection\":\"left\",\"opacity\":1,\"originalid\":null,\"parentid\":\"kgrSQ8OUs\",\"previewSettings\":null,\"radius\":0,\"radiusBottomLeft\":0,\"radiusBottomRight\":0,\"radiusIsRelative\":false,\"radiusPerCorner\":false,\"radiusTopLeft\":0,\"radiusTopRight\":0,\"replicaInfo\":null,\"right\":null,\"rotation\":0,\"saturate\":100,\"saturateEnabled\":0,\"sepia\":0,\"sepiaEnabled\":0,\"top\":109,\"visible\":true,\"width\":390,\"widthType\":0}],\"id\":\"kgrSQ8OUs\",\"name\":null,\"originalid\":null,\"parentid\":null,\"startPoint\":null,\"visible\":false},\"version\":44}}\n                    return package\n                }\n\n                packages[\"@framer/framer.device-skin-apple-iphone8-gold\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! @framer/framer.device-skin-apple-iphone8-gold */ \"../../../Caches/Framer/projects/fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9/node_modules/@framer/framer.device-skin-apple-iphone8-gold/build/index.js\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"@framer/framer.device-skin-apple-iphone8-gold\",\"version\":\"1.0.0\",\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"typescript\":\"^2.9.2\"},\"framer\":{\"components\":[{\"name\":\"DeviceSkin\",\"type\":\"deviceSkin\"}]}}\n                    return package\n                }\n\n                packages[\"framer\"] = () => {\n                    var package = {}\n                    try {\n                        package = __webpack_require__(/*! framer */ \"framer\")\n                    } catch (e) {\n                        console.log(e)\n                    }\n                    package.__framer__ = package.__framer__ || {}\n                    package.__framer__.packageJson = {\"name\":\"framer\",\"version\":\"0.7.5\",\"main\":\"build/framer.js\",\"types\":\"build/framer.d.ts\",\"author\":\"Framer\",\"license\":\"MIT\",\"devDependencies\":{\"@types/chalk\":\"^2.2.0\",\"@types/draft-js\":\"0.10.19\",\"@types/enzyme\":\"^3.1.10\",\"@types/hsluv\":\"https://github.com/framer/typed_hsluv#bump\",\"@types/jest\":\"^23.0.0\",\"@types/jest-diff\":\"^20.0.0\",\"@types/node\":\"^9.6.0\",\"@types/react\":\"16.3.12\",\"@types/react-dom\":\"^16.0.5\",\"cache-loader\":\"^1.2.2\",\"chalk\":\"^2.4.1\",\"convert-tsconfig-paths-to-webpack-aliases\":\"^0.9.2\",\"css.escape\":\"^1.5.1\",\"dts-bundle\":\"^0.7.3\",\"enzyme\":\"^3.3.0\",\"enzyme-adapter-react-16\":\"^1.1.1\",\"fork-ts-checker-webpack-plugin\":\"^0.4.1\",\"hoist-non-react-statics\":\"^2.5.0\",\"jest\":\"^23.1.0\",\"jest-diff\":\"^22.0.3\",\"jest-junit\":\"^3.4.1\",\"progress-bar-webpack-plugin\":\"^1.11.0\",\"raf\":\"^3.4.0\",\"react\":\"^16.3.2\",\"react-dev-utils\":\"^5.0.1\",\"react-dom\":\"^16.3.2\",\"ts-jest\":\"^22.4.5\",\"ts-loader\":\"^4.1.0\",\"tslint\":\"^5.10.0\",\"tslint-microsoft-contrib\":\"^5.0.3\",\"typescript\":\"^2.8.3\",\"watch\":\"^1.0.2\",\"webpack\":\"^4.4.1\",\"webpack-cli\":\"^2.0.13\",\"webpack-dev-server\":\"^3.1.4\",\"xcssmatrix\":\"^0.2.2\"},\"peerDependencies\":{\"react\":\"^16.3.2\",\"react-dom\":\"^16.3.2\"},\"dependencies\":{\"draft-js\":\"0.10.4\",\"eventemitter3\":\"^3.1.0\",\"hsluv\":\"^0.0.3\",\"immutable\":\"^3.8.2\"},\"framer\":{\"components\":[{\"name\":\"Scroll\",\"children\":true,\"properties\":[{\"key\":\"direction\",\"title\":\"Direction\",\"kind\":\"enum\",\"options\":[\"horizontal\",\"vertical\",\"both\"]}]},{\"name\":\"Page\",\"children\":true},{\"name\":\"Stack\"},{\"name\":\"FramerAppleWatch38\",\"type\":\"device\"},{\"name\":\"FramerAppleWatch42\",\"type\":\"device\"},{\"name\":\"FramerSonySmartWatch\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneSE\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhone8Plus\",\"type\":\"device\"},{\"name\":\"FramerAppleIPhoneX\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus4\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus5X\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexus6\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2\",\"type\":\"device\"},{\"name\":\"FramerGooglePixel2XL\",\"type\":\"device\"},{\"name\":\"FramerHTCOneA9\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftLumia950\",\"type\":\"device\"},{\"name\":\"FramerSamsungNote5\",\"type\":\"device\"},{\"name\":\"FramerSamsungGalaxyS8\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadAir\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadMini\",\"type\":\"device\"},{\"name\":\"FramerAppleIPadPro\",\"type\":\"device\"},{\"name\":\"FramerGoogleNexusTablet\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro3\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfacePro4\",\"type\":\"device\"},{\"name\":\"FramerAppleIMac\",\"type\":\"device\"},{\"name\":\"FramerAppleThunderboltDisplay\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBook\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookAir\",\"type\":\"device\"},{\"name\":\"FramerAppleMacBookPro\",\"type\":\"device\"},{\"name\":\"FramerDellXPS\",\"type\":\"device\"},{\"name\":\"FramerMicrosoftSurfaceBook\",\"type\":\"device\"},{\"name\":\"FramerSonyW850C\",\"type\":\"device\"}]},\"scripts\":{\"coverage\":\"jest --config jest.json --coverage\",\"test\":\"jest --config jest.json\",\"watch\":\"jest --config jest.json --watch\"}}\n                    return package\n                }\n\npackage.dependencies = packages\n\nexports.__framer__ = package\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./package.js\n");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: main, license, devDependencies, peerDependencies, framer, author, dependencies, default */
/***/ (function(module) {

eval("module.exports = {\"main\":\"build/index.js\",\"license\":\"MIT\",\"devDependencies\":{\"@framer/framer.device-skin-apple-iphone8-gold\":\"^1.0.0\",\"@types/react\":\"^16.0.31\",\"framer\":\"^0.7.5\"},\"peerDependencies\":{\"framer\":\"^0.7.5\",\"react\":\"^16.3.0\",\"react-dom\":\"^16.3.0\"},\"framer\":{\"id\":\"fbd7e677-14e5-4bc5-aae0-9ba354e0fcf9\"},\"author\":\". ruucm\",\"dependencies\":{\"@framer/framer.examples\":\"^1.4.0\",\"@framer/koenbok.signature\":\"^1.4.0\",\"react-redux\":\"^5.0.7\",\"reselect\":\"^3.0.1\",\"ruucm-blocks\":\"https://github.com/ruucm/ruucm-blocks\",\"ruucm-util\":\"^0.11.0\",\"styled-components\":\"^3.4.5\"}};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3BhY2thZ2UuanNvbi5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./package.json\n");

/***/ }),

/***/ "framer":
/*!******************************************************************************************!*\
  !*** external {"root":"Framer","commonjs2":"framer","commonjs":"framer","amd":"framer"} ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_framer__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiRnJhbWVyXCIsXCJjb21tb25qczJcIjpcImZyYW1lclwiLFwiY29tbW9uanNcIjpcImZyYW1lclwiLFwiYW1kXCI6XCJmcmFtZXJcIn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnJhbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX2ZyYW1lcl9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///framer\n");

/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_react__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZWFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9yZWFjdF9fOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///react\n");

/***/ })

/******/ });
});